//

/**
 * Source of generating code:
 * https://github.com/ytliu0/ElpMpp02
 */

// ----------------------------------------------------------------
//  This code computes a truncated ELP/MPP02 series. 
//
//  ELP/MPP02 is a semi-analytic solution for the lunar motion developed by
//  J. Chapront and G. Francou in 2002. It is an improvement of the ELP2000-82B
//  lunar theory.
//
//  ELP/MPP02 source paper:
//    The lunar theory ELP revisited. Introduction of new planetary perturbations 
//     by J. Chapront and G. Francou, Astronomy and Astrophysics, v.404, p.735-742 (2003)
//     http://adsabs.harvard.edu/abs/2003A%26A...404..735C
//
//    Original FORTRAN code and data files:
//    ftp://cyrano-se.obspm.fr/pub/2_lunar_solutions/2_elpmpp02/
//
//  This code is generated by "ElpMpp_JavaScript.h" using the following parameters: 
//  corr = 0,
//  AthU = 4.8481368110953602e-09,
//  AthV = 4.8481368110953602e-09,
//  AthR = 0.10000000000000001,
//  tau = 50,
//
//  Usage: Simply call the function getX2000_C() to
//         compute the rectangular geocentric coordinates of the Moon
//         with respect to the mean ecliptic and equinox of J2000.0.
//
// **Note: You should use the minified version of the JavaScript code
//         instead of this file to optimize performance.**
//
// ---------------------------------------------------------------- 

"use strict";

// restrict x to [-pi,pi) 
var mod2pi_C = function(x) {
  return x - 6.283185307179586*Math.floor(0.5*(x*0.3183098861837907 + 1));
};

// Calculate the Moon's geocentric X,Y,Z coordinates with respect to 
// J2000.0 mean ecliptic and equinox.
function getX2000_C(T) {
  var T2 = T*T;
  var T3 = T*T2;
  var T4 = T2*T2;
  var T5 = T2*T3;

  // Moon's longitude, latitude and distance
  var args = compute_Elp_arguments_C(T);
  var longM = args.W1 + Elp_main_long_C(args) + Elp_pert_longT0_C(args) +
              mod2pi_C(Elp_pert_longT1_C(args)*T) +
              mod2pi_C(Elp_pert_longT2_C(args)*T2) +
              mod2pi_C(Elp_pert_longT3_C(args)*T3);
  var latM =  Elp_main_lat_C(args) + Elp_pert_latT0_C(args) +
              mod2pi_C(Elp_pert_latT1_C(args)*T) +
              mod2pi_C(Elp_pert_latT2_C(args)*T2);
  var r = 0.99999994982652041*(Elp_main_dist_C(args) + Elp_pert_distT0_C(args) +
              Elp_pert_distT1_C(args)*T +
              Elp_pert_distT2_C(args)*T2 +
              Elp_pert_distT3_C(args)*T3);

  var x0 = r*Math.cos(longM)*Math.cos(latM);
  var y0 = r*Math.sin(longM)*Math.cos(latM);
  var z0 = r*Math.sin(latM);

  // Precession matrix
  var P = 0.10180391e-4*T + 0.47020439e-6*T2 - 0.5417367e-9*T3 
             - 0.2507948e-11*T4 + 0.463486e-14*T5;
  var Q = -0.113469002e-3*T + 0.12372674e-6*T2 + 0.12654170e-8*T3 
             - 0.1371808e-11*T4 - 0.320334e-14*T5;
  var sq = Math.sqrt(1 - P*P - Q*Q);
  var p11 = 1 - 2*P*P;
  var p12 = 2*P*Q;
  var p13 = 2*P*sq;
  var p21 = 2*P*Q;
  var p22 = 1-2*Q*Q;
  var p23 = -2*Q*sq;
  var p31 = -2*P*sq;
  var p32 = 2*Q*sq;
  var p33 = 1 - 2*P*P - 2*Q*Q;

  // Finally, components of position vector wrt J2000.0 mean ecliptic and equinox
  var X = p11*x0 + p12*y0 + p13*z0;
  var Y = p21*x0 + p22*y0 + p23*z0;
  var Z = p31*x0 + p32*y0 + p33*z0;

  return {X:X, Y:Y, Z:Z, rGeo:r};
}

function compute_Elp_arguments_C(T) {
  var T2 = T*T;
  var T3 = T*T2;
  var T4 = T2*T2;

  var W1 = -2.4728413868576777  + mod2pi_C(8399.6847302074329*T)  + mod2pi_C(-3.3191992975274604e-05*T2)  + mod2pi_C(3.2017095500473753e-08*T3)  + mod2pi_C(-1.5363745554361197e-10*T4);
  var W2 = 1.4547893480700087  + mod2pi_C(70.993305482306624*T)  + mod2pi_C(-0.00018550474361662286*T2)  + mod2pi_C(-2.1839401892941265e-07*T3)  + mod2pi_C(1.0327016221314225e-09*T4);
  var W3 = 2.1824386755573189  + mod2pi_C(-33.781427433053153*T)  + mod2pi_C(3.082930198175539e-05*T2)  + mod2pi_C(3.6967043184602116e-08*T3)  + mod2pi_C(-1.738541860458796e-10*T4);
  var Ea = 1.753469752356706  + mod2pi_C(628.30758511545343*T)  + mod2pi_C(-9.7932363584126268e-08*T2)  + mod2pi_C(4.3633231299858238e-11*T3)  + mod2pi_C(7.2722052166430391e-13*T4);
  var pomp = 1.7965954341045842  + mod2pi_C(0.0056298669711442699*T)  + mod2pi_C(2.5659491293243858e-06*T2)  + mod2pi_C(-5.7275888286280579e-10*T3)  + mod2pi_C(5.5166948773454105e-11*T4);
  var Me = -1.880576672960468 + mod2pi_C(2608.7903140599633*T);
  var Ve = -3.1070508500284779 + mod2pi_C(1021.3285547385308*T);
  var EM = 1.753469946863955 + mod2pi_C(628.30758504554331*T);
  var Ma = -0.079685708488291263 + mod2pi_C(334.06124347172772*T);
  var Ju = 0.59954667808842876 + mod2pi_C(52.969097211191368*T);
  var Sa = 0.87401678344988065 + mod2pi_C(21.329907977851818*T);
  var Ur = -0.80195768136925494 + mod2pi_C(7.4781665690567305*T);
  var Ne = -0.97129120218888665 + mod2pi_C(3.8132918131353417*T);

  var args = {};
  // Mean longitude of the Moon
  args.W1 = mod2pi_C(W1);
  // Arguments of Delaunay
  args.D = mod2pi_C(W1-Ea + Math.PI);
  args.F = mod2pi_C(W1-W3);
  args.L = mod2pi_C(W1-W2);
  args.Lp = mod2pi_C(Ea-pomp);

  //zeta
  args.zeta = mod2pi_C(W1 + 0.02438029560881907*T);

  // Planetary arguments (mean longitudes and mean motions)
  args.Me = mod2pi_C(Me);
  args.Ve = mod2pi_C(Ve);
  args.EM = mod2pi_C(EM);
  args.Ma = mod2pi_C(Ma);
  args.Ju = mod2pi_C(Ju);
  args.Sa = mod2pi_C(Sa);
  args.Ur = mod2pi_C(Ur);
  args.Ne = mod2pi_C(Ne);

  return args;
}

// Sum the ELP/MPP02 series: main problem, longitude (371 terms)
function Elp_main_long_C(args) {
  var s = 0.0;
  s += -0.0019954724290059968 * Math.sin(2*args.F);
  s += 2.0377952988042839e-06 * Math.sin(4*args.F);
  s += -3.8875913559605008e-07 * Math.sin(-4*args.F + args.L);
  s += 0.00019166285167957053 * Math.sin(-2*args.F + args.L);
  s += 0.10975980969278169 * Math.sin(args.L);
  s += -0.00021864907544703928 * Math.sin(2*args.F + args.L);
  s += 4.4077802802078354e-07 * Math.sin(4*args.F + args.L);
  s += -6.6544075707231412e-06 * Math.sin(-2*args.F + 2*args.L);
  s += 0.003728341895368479 * Math.sin(2*args.L);
  s += -1.9380976529961546e-05 * Math.sin(2*args.F + 2*args.L);
  s += 6.2878356449940881e-08 * Math.sin(4*args.F + 2*args.L);
  s += -2.7556443516897509e-07 * Math.sin(-2*args.F + 3*args.L);
  s += 0.00017513319303640842 * Math.sin(3*args.L);
  s += -1.5933685993839683e-06 * Math.sin(2*args.F + 3*args.L);
  s += 7.4174199036311808e-09 * Math.sin(4*args.F + 3*args.L);
  s += -1.7162194412487212e-08 * Math.sin(-2*args.F + 4*args.L);
  s += 9.3747571824365103e-06 * Math.sin(4*args.L);
  s += -1.2614714061104737e-07 * Math.sin(2*args.F + 4*args.L);
  s += 5.381475201226222e-07 * Math.sin(5*args.L);
  s += -9.7446617223708518e-09 * Math.sin(2*args.F + 5*args.L);
  s += 3.2240417616270653e-08 * Math.sin(6*args.L);
  s += -1.6095345897391042e-08 * Math.sin(-5*args.L + args.Lp);
  s += -2.2795250443714624e-07 * Math.sin(-4*args.L + args.Lp);
  s += 3.0202408986828204e-08 * Math.sin(-2*args.F - 3*args.L + args.Lp);
  s += -3.2452396382487743e-06 * Math.sin(-3*args.L + args.Lp);
  s += 5.1387481526095924e-09 * Math.sin(2*args.F - 3*args.L + args.Lp);
  s += 2.503935689231354e-07 * Math.sin(-2*args.F - 2*args.L + args.Lp);
  s += -4.6925391548909678e-05 * Math.sin(-2*args.L + args.Lp);
  s += 1.1775522740758703e-07 * Math.sin(2*args.F - 2*args.L + args.Lp);
  s += 1.4619761674623286e-06 * Math.sin(-2*args.F - args.L + args.Lp);
  s += -0.00071423422579040027 * Math.sin(-args.L + args.Lp);
  s += -3.9020596021047668e-07 * Math.sin(2*args.F - args.L + args.Lp);
  s += 3.6364012364032558e-07 * Math.sin(-2*args.F + args.Lp);
  s += -0.0032308834069058171 * Math.sin(args.Lp);
  s += 2.0042095886469238e-06 * Math.sin(2*args.F + args.Lp);
  s += -4.0150159105553968e-07 * Math.sin(-2*args.F + args.L + args.Lp);
  s += -0.00053029096778333654 * Math.sin(args.L + args.Lp);
  s += 1.2768355655708457e-06 * Math.sin(2*args.F + args.L + args.Lp);
  s += 1.2977801724131553e-07 * Math.sin(-2*args.F + 2*args.L + args.Lp);
  s += -3.6992036939747581e-05 * Math.sin(2*args.L + args.Lp);
  s += 2.1030151223354729e-07 * Math.sin(2*args.F + 2*args.L + args.Lp);
  s += 8.0474972718775687e-09 * Math.sin(-2*args.F + 3*args.L + args.Lp);
  s += -2.6467077455305048e-06 * Math.sin(3*args.L + args.Lp);
  s += 2.5499937887363395e-08 * Math.sin(2*args.F + 3*args.L + args.Lp);
  s += -1.9135018638072743e-07 * Math.sin(4*args.L + args.Lp);
  s += -1.3913756687968302e-08 * Math.sin(5*args.L + args.Lp);
  s += -5.7689043857470051e-09 * Math.sin(-4*args.L + 2*args.Lp);
  s += -7.3395777039837418e-08 * Math.sin(-3*args.L + 2*args.Lp);
  s += -9.3615812234520113e-07 * Math.sin(-2*args.L + 2*args.Lp);
  s += 2.2929635128909974e-08 * Math.sin(-2*args.F - args.L + 2*args.Lp);
  s += -1.2449753206608643e-05 * Math.sin(-args.L + 2*args.Lp);
  s += -1.720932736663617e-08 * Math.sin(-2*args.F + 2*args.Lp);
  s += -3.6106475772566604e-05 * Math.sin(2*args.Lp);
  s += 2.5159562279608581e-08 * Math.sin(2*args.F + 2*args.Lp);
  s += -5.6320160070966233e-06 * Math.sin(args.L + 2*args.Lp);
  s += 1.308881322487876e-08 * Math.sin(2*args.F + args.L + 2*args.Lp);
  s += -3.1573699841939403e-07 * Math.sin(2*args.L + 2*args.Lp);
  s += -1.6531007296642707e-08 * Math.sin(3*args.L + 2*args.Lp);
  s += -2.0166081844657568e-08 * Math.sin(-2*args.L + 3*args.Lp);
  s += -2.4926416733875068e-07 * Math.sin(-args.L + 3*args.Lp);
  s += -4.91353209567072e-07 * Math.sin(3*args.Lp);
  s += -8.7063070151377658e-08 * Math.sin(args.L + 3*args.Lp);
  s += -5.2352229377911113e-09 * Math.sin(-args.L + 4*args.Lp);
  s += -6.2047229248130768e-09 * Math.sin(4*args.Lp);
  s += 1.2312929183249093e-08 * Math.sin(args.D - 3*args.Lp);
  s += 1.1101451381543132e-08 * Math.sin(args.D - args.L - 2*args.Lp);
  s += 2.0864854713923004e-07 * Math.sin(args.D - 2*args.Lp);
  s += -3.3644917307746377e-08 * Math.sin(args.D - 2*args.L - args.Lp);
  s += -6.6106901037203703e-07 * Math.sin(args.D - args.L - args.Lp);
  s += -6.2101271112075255e-08 * Math.sin(args.D - 2*args.F - args.Lp);
  s += -2.7000245202837899e-06 * Math.sin(args.D - args.Lp);
  s += 7.5142128008198223e-09 * Math.sin(args.D + 2*args.F - args.Lp);
  s += -1.0277511108492967e-08 * Math.sin(args.D - 2*args.F + args.L - args.Lp);
  s += -5.8529552716482881e-07 * Math.sin(args.D + args.L - args.Lp);
  s += -7.1895514398689271e-08 * Math.sin(args.D + 2*args.L - args.Lp);
  s += -7.2234899050140713e-09 * Math.sin(args.D + 3*args.L - args.Lp);
  s += -4.6300020442405015e-08 * Math.sin(args.D - 4*args.L);
  s += -6.2114634732408154e-07 * Math.sin(args.D - 3*args.L);
  s += 1.4010936178617965e-08 * Math.sin(args.D - 2*args.F - 2*args.L);
  s += -8.4986186194231609e-06 * Math.sin(args.D - 2*args.L);
  s += -6.8842437868139062e-09 * Math.sin(args.D + 2*args.F - 2*args.L);
  s += -1.1533530300207746e-07 * Math.sin(args.D - 2*args.F - args.L);
  s += -9.0101201318386153e-05 * Math.sin(args.D - args.L);
  s += 7.7472055697128241e-08 * Math.sin(args.D + 2*args.F - args.L);
  s += 5.9630015122712507e-09 * Math.sin(args.D - 4*args.F);
  s += -2.8279663798728683e-06 * Math.sin(args.D - 2*args.F);
  s += -0.00060595949840778834 * Math.sin(args.D);
  s += 1.2328119349190542e-06 * Math.sin(args.D + 2*args.F);
  s += -1.9450416898573574e-07 * Math.sin(args.D - 2*args.F + args.L);
  s += -4.0981776425288069e-05 * Math.sin(args.D + args.L);
  s += 2.1573879551743106e-07 * Math.sin(args.D + 2*args.F + args.L);
  s += -2.8312742836928025e-06 * Math.sin(args.D + 2*args.L);
  s += 2.6179571966340108e-08 * Math.sin(args.D + 2*args.F + 2*args.L);
  s += -1.9751421026220725e-07 * Math.sin(args.D + 3*args.L);
  s += -1.3817278448017667e-08 * Math.sin(args.D + 4*args.L);
  s += 7.5143907730862552e-09 * Math.sin(args.D - 4*args.L + args.Lp);
  s += 1.113096482498115e-07 * Math.sin(args.D - 3*args.L + args.Lp);
  s += 1.6951428269268446e-06 * Math.sin(args.D - 2*args.L + args.Lp);
  s += 5.224802654362182e-06 * Math.sin(args.D - args.L + args.Lp);
  s += 8.7045714470148982e-05 * Math.sin(args.D + args.Lp);
  s += -1.7389332445785555e-07 * Math.sin(args.D + 2*args.F + args.Lp);
  s += -7.6113083584587036e-09 * Math.sin(args.D - 2*args.F + args.L + args.Lp);
  s += 6.117457398397511e-06 * Math.sin(args.D + args.L + args.Lp);
  s += -3.1947571426727405e-08 * Math.sin(args.D + 2*args.F + args.L + args.Lp);
  s += 4.4625619699149817e-07 * Math.sin(args.D + 2*args.L + args.Lp);
  s += 3.2917789820197156e-08 * Math.sin(args.D + 3*args.L + args.Lp);
  s += 1.7500549842236253e-08 * Math.sin(args.D - 2*args.L + 2*args.Lp);
  s += -1.4543360832272957e-08 * Math.sin(args.D - args.L + 2*args.Lp);
  s += -1.9236004661168775e-07 * Math.sin(args.D + 2*args.Lp);
  s += -4.1157719669764407e-08 * Math.sin(args.D + args.L + 2*args.Lp);
  s += -4.9447595267365752e-09 * Math.sin(args.D + 2*args.L + 2*args.Lp);
  s += 3.9361164521101052e-08 * Math.sin(2*args.D - args.L - 4*args.Lp);
  s += 6.451925191033808e-08 * Math.sin(2*args.D - 4*args.Lp);
  s += 6.4470829125607406e-09 * Math.sin(2*args.D + args.L - 4*args.Lp);
  s += 4.6779522715485633e-08 * Math.sin(2*args.D - 2*args.L - 3*args.Lp);
  s += 1.1972145010094687e-06 * Math.sin(2*args.D - args.L - 3*args.Lp);
  s += 7.9014689621108495e-09 * Math.sin(2*args.D - 2*args.F - 3*args.Lp);
  s += 1.6473615121135393e-06 * Math.sin(2*args.D - 3*args.Lp);
  s += 1.599712284381652e-07 * Math.sin(2*args.D + args.L - 3*args.Lp);
  s += 1.4300473721765618e-08 * Math.sin(2*args.D + 2*args.L - 3*args.Lp);
  s += 7.4850084582258401e-08 * Math.sin(2*args.D - 3*args.L - 2*args.Lp);
  s += -5.3809681169572746e-09 * Math.sin(2*args.D - 2*args.F - 2*args.L - 2*args.Lp);
  s += 1.4263186770798095e-06 * Math.sin(2*args.D - 2*args.L - 2*args.Lp);
  s += -2.1039043834600824e-08 * Math.sin(2*args.D - 2*args.F - args.L - 2*args.Lp);
  s += 3.5736591617981525e-05 * Math.sin(2*args.D - args.L - 2*args.Lp);
  s += -7.4703141334314758e-08 * Math.sin(2*args.D + 2*args.F - args.L - 2*args.Lp);
  s += 3.0608358687606562e-07 * Math.sin(2*args.D - 2*args.F - 2*args.Lp);
  s += 3.9028336944639161e-05 * Math.sin(2*args.D - 2*args.Lp);
  s += -8.8034238843383184e-08 * Math.sin(2*args.D + 2*args.F - 2*args.Lp);
  s += -7.96962458525366e-08 * Math.sin(2*args.D - 2*args.F + args.L - 2*args.Lp);
  s += 3.6442298470144565e-06 * Math.sin(2*args.D + args.L - 2*args.Lp);
  s += -1.8324337222450037e-08 * Math.sin(2*args.D + 2*args.F + args.L - 2*args.Lp);
  s += -6.4474544151321078e-09 * Math.sin(2*args.D - 2*args.F + 2*args.L - 2*args.Lp);
  s += 3.1214977700764366e-07 * Math.sin(2*args.D + 2*args.L - 2*args.Lp);
  s += 2.6081203347973773e-08 * Math.sin(2*args.D + 3*args.L - 2*args.Lp);
  s += 8.629423847269946e-09 * Math.sin(2*args.D - 5*args.L - args.Lp);
  s += 1.4296719706384006e-07 * Math.sin(2*args.D - 4*args.L - args.Lp);
  s += -1.7694828652020931e-08 * Math.sin(2*args.D - 2*args.F - 3*args.L - args.Lp);
  s += 2.3193715860964032e-06 * Math.sin(2*args.D - 3*args.L - args.Lp);
  s += -1.3593484445560157e-07 * Math.sin(2*args.D - 2*args.F - 2*args.L - args.Lp);
  s += 4.1720795472981607e-05 * Math.sin(2*args.D - 2*args.L - args.Lp);
  s += -1.0456898435475483e-07 * Math.sin(2*args.D + 2*args.F - 2*args.L - args.Lp);
  s += -2.9586633554312452e-07 * Math.sin(2*args.D - 2*args.F - args.L - args.Lp);
  s += 0.00099598160624434981 * Math.sin(2*args.D - args.L - args.Lp);
  s += -2.0663616665877552e-06 * Math.sin(2*args.D + 2*args.F - args.L - args.Lp);
  s += -1.3864676984497452e-08 * Math.sin(2*args.D - 4*args.F - args.Lp);
  s += 1.0404460967390182e-05 * Math.sin(2*args.D - 2*args.F - args.Lp);
  s += 0.00079862687934120422 * Math.sin(2*args.D - args.Lp);
  s += -1.8526170195490328e-06 * Math.sin(2*args.D + 2*args.F - args.Lp);
  s += -1.815677346107033e-06 * Math.sin(2*args.D - 2*args.F + args.L - args.Lp);
  s += 7.0444775091586296e-05 * Math.sin(2*args.D + args.L - args.Lp);
  s += -3.5743465965067097e-07 * Math.sin(2*args.D + 2*args.F + args.L - args.Lp);
  s += -1.399585977534387e-07 * Math.sin(2*args.D - 2*args.F + 2*args.L - args.Lp);
  s += 5.7062632287089572e-06 * Math.sin(2*args.D + 2*args.L - args.Lp);
  s += -4.8818303268001894e-08 * Math.sin(2*args.D + 2*args.F + 2*args.L - args.Lp);
  s += -1.1247127882251454e-08 * Math.sin(2*args.D - 2*args.F + 3*args.L - args.Lp);
  s += 4.5183224394636823e-07 * Math.sin(2*args.D + 3*args.L - args.Lp);
  s += -5.6720474147616382e-09 * Math.sin(2*args.D + 2*args.F + 3*args.L - args.Lp);
  s += 3.5390322021545651e-08 * Math.sin(2*args.D + 4*args.L - args.Lp);
  s += 2.4095467633848808e-08 * Math.sin(2*args.D - 6*args.L);
  s += -5.3813800410354432e-09 * Math.sin(2*args.D - 2*args.F - 5*args.L);
  s += 3.3210005890366108e-07 * Math.sin(2*args.D - 5*args.L);
  s += -5.221386429756099e-08 * Math.sin(2*args.D - 2*args.F - 4*args.L);
  s += 4.5973722171805694e-06 * Math.sin(2*args.D - 4*args.L);
  s += -4.4379289531896105e-07 * Math.sin(2*args.D - 2*args.F - 3*args.L);
  s += 6.3966625241883255e-05 * Math.sin(2*args.D - 3*args.L);
  s += 2.2640524107127037e-08 * Math.sin(2*args.D + 2*args.F - 3*args.L);
  s += -2.7180696225699096e-06 * Math.sin(2*args.D - 2*args.F - 2*args.L);
  s += 0.0010261350747451672 * Math.sin(2*args.D - 2*args.L);
  s += -2.5972068559674212e-06 * Math.sin(2*args.D + 2*args.F - 2*args.L);
  s += 1.3671318058146467e-08 * Math.sin(2*args.D + 4*args.F - 2*args.L);
  s += -4.1207793394562543e-08 * Math.sin(2*args.D - 4*args.F - args.L);
  s += 8.6794727676271236e-07 * Math.sin(2*args.D - 2*args.F - args.L);
  s += 0.022235680452654474 * Math.sin(2*args.D - args.L);
  s += -4.5406987438611392e-05 * Math.sin(2*args.D + 2*args.F - args.L);
  s += 9.6620185252717955e-08 * Math.sin(2*args.D + 4*args.F - args.L);
  s += -3.6447026878290059e-07 * Math.sin(2*args.D - 4*args.F);
  s += 0.00026750592496053706 * Math.sin(2*args.D - 2*args.F);
  s += 0.011489666990622992 * Math.sin(2*args.D);
  s += -2.7836096774570653e-05 * Math.sin(2*args.D + 2*args.F);
  s += 6.6514232360804037e-08 * Math.sin(2*args.D + 4*args.F);
  s += -3.0946379971494791e-05 * Math.sin(2*args.D - 2*args.F + args.L);
  s += 0.00093062990621966787 * Math.sin(2*args.D + args.L);
  s += -4.8006995252887462e-06 * Math.sin(2*args.D + 2*args.F + args.L);
  s += 1.6677050088895486e-08 * Math.sin(2*args.D + 4*args.F + args.L);
  s += -2.2000532233067747e-06 * Math.sin(2*args.D - 2*args.F + 2*args.L);
  s += 6.9714740367120018e-05 * Math.sin(2*args.D + 2*args.L);
  s += -6.004822963121804e-07 * Math.sin(2*args.D + 2*args.F + 2*args.L);
  s += -1.6173177733698083e-07 * Math.sin(2*args.D - 2*args.F + 3*args.L);
  s += 5.1365815707276275e-06 * Math.sin(2*args.D + 3*args.L);
  s += -6.4576410596663534e-08 * Math.sin(2*args.D + 2*args.F + 3*args.L);
  s += -1.1974767056843589e-08 * Math.sin(2*args.D - 2*args.F + 4*args.L);
  s += 3.7646060065303178e-07 * Math.sin(2*args.D + 4*args.L);
  s += -6.35098860299813e-09 * Math.sin(2*args.D + 2*args.F + 4*args.L);
  s += 2.753764475843667e-08 * Math.sin(2*args.D + 5*args.L);
  s += 8.3870467261730824e-09 * Math.sin(2*args.D - 5*args.L + args.Lp);
  s += 8.8184931115588915e-08 * Math.sin(2*args.D - 4*args.L + args.Lp);
  s += -5.6235618186659969e-09 * Math.sin(2*args.D - 2*args.F - 3*args.L + args.Lp);
  s += 8.5440849095814198e-07 * Math.sin(2*args.D - 3*args.L + args.Lp);
  s += -1.6773701611840547e-08 * Math.sin(2*args.D - 2*args.F - 2*args.L + args.Lp);
  s += 1.2066465183158711e-05 * Math.sin(2*args.D - 2*args.L + args.Lp);
  s += -1.1053179772324753e-08 * Math.sin(2*args.D - 2*args.F - args.L + args.Lp);
  s += -0.00013767302980597612 * Math.sin(2*args.D - args.L + args.Lp);
  s += 3.268442583877915e-07 * Math.sin(2*args.D + 2*args.F - args.L + args.Lp);
  s += 9.5986156615765146e-09 * Math.sin(2*args.D - 4*args.F + args.Lp);
  s += -6.9675598545786407e-06 * Math.sin(2*args.D - 2*args.F + args.Lp);
  s += -0.00011809202306905947 * Math.sin(2*args.D + args.Lp);
  s += 3.1709994059300331e-07 * Math.sin(2*args.D + 2*args.F + args.Lp);
  s += 4.1071256573337599e-07 * Math.sin(2*args.D - 2*args.F + args.L + args.Lp);
  s += -1.4130090412418356e-05 * Math.sin(2*args.D + args.L + args.Lp);
  s += 7.7808602013810612e-08 * Math.sin(2*args.D + 2*args.F + args.L + args.Lp);
  s += 4.3097747300405914e-08 * Math.sin(2*args.D - 2*args.F + 2*args.L + args.Lp);
  s += -1.4070289153336194e-06 * Math.sin(2*args.D + 2*args.L + args.Lp);
  s += 1.2701482205977153e-08 * Math.sin(2*args.D + 2*args.F + 2*args.L + args.Lp);
  s += -1.2973213844029594e-07 * Math.sin(2*args.D + 3*args.L + args.Lp);
  s += -1.1441262393692277e-08 * Math.sin(2*args.D + 4*args.L + args.Lp);
  s += -4.5763244554864406e-08 * Math.sin(2*args.D - 3*args.L + 2*args.Lp);
  s += -1.2114646096026618e-06 * Math.sin(2*args.D - 2*args.L + 2*args.Lp);
  s += -3.1703987819192883e-08 * Math.sin(2*args.D - 2*args.F - args.L + 2*args.Lp);
  s += -1.2223117454751501e-05 * Math.sin(2*args.D - args.L + 2*args.Lp);
  s += 2.4965670503090647e-08 * Math.sin(2*args.D + 2*args.F - args.L + 2*args.Lp);
  s += -1.1387265679291932e-07 * Math.sin(2*args.D - 2*args.F + 2*args.Lp);
  s += -9.0052707766036951e-07 * Math.sin(2*args.D + 2*args.Lp);
  s += -9.6954580005722011e-09 * Math.sin(2*args.D - 2*args.F + args.L + 2*args.Lp);
  s += -6.5106044896417074e-08 * Math.sin(2*args.D + args.L + 2*args.Lp);
  s += -9.113498667061417e-09 * Math.sin(2*args.D - args.L + 3*args.Lp);
  s += -1.9342701573705246e-08 * Math.sin(3*args.D - 2*args.L - 2*args.Lp);
  s += -5.7300880615215706e-08 * Math.sin(3*args.D - args.L - 2*args.Lp);
  s += -4.9446486774917094e-09 * Math.sin(3*args.D - 2*args.F - 2*args.Lp);
  s += 2.5111483690252688e-08 * Math.sin(3*args.D - 2*args.Lp);
  s += -1.439849845697032e-08 * Math.sin(3*args.D - 3*args.L - args.Lp);
  s += -4.0291515874189172e-07 * Math.sin(3*args.D - 2*args.L - args.Lp);
  s += -9.162513702482529e-09 * Math.sin(3*args.D - 2*args.F - args.L - args.Lp);
  s += -1.121868601606592e-06 * Math.sin(3*args.D - args.L - args.Lp);
  s += -9.4436619830520419e-08 * Math.sin(3*args.D - 2*args.F - args.Lp);
  s += 3.1545583506127825e-07 * Math.sin(3*args.D - args.Lp);
  s += 1.5998149501906302e-08 * Math.sin(3*args.D + args.L - args.Lp);
  s += -8.4358128654059371e-09 * Math.sin(3*args.D - 4*args.L);
  s += -2.1535517233951762e-07 * Math.sin(3*args.D - 3*args.L);
  s += -5.9347204304841292e-06 * Math.sin(3*args.D - 2*args.L);
  s += 1.4447249708122411e-08 * Math.sin(3*args.D + 2*args.F - 2*args.L);
  s += -1.4442372324709693e-07 * Math.sin(3*args.D - 2*args.F - args.L);
  s += -1.5561004635809849e-05 * Math.sin(3*args.D - args.L);
  s += 5.8903971347368665e-08 * Math.sin(3*args.D + 2*args.F - args.L);
  s += -1.2267515496843884e-06 * Math.sin(3*args.D - 2*args.F);
  s += 1.9597489615288815e-06 * Math.sin(3*args.D);
  s += 1.8180258629904704e-08 * Math.sin(3*args.D + 2*args.F);
  s += -5.148640537194281e-08 * Math.sin(3*args.D - 2*args.F + args.L);
  s += -1.885949639491626e-08 * Math.sin(3*args.D + 2*args.L);
  s += -3.0202935248091158e-08 * Math.sin(3*args.D - 3*args.L + args.Lp);
  s += -2.0308162605214235e-07 * Math.sin(3*args.D - 2*args.L + args.Lp);
  s += 5.6235449649988898e-09 * Math.sin(3*args.D - 2*args.F - args.L + args.Lp);
  s += 1.3272284106977272e-06 * Math.sin(3*args.D - args.L + args.Lp);
  s += -6.6900907431405972e-09 * Math.sin(3*args.D + 2*args.F - args.L + args.Lp);
  s += 4.3194566640908556e-08 * Math.sin(3*args.D - 2*args.F + args.Lp);
  s += 7.2671027584805232e-07 * Math.sin(3*args.D + args.Lp);
  s += 1.0878852866168091e-07 * Math.sin(3*args.D + args.L + args.Lp);
  s += 1.2410830498341723e-08 * Math.sin(3*args.D + 2*args.L + args.Lp);
  s += -6.1567003088942899e-09 * Math.sin(3*args.D - args.L + 2*args.Lp);
  s += -9.2592657063948248e-09 * Math.sin(3*args.D + 2*args.Lp);
  s += 3.6599536008076533e-08 * Math.sin(4*args.D - 2*args.L - 3*args.Lp);
  s += 8.4396953367498399e-08 * Math.sin(4*args.D - args.L - 3*args.Lp);
  s += 4.7070279909935232e-08 * Math.sin(4*args.D - 3*args.Lp);
  s += 7.756173279311001e-09 * Math.sin(4*args.D + args.L - 3*args.Lp);
  s += 2.7147704218420297e-08 * Math.sin(4*args.D - 3*args.L - 2*args.Lp);
  s += 7.6503089508100021e-07 * Math.sin(4*args.D - 2*args.L - 2*args.Lp);
  s += 5.2355155848796612e-09 * Math.sin(4*args.D - 2*args.F - args.L - 2*args.Lp);
  s += 1.4967071837561293e-06 * Math.sin(4*args.D - args.L - 2*args.Lp);
  s += -7.7563391110638226e-09 * Math.sin(4*args.D + 2*args.F - args.L - 2*args.Lp);
  s += 7.3817280535062729e-07 * Math.sin(4*args.D - 2*args.Lp);
  s += 1.1688034774463161e-07 * Math.sin(4*args.D + args.L - 2*args.Lp);
  s += 1.4058610626117978e-08 * Math.sin(4*args.D + 2*args.L - 2*args.Lp);
  s += 4.8392560850975022e-07 * Math.sin(4*args.D - 3*args.L - args.Lp);
  s += 1.3244571475847639e-05 * Math.sin(4*args.D - 2*args.L - args.Lp);
  s += -7.431816329880146e-08 * Math.sin(4*args.D + 2*args.F - 2*args.L - args.Lp);
  s += 1.1096806253606347e-07 * Math.sin(4*args.D - 2*args.F - args.L - args.Lp);
  s += 2.1205796439319783e-05 * Math.sin(4*args.D - args.L - args.Lp);
  s += -1.1019246132984374e-07 * Math.sin(4*args.D + 2*args.F - args.L - args.Lp);
  s += 3.2286828595021946e-08 * Math.sin(4*args.D - 2*args.F - args.Lp);
  s += 9.0697234292634195e-06 * Math.sin(4*args.D - args.Lp);
  s += -5.4005457060703109e-08 * Math.sin(4*args.D + 2*args.F - args.Lp);
  s += -3.5486508453904509e-08 * Math.sin(4*args.D - 2*args.F + args.L - args.Lp);
  s += 1.369601288180018e-06 * Math.sin(4*args.D + args.L - args.Lp);
  s += -1.21682042374199e-08 * Math.sin(4*args.D + 2*args.F + args.L - args.Lp);
  s += -5.8659644519341332e-09 * Math.sin(4*args.D - 2*args.F + 2*args.L - args.Lp);
  s += 1.5872294054560273e-07 * Math.sin(4*args.D + 2*args.L - args.Lp);
  s += 1.6289233393238331e-08 * Math.sin(4*args.D + 3*args.L - args.Lp);
  s += -2.0895634073050163e-08 * Math.sin(4*args.D - 5*args.L);
  s += 5.7538933636484527e-06 * Math.sin(4*args.D - 3*args.L);
  s += -4.5281023359789544e-08 * Math.sin(4*args.D + 2*args.F - 3*args.L);
  s += 3.2094221774892677e-08 * Math.sin(4*args.D - 2*args.F - 2*args.L);
  s += 0.00014918965402338567 * Math.sin(4*args.D - 2*args.L);
  s += -8.2305674153857308e-07 * Math.sin(4*args.D + 2*args.F - 2*args.L);
  s += 1.4585881469835963e-06 * Math.sin(4*args.D - 2*args.F - args.L);
  s += 0.00018631309553601624 * Math.sin(4*args.D - args.L);
  s += -9.761095533867096e-07 * Math.sin(4*args.D + 2*args.F - args.L);
  s += -1.1591712829520917e-07 * Math.sin(4*args.D - 2*args.F);
  s += 6.7384542697062979e-05 * Math.sin(4*args.D);
  s += -4.1208557449548724e-07 * Math.sin(4*args.D + 2*args.F);
  s += -3.2002068147167026e-07 * Math.sin(4*args.D - 2*args.F + args.L);
  s += 9.5882910969762326e-06 * Math.sin(4*args.D + args.L);
  s += -8.6344134741131811e-08 * Math.sin(4*args.D + 2*args.F + args.L);
  s += -4.7511086521668973e-08 * Math.sin(4*args.D - 2*args.F + 2*args.L);
  s += 1.0594687890536447e-06 * Math.sin(4*args.D + 2*args.L);
  s += -1.328372830998718e-08 * Math.sin(4*args.D + 2*args.F + 2*args.L);
  s += -5.284404650965737e-09 * Math.sin(4*args.D - 2*args.F + 3*args.L);
  s += 1.0418717640728781e-07 * Math.sin(4*args.D + 3*args.L);
  s += 9.5993783323881744e-09 * Math.sin(4*args.D + 4*args.L);
  s += 1.3002297559318013e-07 * Math.sin(4*args.D - 3*args.L + args.Lp);
  s += -1.7335865303259767e-06 * Math.sin(4*args.D - 2*args.L + args.Lp);
  s += 1.0665360136654911e-08 * Math.sin(4*args.D + 2*args.F - 2*args.L + args.Lp);
  s += -9.0897821658010607e-08 * Math.sin(4*args.D - 2*args.F - args.L + args.Lp);
  s += -3.0795760327088776e-06 * Math.sin(4*args.D - args.L + args.Lp);
  s += 1.7113054385813684e-08 * Math.sin(4*args.D + 2*args.F - args.L + args.Lp);
  s += -1.4015964836341807e-06 * Math.sin(4*args.D + args.Lp);
  s += 9.0170780215164011e-09 * Math.sin(4*args.D + 2*args.F + args.Lp);
  s += 8.87162971177855e-09 * Math.sin(4*args.D - 2*args.F + args.L + args.Lp);
  s += -2.4579240363824178e-07 * Math.sin(4*args.D + args.L + args.Lp);
  s += -3.2384536740070658e-08 * Math.sin(4*args.D + 2*args.L + args.Lp);
  s += -1.7888400554816969e-08 * Math.sin(4*args.D - 3*args.L + 2*args.Lp);
  s += -1.7035158809899682e-07 * Math.sin(4*args.D - 2*args.L + 2*args.Lp);
  s += -1.0524561418533075e-07 * Math.sin(4*args.D - args.L + 2*args.Lp);
  s += -1.0083431633411119e-08 * Math.sin(4*args.D + 2*args.Lp);
  s += -9.1626935800013675e-09 * Math.sin(5*args.D - 3*args.L - args.Lp);
  s += -3.3596478301651281e-08 * Math.sin(5*args.D - 2*args.L - args.Lp);
  s += -7.4659155156326978e-09 * Math.sin(5*args.D - args.L - args.Lp);
  s += 4.9449126693849504e-09 * Math.sin(5*args.D - args.Lp);
  s += -8.173997440722095e-08 * Math.sin(5*args.D - 3*args.L);
  s += -2.7755703125654466e-07 * Math.sin(5*args.D - 2*args.L);
  s += -1.6241001643636898e-08 * Math.sin(5*args.D - 2*args.F - args.L);
  s += -6.5450464109569346e-08 * Math.sin(5*args.D - args.L);
  s += -6.6418346386662503e-09 * Math.sin(5*args.D - 2*args.F);
  s += 2.1283099092287186e-08 * Math.sin(5*args.D);
  s += 1.9004075497193712e-08 * Math.sin(5*args.D - 2*args.L + args.Lp);
  s += 2.3027886472028624e-08 * Math.sin(5*args.D - args.L + args.Lp);
  s += 8.774821546124013e-09 * Math.sin(5*args.D + args.Lp);
  s += 1.5125158112908032e-08 * Math.sin(6*args.D - 3*args.L - 2*args.Lp);
  s += 4.0527588765073919e-08 * Math.sin(6*args.D - 2*args.L - 2*args.Lp);
  s += 3.6067598232973527e-08 * Math.sin(6*args.D - args.L - 2*args.Lp);
  s += 1.3816208214260291e-08 * Math.sin(6*args.D - 2*args.Lp);
  s += 8.5324484421471077e-09 * Math.sin(6*args.D - 4*args.L - args.Lp);
  s += 1.8907134571304752e-07 * Math.sin(6*args.D - 3*args.L - args.Lp);
  s += 4.3791791732494525e-07 * Math.sin(6*args.D - 2*args.L - args.Lp);
  s += 3.4624238040126043e-07 * Math.sin(6*args.D - args.L - args.Lp);
  s += 1.2168417455314562e-07 * Math.sin(6*args.D - args.Lp);
  s += 2.3124874482529209e-08 * Math.sin(6*args.D + args.L - args.Lp);
  s += 6.671078402457157e-08 * Math.sin(6*args.D - 4*args.L);
  s += 1.4183297795728513e-06 * Math.sin(6*args.D - 3*args.L);
  s += -1.3913975730444512e-08 * Math.sin(6*args.D + 2*args.F - 3*args.L);
  s += 1.7646972041069041e-08 * Math.sin(6*args.D - 2*args.F - 2*args.L);
  s += 2.7710129372644454e-06 * Math.sin(6*args.D - 2*args.L);
  s += -2.4676695548937776e-08 * Math.sin(6*args.D + 2*args.F - 2*args.L);
  s += 1.9126455536089634e-06 * Math.sin(6*args.D - args.L);
  s += -1.7404565174171292e-08 * Math.sin(6*args.D + 2*args.F - args.L);
  s += -1.0374854314505428e-08 * Math.sin(6*args.D - 2*args.F);
  s += 6.1164328598506914e-07 * Math.sin(6*args.D);
  s += -6.3994488744633992e-09 * Math.sin(6*args.D + 2*args.F);
  s += 1.1078048174887301e-07 * Math.sin(6*args.D + args.L);
  s += 1.5417150908986022e-08 * Math.sin(6*args.D + 2*args.L);
  s += -2.3173341135986962e-08 * Math.sin(6*args.D - 3*args.L + args.Lp);
  s += -6.2151080698914186e-08 * Math.sin(6*args.D - 2*args.L + args.Lp);
  s += -5.1582444703105824e-08 * Math.sin(6*args.D - args.L + args.Lp);
  s += -1.9197977346694834e-08 * Math.sin(6*args.D + args.Lp);
  s += 8.2415773160262633e-09 * Math.sin(8*args.D - 3*args.L - args.Lp);
  s += 9.50202918237773e-09 * Math.sin(8*args.D - 2*args.L - args.Lp);
  s += 5.4297218915347316e-09 * Math.sin(8*args.D - args.L - args.Lp);
  s += 1.5708064421584059e-08 * Math.sin(8*args.D - 4*args.L);
  s += 4.0724574492263036e-08 * Math.sin(8*args.D - 3*args.L);
  s += 4.1985070888689317e-08 * Math.sin(8*args.D - 2*args.L);
  s += 2.2059117099046934e-08 * Math.sin(8*args.D - args.L);
  s += 6.7389354393669598e-09 * Math.sin(8*args.D);
  return s;
}

// Sum the ELP/MPP02 series: main problem, latitude (339 terms)
function Elp_main_lat_C(args) {
  var s = 0.0;
  s += 0.089502617513359001 * Math.sin(args.F);
  s += -3.0526183367613735e-05 * Math.sin(3*args.F);
  s += 2.8699737786529468e-08 * Math.sin(5*args.F);
  s += -1.1441135252601871e-08 * Math.sin(-5*args.F + args.L);
  s += 1.3568196065090027e-05 * Math.sin(-3*args.F + args.L);
  s += 0.0048466516108145972 * Math.sin(-args.F + args.L);
  s += 0.0048974285375725122 * Math.sin(args.F + args.L);
  s += -4.9421189239610112e-06 * Math.sin(3*args.F + args.L);
  s += 7.5627865350105412e-09 * Math.sin(5*args.F + args.L);
  s += -6.3194014129350895e-07 * Math.sin(-3*args.F + 2*args.L);
  s += 0.00015397522952491992 * Math.sin(-args.F + 2*args.L);
  s += 0.00030015760572660744 * Math.sin(args.F + 2*args.L);
  s += -5.7143687748088833e-07 * Math.sin(3*args.F + 2*args.L);
  s += -7.0781255203534796e-09 * Math.sin(-3*args.F + 3*args.L);
  s += 7.6663761675094484e-06 * Math.sin(-args.F + 3*args.L);
  s += 1.9315241410701566e-05 * Math.sin(args.F + 3*args.L);
  s += -5.7255284903127291e-08 * Math.sin(3*args.F + 3*args.L);
  s += 4.4394277620881093e-07 * Math.sin(-args.F + 4*args.L);
  s += 1.2762691055562887e-06 * Math.sin(args.F + 4*args.L);
  s += -5.2843712822009381e-09 * Math.sin(3*args.F + 4*args.L);
  s += 2.7440425057234389e-08 * Math.sin(-args.F + 5*args.L);
  s += 8.5715004652330591e-08 * Math.sin(args.F + 5*args.L);
  s += 5.8177626008680276e-09 * Math.sin(args.F + 6*args.L);
  s += -3.1317738941004555e-08 * Math.sin(-args.F - 4*args.L + args.Lp);
  s += -9.0171911709138485e-09 * Math.sin(args.F - 4*args.L + args.Lp);
  s += -3.6257748477707251e-07 * Math.sin(-args.F - 3*args.L + args.Lp);
  s += -1.1465376015390113e-07 * Math.sin(args.F - 3*args.L + args.Lp);
  s += 7.4657003572762894e-09 * Math.sin(-3*args.F - 2*args.L + args.Lp);
  s += -3.8454773664331702e-06 * Math.sin(-args.F - 2*args.L + args.Lp);
  s += -1.4606335178063635e-06 * Math.sin(args.F - 2*args.L + args.Lp);
  s += 9.2593695784842985e-09 * Math.sin(3*args.F - 2*args.L + args.Lp);
  s += 3.2916842766138256e-08 * Math.sin(-3*args.F - args.L + args.Lp);
  s += -3.2634924009731379e-05 * Math.sin(-args.F - args.L + args.Lp);
  s += -2.7306421633323733e-05 * Math.sin(args.F - args.L + args.Lp);
  s += -4.4163807267211385e-08 * Math.sin(3*args.F - args.L + args.Lp);
  s += -2.3463112253769433e-05 * Math.sin(-args.F + args.Lp);
  s += -3.1319313316264456e-05 * Math.sin(args.F + args.Lp);
  s += 5.608946035913264e-08 * Math.sin(3*args.F + args.Lp);
  s += -3.4080324069780548e-08 * Math.sin(-3*args.F + args.L + args.Lp);
  s += -2.4608744550335609e-05 * Math.sin(-args.F + args.L + args.Lp);
  s += -2.5749804366965328e-05 * Math.sin(args.F + args.L + args.Lp);
  s += 3.2383573247905454e-08 * Math.sin(3*args.F + args.L + args.Lp);
  s += 6.8354868899064777e-09 * Math.sin(-3*args.F + 2*args.L + args.Lp);
  s += -1.5170149613995461e-06 * Math.sin(-args.F + 2*args.L + args.Lp);
  s += -3.0970535353213745e-06 * Math.sin(args.F + 2*args.L + args.Lp);
  s += 6.5445986850040389e-09 * Math.sin(3*args.F + 2*args.L + args.Lp);
  s += -1.1727166287982935e-07 * Math.sin(-args.F + 3*args.L + args.Lp);
  s += -2.9940882151377833e-07 * Math.sin(args.F + 3*args.L + args.Lp);
  s += -9.2595980095869744e-09 * Math.sin(-args.F + 4*args.L + args.Lp);
  s += -2.6566751388834123e-08 * Math.sin(args.F + 4*args.L + args.Lp);
  s += -8.1927191625048665e-09 * Math.sin(-args.F - 3*args.L + 2*args.Lp);
  s += -7.6158239331627315e-08 * Math.sin(-args.F - 2*args.L + 2*args.Lp);
  s += -2.598396869088947e-08 * Math.sin(args.F - 2*args.L + 2*args.Lp);
  s += -5.4949216871285886e-07 * Math.sin(-args.F - args.L + 2*args.Lp);
  s += -4.6106923728680146e-07 * Math.sin(args.F - args.L + 2*args.Lp);
  s += -8.7308018912860936e-08 * Math.sin(-args.F + 2*args.Lp);
  s += -2.7772734370265839e-07 * Math.sin(args.F + 2*args.Lp);
  s += -2.9993008817113275e-07 * Math.sin(-args.F + args.L + 2*args.Lp);
  s += -2.668200153280952e-07 * Math.sin(args.F + args.L + 2*args.Lp);
  s += -1.3767626762434636e-08 * Math.sin(-args.F + 2*args.L + 2*args.Lp);
  s += -2.5596143280752808e-08 * Math.sin(args.F + 2*args.L + 2*args.Lp);
  s += -1.0470738517025848e-08 * Math.sin(-args.F - args.L + 3*args.Lp);
  s += -9.2103862267191217e-09 * Math.sin(args.F - args.L + 3*args.Lp);
  s += -5.2838748977708709e-09 * Math.sin(-args.F + args.L + 3*args.Lp);
  s += 9.8893913412553443e-09 * Math.sin(args.D - args.F - 2*args.Lp);
  s += 1.0374145545643716e-08 * Math.sin(args.D + args.F - 2*args.Lp);
  s += -6.6416741960169859e-09 * Math.sin(args.D + args.F - 2*args.L - args.Lp);
  s += 4.9982098616812068e-08 * Math.sin(args.D - args.F - args.L - args.Lp);
  s += -6.5252975055347949e-08 * Math.sin(args.D - args.F - args.Lp);
  s += -8.8668500516674584e-08 * Math.sin(args.D + args.F - args.Lp);
  s += -9.7540258099937243e-08 * Math.sin(args.D - args.F + args.L - args.Lp);
  s += -4.0964991350367407e-08 * Math.sin(args.D + args.F + args.L - args.Lp);
  s += -8.4838921215944337e-09 * Math.sin(args.D - args.F + 2*args.L - args.Lp);
  s += -7.0779809778553571e-09 * Math.sin(args.D + args.F + 2*args.L - args.Lp);
  s += -5.9147084607568693e-09 * Math.sin(args.D - args.F - 4*args.L);
  s += -6.0843900335208332e-08 * Math.sin(args.D - args.F - 3*args.L);
  s += -2.6034391370221153e-08 * Math.sin(args.D + args.F - 3*args.L);
  s += -5.3154697944920038e-07 * Math.sin(args.D - args.F - 2*args.L);
  s += -3.8038270166475895e-07 * Math.sin(args.D + args.F - 2*args.L);
  s += -1.7889184423740803e-08 * Math.sin(args.D - 3*args.F - args.L);
  s += -2.0841523400929866e-06 * Math.sin(args.D - args.F - args.L);
  s += 6.7524307839391108e-07 * Math.sin(args.D + args.F - args.L);
  s += 1.1344356247519756e-08 * Math.sin(args.D + 3*args.F - args.L);
  s += -1.5639685214868603e-07 * Math.sin(args.D - 3*args.F);
  s += -2.3298885607684862e-05 * Math.sin(args.D - args.F);
  s += -2.6026718628291813e-05 * Math.sin(args.D + args.F);
  s += 3.1269682576700912e-08 * Math.sin(args.D + 3*args.F);
  s += -2.8551932717017647e-06 * Math.sin(args.D - args.F + args.L);
  s += -3.2356738545734769e-06 * Math.sin(args.D + args.F + args.L);
  s += 6.8841977453848922e-09 * Math.sin(args.D + 3*args.F + args.L);
  s += -1.7627729683634186e-07 * Math.sin(args.D - args.F + 2*args.L);
  s += -3.0945508516817493e-07 * Math.sin(args.D + args.F + 2*args.L);
  s += -1.1974862966763935e-08 * Math.sin(args.D - args.F + 3*args.L);
  s += -2.6810097478314106e-08 * Math.sin(args.D + args.F + 3*args.L);
  s += 9.0171743010290788e-09 * Math.sin(args.D - args.F - 3*args.L + args.Lp);
  s += 7.742148066154051e-08 * Math.sin(args.D - args.F - 2*args.L + args.Lp);
  s += 8.1445237550855104e-08 * Math.sin(args.D + args.F - 2*args.L + args.Lp);
  s += 3.078455092417821e-08 * Math.sin(args.D - args.F - args.L + args.Lp);
  s += -2.7099883919198097e-07 * Math.sin(args.D + args.F - args.L + args.Lp);
  s += 3.8989869184716504e-06 * Math.sin(args.D - args.F + args.Lp);
  s += 3.8910848687751127e-06 * Math.sin(args.D + args.F + args.Lp);
  s += 1.679806738654461e-07 * Math.sin(args.D - args.F + args.L + args.Lp);
  s += 4.933249854035913e-07 * Math.sin(args.D + args.F + args.L + args.Lp);
  s += 1.5367947647790296e-08 * Math.sin(args.D - args.F + 2*args.L + args.Lp);
  s += 4.9255002540089278e-08 * Math.sin(args.D + args.F + 2*args.L + args.Lp);
  s += -8.2411625812789222e-09 * Math.sin(args.D - args.F + 2*args.Lp);
  s += -9.8894101358668029e-09 * Math.sin(args.D + args.F + 2*args.Lp);
  s += 5.719912317601383e-09 * Math.sin(2*args.D - args.F - 4*args.Lp);
  s += 4.4306788774743145e-08 * Math.sin(2*args.D - args.F - args.L - 3*args.Lp);
  s += 5.0511671913268476e-08 * Math.sin(2*args.D + args.F - args.L - 3*args.Lp);
  s += 1.7679058518486824e-07 * Math.sin(2*args.D - args.F - 3*args.Lp);
  s += 7.7706435223190492e-08 * Math.sin(2*args.D + args.F - 3*args.Lp);
  s += 1.1634176607759727e-08 * Math.sin(2*args.D - args.F + args.L - 3*args.Lp);
  s += 1.2409770473047434e-08 * Math.sin(2*args.D + args.F + args.L - 3*args.Lp);
  s += 8.62902595580561e-09 * Math.sin(2*args.D - args.F - 3*args.L - 2*args.Lp);
  s += 1.1077119833574799e-07 * Math.sin(2*args.D - args.F - 2*args.L - 2*args.Lp);
  s += -9.3076929846074471e-09 * Math.sin(2*args.D + args.F - 2*args.L - 2*args.Lp);
  s += 1.3023472171410961e-06 * Math.sin(2*args.D - args.F - args.L - 2*args.Lp);
  s += 1.525779930405047e-06 * Math.sin(2*args.D + args.F - args.L - 2*args.Lp);
  s += 1.3234093726622851e-08 * Math.sin(2*args.D - 3*args.F - 2*args.Lp);
  s += 5.2640146959237965e-06 * Math.sin(2*args.D - args.F - 2*args.Lp);
  s += 1.8592543327623975e-06 * Math.sin(2*args.D + args.F - 2*args.Lp);
  s += 3.3522177917683232e-07 * Math.sin(2*args.D - args.F + args.L - 2*args.Lp);
  s += 2.8349637727478469e-07 * Math.sin(2*args.D + args.F + args.L - 2*args.Lp);
  s += 2.6905059413853936e-08 * Math.sin(2*args.D - args.F + 2*args.L - 2*args.Lp);
  s += 3.2819309111042532e-08 * Math.sin(2*args.D + args.F + 2*args.L - 2*args.Lp);
  s += 2.0167462951375058e-08 * Math.sin(2*args.D - args.F - 4*args.L - args.Lp);
  s += 2.6673365990536789e-07 * Math.sin(2*args.D - args.F - 3*args.L - args.Lp);
  s += 4.5328234037509725e-08 * Math.sin(2*args.D + args.F - 3*args.L - args.Lp);
  s += 3.152368053718398e-06 * Math.sin(2*args.D - args.F - 2*args.L - args.Lp);
  s += -3.009596252253136e-07 * Math.sin(2*args.D + args.F - 2*args.L - args.Lp);
  s += -1.2943753267556857e-08 * Math.sin(2*args.D + 3*args.F - 2*args.L - args.Lp);
  s += 5.0126665451554798e-08 * Math.sin(2*args.D - 3*args.F - args.L - args.Lp);
  s += 3.6043740007434779e-05 * Math.sin(2*args.D - args.F - args.L - args.Lp);
  s += 4.2993968773758588e-05 * Math.sin(2*args.D + args.F - args.L - args.Lp);
  s += -5.7059104690118408e-08 * Math.sin(2*args.D + 3*args.F - args.L - args.Lp);
  s += 4.2733644190350053e-07 * Math.sin(2*args.D - 3*args.F - args.Lp);
  s += 0.00014339140486177825 * Math.sin(2*args.D - args.F - args.Lp);
  s += 3.8584159425437202e-05 * Math.sin(2*args.D + args.F - args.Lp);
  s += -4.5763608199898207e-08 * Math.sin(2*args.D + 3*args.F - args.Lp);
  s += -8.0910454815448776e-08 * Math.sin(2*args.D - 3*args.F + args.L - args.Lp);
  s += 8.5617280287805105e-06 * Math.sin(2*args.D - args.F + args.L - args.Lp);
  s += 5.5007492854625169e-06 * Math.sin(2*args.D + args.F + args.L - args.Lp);
  s += -1.0859183174427119e-08 * Math.sin(2*args.D + 3*args.F + args.L - args.Lp);
  s += 6.2523811108491392e-07 * Math.sin(2*args.D - args.F + 2*args.L - args.Lp);
  s += 6.0051370010416117e-07 * Math.sin(2*args.D + args.F + 2*args.L - args.Lp);
  s += 4.775223006678918e-08 * Math.sin(2*args.D - args.F + 3*args.L - args.Lp);
  s += 5.8708601868161431e-08 * Math.sin(2*args.D + args.F + 3*args.L - args.Lp);
  s += 5.3812198122700615e-09 * Math.sin(2*args.D + args.F + 4*args.L - args.Lp);
  s += 5.4638466225007783e-08 * Math.sin(2*args.D - args.F - 5*args.L);
  s += 1.1150709228000505e-08 * Math.sin(2*args.D + args.F - 5*args.L);
  s += 6.4872773368696494e-07 * Math.sin(2*args.D - args.F - 4*args.L);
  s += 1.2100920956640311e-07 * Math.sin(2*args.D + args.F - 4*args.L);
  s += 7.3480016558911011e-06 * Math.sin(2*args.D - args.F - 3*args.L);
  s += 1.2318096618886706e-06 * Math.sin(2*args.D + args.F - 3*args.L);
  s += 1.1247431465476297e-08 * Math.sin(2*args.D + 3*args.F - 3*args.L);
  s += 9.9142117817167415e-08 * Math.sin(2*args.D - 3*args.F - 2*args.L);
  s += 7.5467384527776998e-05 * Math.sin(2*args.D - args.F - 2*args.L);
  s += -7.8754159926330271e-06 * Math.sin(2*args.D + args.F - 2*args.L);
  s += -3.1807897035099375e-07 * Math.sin(2*args.D + 3*args.F - 2*args.L);
  s += 1.5953374087678493e-06 * Math.sin(2*args.D - 3*args.F - args.L);
  s += 0.00080757410005513337 * Math.sin(2*args.D - args.F - args.L);
  s += 0.00096712455829253024 * Math.sin(2*args.D + args.F - args.L);
  s += -1.1869891510478088e-06 * Math.sin(2*args.D + 3*args.F - args.L);
  s += -1.071391243642991e-08 * Math.sin(2*args.D - 5*args.F);
  s += 1.0599545399956078e-05 * Math.sin(2*args.D - 3*args.F);
  s += 0.003023552519511669 * Math.sin(2*args.D - args.F);
  s += 0.00056849589238801713 * Math.sin(2*args.D + args.F);
  s += -7.006840166929268e-07 * Math.sin(2*args.D + 3*args.F);
  s += -1.4115490245950861e-06 * Math.sin(2*args.D - 3*args.F + args.L);
  s += 0.00016172028251638706 * Math.sin(2*args.D - args.F + args.L);
  s += 7.3311363895422967e-05 * Math.sin(2*args.D + args.F + args.L);
  s += -1.4728295769423711e-07 * Math.sin(2*args.D + 3*args.F + args.L);
  s += -4.8237834887302381e-08 * Math.sin(2*args.D - 3*args.F + 2*args.L);
  s += 1.0404921748200877e-05 * Math.sin(2*args.D - args.F + 2*args.L);
  s += 7.3679693930136218e-06 * Math.sin(2*args.D + args.F + 2*args.L);
  s += -2.1864617434564087e-08 * Math.sin(2*args.D + 3*args.F + 2*args.L);
  s += 7.0986186793283964e-07 * Math.sin(2*args.D - args.F + 3*args.L);
  s += 6.6879837017549503e-07 * Math.sin(2*args.D + args.F + 3*args.L);
  s += 4.9790271965802579e-08 * Math.sin(2*args.D - args.F + 4*args.L);
  s += 5.7498797527906471e-08 * Math.sin(2*args.D + args.F + 4*args.L);
  s += 1.197443370335652e-08 * Math.sin(2*args.D - args.F - 4*args.L + args.Lp);
  s += 8.8135558680374941e-08 * Math.sin(2*args.D - args.F - 3*args.L + args.Lp);
  s += 7.8536657612012072e-09 * Math.sin(2*args.D + args.F - 3*args.L + args.Lp);
  s += 3.8361703480600868e-07 * Math.sin(2*args.D - args.F - 2*args.L + args.Lp);
  s += 2.6319430188084507e-07 * Math.sin(2*args.D + args.F - 2*args.L + args.Lp);
  s += -1.6579626081062797e-08 * Math.sin(2*args.D - 3*args.F - args.L + args.Lp);
  s += -3.8349502873816742e-06 * Math.sin(2*args.D - args.F - args.L + args.Lp);
  s += -6.3889828329422459e-06 * Math.sin(2*args.D + args.F - args.L + args.Lp);
  s += 9.3078680536014714e-09 * Math.sin(2*args.D + 3*args.F - args.L + args.Lp);
  s += -2.6454623563504143e-07 * Math.sin(2*args.D - 3*args.F + args.Lp);
  s += -5.8634099365288121e-05 * Math.sin(2*args.D - args.F + args.Lp);
  s += -6.1293728250050713e-06 * Math.sin(2*args.D + args.F + args.Lp);
  s += 8.5806620985639407e-09 * Math.sin(2*args.D + 3*args.F + args.Lp);
  s += 2.2542458702430607e-08 * Math.sin(2*args.D - 3*args.F + args.L + args.Lp);
  s += -3.9886303761671724e-06 * Math.sin(2*args.D - args.F + args.L + args.Lp);
  s += -1.1490560394619093e-06 * Math.sin(2*args.D + args.F + args.L + args.Lp);
  s += -3.0459566485291608e-07 * Math.sin(2*args.D - args.F + 2*args.L + args.Lp);
  s += -1.5232216025708636e-07 * Math.sin(2*args.D + args.F + 2*args.L + args.Lp);
  s += -2.4045777659924174e-08 * Math.sin(2*args.D - args.F + 3*args.L + args.Lp);
  s += -1.7210199288417158e-08 * Math.sin(2*args.D + args.F + 3*args.L + args.Lp);
  s += -4.9447303669836374e-09 * Math.sin(2*args.D - args.F - 3*args.L + 2*args.Lp);
  s += -6.1178663370191888e-08 * Math.sin(2*args.D - args.F - 2*args.L + 2*args.Lp);
  s += -2.4432698423536439e-08 * Math.sin(2*args.D + args.F - 2*args.L + 2*args.Lp);
  s += -5.1071008729272071e-07 * Math.sin(2*args.D - args.F - args.L + 2*args.Lp);
  s += -5.4924969079577296e-07 * Math.sin(2*args.D + args.F - args.L + 2*args.Lp);
  s += -4.9931028174451143e-09 * Math.sin(2*args.D - 3*args.F + 2*args.Lp);
  s += -6.5032415582450007e-07 * Math.sin(2*args.D - args.F + 2*args.Lp);
  s += -7.1843715692003382e-08 * Math.sin(2*args.D + args.F + 2*args.Lp);
  s += -2.9910595003993591e-08 * Math.sin(2*args.D - args.F + args.L + 2*args.Lp);
  s += -7.0292701281081288e-09 * Math.sin(2*args.D + args.F + args.L + 2*args.Lp);
  s += -4.8962321304112291e-09 * Math.sin(3*args.D - args.F - args.L - 2*args.Lp);
  s += -6.3505269789523602e-09 * Math.sin(3*args.D - args.F - 2*args.Lp);
  s += -1.3671169594711477e-08 * Math.sin(3*args.D - args.F - 2*args.L - args.Lp);
  s += -1.594969431157863e-08 * Math.sin(3*args.D + args.F - 2*args.L - args.Lp);
  s += -1.020003321267102e-07 * Math.sin(3*args.D - args.F - args.L - args.Lp);
  s += -6.5737894832060702e-08 * Math.sin(3*args.D + args.F - args.L - args.Lp);
  s += -1.246884300447833e-07 * Math.sin(3*args.D - args.F - args.Lp);
  s += -1.333181288391423e-08 * Math.sin(3*args.D - args.F + args.L - args.Lp);
  s += -1.391410732364528e-08 * Math.sin(3*args.D - args.F - 3*args.L);
  s += -1.9106404340276424e-07 * Math.sin(3*args.D - args.F - 2*args.L);
  s += -2.3523035172398601e-07 * Math.sin(3*args.D + args.F - 2*args.L);
  s += -6.2054543791156401e-09 * Math.sin(3*args.D - 3*args.F - args.L);
  s += -1.4794958644662974e-06 * Math.sin(3*args.D - args.F - args.L);
  s += -9.9837062466359526e-07 * Math.sin(3*args.D + args.F - args.L);
  s += -4.8916422221052632e-08 * Math.sin(3*args.D - 3*args.F);
  s += -1.7057057240184848e-06 * Math.sin(3*args.D - args.F);
  s += -1.3768703892686767e-07 * Math.sin(3*args.D + args.F);
  s += -1.7506506531466433e-07 * Math.sin(3*args.D - args.F + args.L);
  s += -3.1900696307139081e-08 * Math.sin(3*args.D + args.F + args.L);
  s += -1.5610923745337207e-08 * Math.sin(3*args.D - args.F + 2*args.L);
  s += -5.2359754463011926e-09 * Math.sin(3*args.D + args.F + 2*args.L);
  s += -7.368869182671535e-09 * Math.sin(3*args.D - args.F - 2*args.L + args.Lp);
  s += -1.2653086378779411e-08 * Math.sin(3*args.D + args.F - 2*args.L + args.Lp);
  s += 6.4041098055872804e-08 * Math.sin(3*args.D - args.F - args.L + args.Lp);
  s += 1.0098232050012963e-07 * Math.sin(3*args.D + args.F - args.L + args.Lp);
  s += 1.6657447453197491e-07 * Math.sin(3*args.D - args.F + args.Lp);
  s += 6.5495445854750084e-08 * Math.sin(3*args.D + args.F + args.Lp);
  s += 2.0652188069088354e-08 * Math.sin(3*args.D - args.F + args.L + args.Lp);
  s += 1.2507682385318763e-08 * Math.sin(3*args.D + args.F + args.L + args.Lp);
  s += 7.9984709845691271e-09 * Math.sin(4*args.D - args.F - args.L - 3*args.Lp);
  s += 6.4957458105584352e-09 * Math.sin(4*args.D + args.F - args.L - 3*args.Lp);
  s += 7.8045626003151167e-09 * Math.sin(4*args.D - args.F - 3*args.Lp);
  s += 1.3719145377388907e-08 * Math.sin(4*args.D - args.F - 2*args.L - 2*args.Lp);
  s += 5.9627393125418545e-08 * Math.sin(4*args.D + args.F - 2*args.L - 2*args.Lp);
  s += 1.6782901048801734e-07 * Math.sin(4*args.D - args.F - args.L - 2*args.Lp);
  s += 1.1537642599160061e-07 * Math.sin(4*args.D + args.F - args.L - 2*args.Lp);
  s += 1.4053604992283594e-07 * Math.sin(4*args.D - args.F - 2*args.Lp);
  s += 6.1566393677138328e-08 * Math.sin(4*args.D + args.F - 2*args.Lp);
  s += 2.021511645346559e-08 * Math.sin(4*args.D - args.F + args.L - 2*args.Lp);
  s += 1.2361777586226527e-08 * Math.sin(4*args.D + args.F + args.L - 2*args.Lp);
  s += 9.2595811258728467e-09 * Math.sin(4*args.D + args.F - 3*args.L - args.Lp);
  s += 2.5456495437940808e-07 * Math.sin(4*args.D - args.F - 2*args.L - args.Lp);
  s += 1.0362942372733114e-06 * Math.sin(4*args.D + args.F - 2*args.L - args.Lp);
  s += 2.8883940041742944e-06 * Math.sin(4*args.D - args.F - args.L - args.Lp);
  s += 1.6425750357992771e-06 * Math.sin(4*args.D + args.F - args.L - args.Lp);
  s += 2.5887422188045451e-08 * Math.sin(4*args.D - 3*args.F - args.Lp);
  s += 2.0116932206599171e-06 * Math.sin(4*args.D - args.F - args.Lp);
  s += 7.6553603816821522e-07 * Math.sin(4*args.D + args.F - args.Lp);
  s += 2.7565324488866427e-07 * Math.sin(4*args.D - args.F + args.L - args.Lp);
  s += 1.4587428319417031e-07 * Math.sin(4*args.D + args.F + args.L - args.Lp);
  s += 2.9766320640866342e-08 * Math.sin(4*args.D - args.F + 2*args.L - args.Lp);
  s += 2.0409827587348613e-08 * Math.sin(4*args.D + args.F + 2*args.L - args.Lp);
  s += -5.6238286856263302e-09 * Math.sin(4*args.D - args.F - 5*args.L);
  s += -3.2967259150107883e-08 * Math.sin(4*args.D - args.F - 4*args.L);
  s += -3.7378992319778116e-08 * Math.sin(4*args.D - args.F - 3*args.L);
  s += 1.053980528997978e-07 * Math.sin(4*args.D + args.F - 3*args.L);
  s += -6.1569940909904934e-09 * Math.sin(4*args.D + 3*args.F - 3*args.L);
  s += -1.8907303861836005e-08 * Math.sin(4*args.D - 3*args.F - 2*args.L);
  s += 3.0722963328969148e-06 * Math.sin(4*args.D - args.F - 2*args.L);
  s += 1.170280775596719e-05 * Math.sin(4*args.D + args.F - 2*args.L);
  s += -3.0639536348929121e-08 * Math.sin(4*args.D + 3*args.F - 2*args.L);
  s += -2.6858024566196089e-08 * Math.sin(4*args.D - 3*args.F - args.L);
  s += 3.1898679708867646e-05 * Math.sin(4*args.D - args.F - args.L);
  s += 1.453704829531032e-05 * Math.sin(4*args.D + args.F - args.L);
  s += -3.2190881438847749e-08 * Math.sin(4*args.D + 3*args.F - args.L);
  s += 3.0334011660910125e-07 * Math.sin(4*args.D - 3*args.F);
  s += 1.7814294022514824e-05 * Math.sin(4*args.D - args.F);
  s += 5.7783601413914298e-06 * Math.sin(4*args.D + args.F);
  s += -1.3962310587919784e-08 * Math.sin(4*args.D + 3*args.F);
  s += -2.6761047285927107e-08 * Math.sin(4*args.D - 3*args.F + args.L);
  s += 2.294997232453087e-06 * Math.sin(4*args.D - args.F + args.L);
  s += 1.0306600465719277e-06 * Math.sin(4*args.D + args.F + args.L);
  s += 2.3435794644063046e-07 * Math.sin(4*args.D - args.F + 2*args.L);
  s += 1.3710481809463283e-07 * Math.sin(4*args.D + args.F + 2*args.L);
  s += 2.1768078926508062e-08 * Math.sin(4*args.D - args.F + 3*args.L);
  s += 1.5659438841108364e-08 * Math.sin(4*args.D + args.F + 3*args.L);
  s += 9.308062480812308e-09 * Math.sin(4*args.D + args.F - 3*args.L + args.Lp);
  s += -9.8413007029988144e-09 * Math.sin(4*args.D - args.F - 2*args.L + args.Lp);
  s += -1.4335330789594209e-07 * Math.sin(4*args.D + args.F - 2*args.L + args.Lp);
  s += -8.3340660360172369e-07 * Math.sin(4*args.D - args.F - args.L + args.Lp);
  s += -2.4709886897724262e-07 * Math.sin(4*args.D + args.F - args.L + args.Lp);
  s += -1.4737424636125778e-08 * Math.sin(4*args.D - 3*args.F + args.Lp);
  s += -5.4820287957716567e-07 * Math.sin(4*args.D - args.F + args.Lp);
  s += -1.2357366109137596e-07 * Math.sin(4*args.D + args.F + args.Lp);
  s += -8.2026952570270194e-08 * Math.sin(4*args.D - args.F + args.L + args.Lp);
  s += -2.7051476479837575e-08 * Math.sin(4*args.D + args.F + args.L + args.Lp);
  s += -9.5019497966452567e-09 * Math.sin(4*args.D - args.F + 2*args.L + args.Lp);
  s += -5.5264388630869141e-09 * Math.sin(4*args.D - args.F - 2*args.L + 2*args.Lp);
  s += -1.342828689947094e-08 * Math.sin(4*args.D + args.F - 2*args.L + 2*args.Lp);
  s += -2.1233157262567455e-08 * Math.sin(4*args.D - args.F - args.L + 2*args.Lp);
  s += -8.6774862235075962e-09 * Math.sin(4*args.D + args.F - args.L + 2*args.Lp);
  s += -6.1568520741205992e-09 * Math.sin(5*args.D - args.F - args.L - args.Lp);
  s += -6.0116627616643273e-09 * Math.sin(5*args.D + args.F - 3*args.L);
  s += -2.4482964203841278e-08 * Math.sin(5*args.D - args.F - 2*args.L);
  s += -2.516170755877755e-08 * Math.sin(5*args.D + args.F - 2*args.L);
  s += -5.0856626420792293e-08 * Math.sin(5*args.D - args.F - args.L);
  s += -1.1877879111359776e-08 * Math.sin(5*args.D + args.F - args.L);
  s += -1.2314184198066337e-08 * Math.sin(5*args.D - args.F);
  s += 6.6414278323757015e-09 * Math.sin(6*args.D - args.F - args.L - 2*args.Lp);
  s += 2.0118952032530692e-08 * Math.sin(6*args.D + args.F - 3*args.L - args.Lp);
  s += 5.2890956939855152e-08 * Math.sin(6*args.D - args.F - 2*args.L - args.Lp);
  s += 4.5522123391568388e-08 * Math.sin(6*args.D + args.F - 2*args.L - args.Lp);
  s += 7.2040222998561874e-08 * Math.sin(6*args.D - args.F - args.L - args.Lp);
  s += 3.6698857698743267e-08 * Math.sin(6*args.D + args.F - args.L - args.Lp);
  s += 3.1608479503256756e-08 * Math.sin(6*args.D - args.F - args.Lp);
  s += 1.396205355943884e-08 * Math.sin(6*args.D + args.F - args.Lp);
  s += 5.9144791888098864e-09 * Math.sin(6*args.D - args.F + args.L - args.Lp);
  s += 3.4033798625631109e-08 * Math.sin(6*args.D - args.F - 3*args.L);
  s += 1.5116434833018925e-07 * Math.sin(6*args.D + args.F - 3*args.L);
  s += 3.9250317481774797e-07 * Math.sin(6*args.D - args.F - 2*args.L);
  s += 2.890931178748857e-07 * Math.sin(6*args.D + args.F - 2*args.L);
  s += 5.1873832382834318e-09 * Math.sin(6*args.D - 3*args.F - args.L);
  s += 4.558675631653678e-07 * Math.sin(6*args.D - args.F - args.L);
  s += 2.0444492274718567e-07 * Math.sin(6*args.D + args.F - args.L);
  s += 1.7811943928144955e-07 * Math.sin(6*args.D - args.F);
  s += 7.1024849292158893e-08 * Math.sin(6*args.D + args.F);
  s += 3.1706644274391168e-08 * Math.sin(6*args.D - args.F + args.L);
  s += 1.4786759264874101e-08 * Math.sin(6*args.D + args.F + args.L);
  s += -1.241070929030651e-08 * Math.sin(6*args.D - args.F - 2*args.L + args.Lp);
  s += -6.6416784112344727e-09 * Math.sin(6*args.D + args.F - 2*args.L + args.Lp);
  s += -1.696773762142128e-08 * Math.sin(6*args.D - args.F - args.L + args.Lp);
  s += -5.6236097804005503e-09 * Math.sin(6*args.D + args.F - args.L + args.Lp);
  s += -7.4173379013610452e-09 * Math.sin(6*args.D - args.F + args.Lp);
  s += 5.1874940800017307e-09 * Math.sin(8*args.D - args.F - 3*args.L);
  s += 5.2359754462310435e-09 * Math.sin(8*args.D + args.F - 3*args.L);
  s += 9.1629370923319072e-09 * Math.sin(8*args.D - args.F - 2*args.L);
  s += 5.3814153301057822e-09 * Math.sin(8*args.D + args.F - 2*args.L);
  s += 6.3025383091443182e-09 * Math.sin(8*args.D - args.F - args.L);
  return s;
}

// Sum the ELP/MPP02 series: main problem, distance (106 terms)
function Elp_main_dist_C(args) {
  var s = 385000.52903963596;
  s += -3.148301999959191 * Math.cos(2*args.F);
  s += 79.660568469778482 * Math.cos(-2*args.F + args.L);
  s += -20905.355137759419 * Math.cos(args.L);
  s += -0.10325754056746472 * Math.cos(2*args.F + args.L);
  s += -4.421177049038759 * Math.cos(-2*args.F + 2*args.L);
  s += -569.92512638489291 * Math.cos(2*args.L);
  s += -23.210430497874526 * Math.cos(3*args.L);
  s += -1.1169371044179983 * Math.cos(4*args.L);
  s += -0.42240656115839154 * Math.cos(-3*args.L + args.Lp);
  s += -7.002696061737387 * Math.cos(-2*args.L + args.Lp);
  s += -129.62022424070292 * Math.cos(-args.L + args.Lp);
  s += 0.33463243448180796 * Math.cos(2*args.F - args.L + args.Lp);
  s += -0.18566991736964211 * Math.cos(-2*args.F + args.Lp);
  s += 48.888328449310244 * Math.cos(args.Lp);
  s += -0.15802146652025903 * Math.cos(2*args.F + args.Lp);
  s += -0.24809697371058764 * Math.cos(-2*args.F + args.L + args.Lp);
  s += 104.75529435395759 * Math.cos(args.L + args.Lp);
  s += 5.7508578538436126 * Math.cos(2*args.L + args.Lp);
  s += 0.35507869597491115 * Math.cos(3*args.L + args.Lp);
  s += -0.13617046100022662 * Math.cos(-2*args.L + 2*args.Lp);
  s += -2.1171282632583841 * Math.cos(-args.L + 2*args.Lp);
  s += 1.0656722797003297 * Math.cos(2*args.Lp);
  s += 1.1655363838529487 * Math.cos(args.L + 2*args.Lp);
  s += 0.11410603726168139 * Math.cos(args.D - args.L - args.Lp);
  s += 0.49755215819351717 * Math.cos(args.D - args.Lp);
  s += 0.10997620924828105 * Math.cos(args.D + args.L - args.Lp);
  s += -1.7385258483230053 * Math.cos(args.D - 2*args.L);
  s += -8.3791067416664671 * Math.cos(args.D - args.L);
  s += -0.79562635561038531 * Math.cos(args.D - 2*args.F);
  s += 108.74270141177936 * Math.cos(args.D);
  s += 6.3220032203434355 * Math.cos(args.D + args.L);
  s += 0.37852142052101301 * Math.cos(args.D + 2*args.L);
  s += 0.33224889132530938 * Math.cos(args.D - 2*args.L + args.Lp);
  s += 0.85124035002281906 * Math.cos(args.D - args.L + args.Lp);
  s += -16.674723862047582 * Math.cos(args.D + args.Lp);
  s += -0.93331756600538507 * Math.cos(args.D + args.L + args.Lp);
  s += -0.14806394212356289 * Math.cos(2*args.D - args.L - 3*args.Lp);
  s += -0.41071486233056909 * Math.cos(2*args.D - 3*args.Lp);
  s += 0.3430159231662937 * Math.cos(2*args.D - 2*args.L - 2*args.Lp);
  s += -4.9501349067196054 * Math.cos(2*args.D - args.L - 2*args.Lp);
  s += -9.8844667465718103 * Math.cos(2*args.D - 2*args.Lp);
  s += -0.65753296501894654 * Math.cos(2*args.D + args.L - 2*args.Lp);
  s += 0.49504418153977064 * Math.cos(2*args.D - 3*args.L - args.Lp);
  s += 10.056203332336866 * Math.cos(2*args.D - 2*args.L - args.Lp);
  s += 0.32334304362267785 * Math.cos(2*args.D - 2*args.F - args.L - args.Lp);
  s += -152.13781181555626 * Math.cos(2*args.D - args.L - args.Lp);
  s += 0.65706430206093058 * Math.cos(2*args.D - 2*args.F - args.Lp);
  s += -204.58611789480554 * Math.cos(2*args.D - args.Lp);
  s += 0.20940899652925382 * Math.cos(2*args.D - 2*args.F + args.L - args.Lp);
  s += -12.83140354888071 * Math.cos(2*args.D + args.L - args.Lp);
  s += -0.84880184799015856 * Math.cos(2*args.D + 2*args.L - args.Lp);
  s += 0.77854495144615832 * Math.cos(2*args.D - 4*args.L);
  s += 14.402688991954181 * Math.cos(2*args.D - 3*args.L);
  s += 0.47262330622706727 * Math.cos(2*args.D - 2*args.F - 2*args.L);
  s += 246.15847968480676 * Math.cos(2*args.D - 2*args.L);
  s += 0.77403904019864478 * Math.cos(2*args.D + 2*args.F - 2*args.L);
  s += 8.7515625232254681 * Math.cos(2*args.D - 2*args.F - args.L);
  s += -3699.1109330180193 * Math.cos(2*args.D - args.L);
  s += 0.59632093121812479 * Math.cos(2*args.D + 2*args.F - args.L);
  s += 10.321107088258564 * Math.cos(2*args.D - 2*args.F);
  s += -2955.9675626057128 * Math.cos(2*args.D);
  s += 4.1311145454994769 * Math.cos(2*args.D - 2*args.F + args.L);
  s += -170.73307906648637 * Math.cos(2*args.D + args.L);
  s += 0.28398596260369768 * Math.cos(2*args.D - 2*args.F + 2*args.L);
  s += -10.44475778845956 * Math.cos(2*args.D + 2*args.L);
  s += -0.66968351866645881 * Math.cos(2*args.D + 3*args.L);
  s += 0.16857465048617704 * Math.cos(2*args.D - 3*args.L + args.Lp);
  s += 0.14367547210982881 * Math.cos(2*args.D - 2*args.L + args.Lp);
  s += 24.208498493055888 * Math.cos(2*args.D - args.L + args.Lp);
  s += -0.13571262386357466 * Math.cos(2*args.D - 2*args.F + args.Lp);
  s += 30.823859907219546 * Math.cos(2*args.D + args.Lp);
  s += 2.6164091717727307 * Math.cos(2*args.D + args.L + args.Lp);
  s += 0.21251296661321492 * Math.cos(2*args.D + 2*args.L + args.Lp);
  s += -0.10887233898445145 * Math.cos(2*args.D - 2*args.L + 2*args.Lp);
  s += 2.3536309843524257 * Math.cos(2*args.D - args.L + 2*args.Lp);
  s += 0.14762959370247394 * Math.cos(2*args.D + 2*args.Lp);
  s += 0.25560112901794685 * Math.cos(3*args.D - args.L - args.Lp);
  s += -0.15707413356650621 * Math.cos(3*args.D - args.Lp);
  s += 0.86243278904298004 * Math.cos(3*args.D - 2*args.L);
  s += 3.2582370807619241 * Math.cos(3*args.D - args.L);
  s += 0.20098656931416142 * Math.cos(3*args.D - 2*args.F);
  s += -1.4189284087900234 * Math.cos(3*args.D);
  s += -0.21258262555232793 * Math.cos(3*args.D - args.L + args.Lp);
  s += -0.10765620290507359 * Math.cos(3*args.D + args.Lp);
  s += -0.10833240876766435 * Math.cos(4*args.D - 2*args.L - 2*args.Lp);
  s += -0.27904006579942225 * Math.cos(4*args.D - args.L - 2*args.Lp);
  s += -0.12805075092513285 * Math.cos(4*args.D - 2*args.Lp);
  s += -1.8970367926847447 * Math.cos(4*args.D - 2*args.L - args.Lp);
  s += -3.9579827434849588 * Math.cos(4*args.D - args.L - args.Lp);
  s += -1.5713943841003077 * Math.cos(4*args.D - args.Lp);
  s += -0.20285309945865274 * Math.cos(4*args.D + args.L - args.Lp);
  s += -0.51423243497062621 * Math.cos(4*args.D - 3*args.L);
  s += -21.636343875076179 * Math.cos(4*args.D - 2*args.L);
  s += -0.32175506886962035 * Math.cos(4*args.D - 2*args.F - args.L);
  s += -34.782523745558798 * Math.cos(4*args.D - args.L);
  s += -0.50792130896835275 * Math.cos(4*args.D - 2*args.F);
  s += -11.649947819443044 * Math.cos(4*args.D);
  s += -1.4225541276068019 * Math.cos(4*args.D + args.L);
  s += -0.13922061869363414 * Math.cos(4*args.D + 2*args.L);
  s += 0.23695196810801203 * Math.cos(4*args.D - 2*args.L + args.Lp);
  s += 0.57878980681430592 * Math.cos(4*args.D - args.L + args.Lp);
  s += 0.24452136289194804 * Math.cos(4*args.D + args.Lp);
  s += -0.18316094826847287 * Math.cos(6*args.D - 3*args.L);
  s += -0.42250165827248998 * Math.cos(6*args.D - 2*args.L);
  s += -0.28663087781865987 * Math.cos(6*args.D - args.L);
  return s;
}

// Sum the ELP/MPP02 series: perturbation, longitude T^0 (1015 terms)
function Elp_pert_longT0_C(args) {
  var s = 0.0;
  s += 6.9093016072606581e-05 * Math.sin(args.L - 18*args.Ve + 16*args.EM + 2.6783098746173137);
  s += 3.4242341815396173e-05 * Math.sin(args.F - args.zeta + 3.1415762474948243);
  s += 5.5413953671221123e-06 * Math.sin(2*args.D - args.L + 2*args.EM - 2*args.Ju - 3.1395235990409662);
  s += 4.2474963822945254e-06 * Math.sin(4*args.EM - 8*args.Ma + 3*args.Ju - 1.2976374727713669);
  s += 3.822019354720253e-06 * Math.sin(2*args.L - 18*args.Ve + 16*args.EM + 2.6783114513255937);
  s += 3.5855185646914726e-06 * Math.sin(18*args.Ve - 16*args.EM + 0.46329655276825882);
  s += 3.9833830877061282e-06 * Math.sin(args.Ve - args.EM - 3.1414113342924188);
  s += 2.7389402494208487e-06 * Math.sin(args.L - 10*args.Ve + 3*args.EM - 2.7397159690122779);
  s += 3.0971712514712241e-06 * Math.sin(args.EM - args.Ju + 0.021480847219646059);
  s += 3.1209849298601981e-06 * Math.sin(2*args.D - args.L + 3*args.Ve - 3*args.EM + 3.1413585915171374);
  s += 2.1589270751636131e-06 * Math.sin(2*args.D - args.L + 2*args.EM - 3*args.Ju + 0.17560013535024693);
  s += 2.3915858889132609e-06 * Math.sin(args.F - args.L - args.zeta + 3.1415704879082931);
  s += 2.3824229103404638e-06 * Math.sin(args.F + args.L - args.zeta + 3.1415704879082931);
  s += 1.5737105661572153e-06 * Math.sin(args.EM - 2*args.Ma - 0.73059943312828568);
  s += 1.7482381340809212e-06 * Math.sin(args.F + args.zeta + 1.2391837689161203e-05);
  s += 1.6654598947829636e-06 * Math.sin(2*args.Ve - 3*args.EM - 1.5716348465535239);
  s += 1.3714146372294658e-06 * Math.sin(2*args.D - 2*args.L + 2*args.EM - 3*args.Ju + 0.17501722772521658);
  s += 1.0987964891190061e-06 * Math.sin(8*args.Ve - 13*args.EM - 2.1679300766032963);
  s += 1.3827621123993984e-06 * Math.sin(args.D - args.F + args.EM + 1.6539598367355801);
  s += 1.4619887296868233e-06 * Math.sin(2*args.Ve - 2*args.EM + 0.0035458422765232362);
  s += 1.1885561166758338e-06 * Math.sin(2*args.D - 2*args.L + 2*args.EM - 2*args.Ju + 0.0014903304862171611);
  s += 7.9623749127788371e-07 * Math.sin(args.EM - 2*args.Ju - 1.0292826421356935);
  s += 8.0997626791884902e-07 * Math.sin(2*args.D - 18*args.Ve + 16*args.EM + 2.6783205522172198);
  s += 8.7791742900339915e-07 * Math.sin(args.L + 4*args.EM - 8*args.Ma + 3*args.Ju - 1.3170041004287789);
  s += 8.7779015304575137e-07 * Math.sin(args.L - 4*args.EM + 8*args.Ma - 3*args.Ju - 1.8245796022396374);
  s += 7.9718242490384784e-07 * Math.sin(2*args.D + args.L - 18*args.Ve + 16*args.EM + 2.6783108360175181);
  s += 7.9053333170879917e-07 * Math.sin(2*args.D - args.L + 18*args.Ve - 16*args.EM + 0.46328399539902598);
  s += 1.0233949011197171e-06 * Math.sin(2*args.D - args.L - args.EM + args.Ju + 3.1111542551782025);
  s += 7.6174287896546991e-07 * Math.sin(2*args.D - 2*args.L + 18*args.Ve - 16*args.EM + 0.46328464272848946);
  s += 9.4278163176005533e-07 * Math.sin(2*args.EM - 2*args.Ma - 0.0041097170738550268);
  s += 7.3353828207702315e-07 * Math.sin(2*args.Ju - 5*args.Sa - 0.35615847323275723);
  s += 8.9511617693583274e-07 * Math.sin(2*args.EM - 2*args.Ju - 3.1340051681079757);
  s += 8.8496719425764371e-07 * Math.sin(args.L - 2*args.EM + 2*args.Ju - 3.1413364931908463);
  s += 8.4896564384721795e-07 * Math.sin(3*args.Ve - 4*args.EM - 1.5534756724411898);
  s += 6.6412096140866326e-07 * Math.sin(2*args.D - args.L + 4*args.EM - 8*args.Ma + 3*args.Ju - 1.2761516294441819);
  s += 6.6352233029817612e-07 * Math.sin(2*args.D - args.L - 4*args.EM + 8*args.Ma - 3*args.Ju - 1.8654125355707409);
  s += 7.9955837873651647e-07 * Math.sin(2*args.D - args.EM + args.Ju + 3.1100760639656109);
  s += 7.7976116806561603e-07 * Math.sin(2*args.D - args.L - 2*args.Ve + 2*args.EM + 3.1361610504008612);
  s += 7.4561008127178634e-07 * Math.sin(args.L - args.Ve + args.EM - 0.00021284079720967504);
  s += 6.962305610574389e-07 * Math.sin(args.L - args.EM + args.Ju + 3.1199434575895846);
  s += 6.5936001361044753e-07 * Math.sin(2*args.D - args.L + 2*args.Ve - 2*args.EM + 2.2242350216420752e-05);
  s += 6.5097315287815761e-07 * Math.sin(2*args.D - 2*args.Ve + 2*args.EM + 3.1352160498852539);
  s += 6.3627277339144502e-07 * Math.sin(2*args.D - args.L - args.Ve + args.EM + 0.00029612346721551825);
  s += 5.0903959188435688e-07 * Math.sin(args.L - 26*args.Ve + 29*args.EM + 1.831090649500585);
  s += 6.179552972421791e-07 * Math.sin(args.L + args.Ve - args.EM - 3.1413229990284113);
  s += 4.4498763701206278e-07 * Math.sin(2*args.EM - 4*args.Ma - 1.0445056552801539);
  s += 6.0689944442249078e-07 * Math.sin(args.L - 3*args.Ve + 3*args.EM + 3.1394182058621505);
  s += 5.3361999981389975e-07 * Math.sin(args.L + args.EM - args.Ju + 0.019346294517950738);
  s += 4.3503284979820463e-07 * Math.sin(2*args.D + 4*args.EM - 8*args.Ma + 3*args.Ju - 1.2847521412789171);
  s += 4.345748134877942e-07 * Math.sin(2*args.D - 4*args.EM + 8*args.Ma - 3*args.Ju - 1.8567790569679949);
  s += 4.6150523043047058e-07 * Math.sin(args.L - 2*args.EM + 3*args.Ju - 0.1773602444836416);
  s += 5.1534129571205289e-07 * Math.sin(2*args.D - args.L - 20*args.Ve + 21*args.EM - 1.6024441837681989);
  s += 4.1854165463701616e-07 * Math.sin(args.Ju - 1.280604541611293);
  s += 5.0444613918678767e-07 * Math.sin(args.D - args.L + 3*args.Ve - 4*args.EM - 1.5644083106505973);
  s += 4.0130998889497866e-07 * Math.sin(3*args.Ve - 5*args.EM - 0.26948527275595191);
  s += 4.8134992627767635e-07 * Math.sin(2*args.D - args.Ve + args.EM + 0.00028222267582059642);
  s += 4.6745735132579201e-07 * Math.sin(2*args.D - args.F + args.zeta + 1.570796326794604e-05);
  s += 3.7212139032762899e-07 * Math.sin(2*args.D - args.L + 6*args.Ve - 8*args.EM + 2.9183179493715716);
  s += 3.1072012538991573e-07 * Math.sin(args.L + args.EM - 2*args.Ma - 0.81221275371322188);
  s += 4.3194685671788115e-07 * Math.sin(2*args.D - args.L - 2*args.EM + 2*args.Ju - 0.015000633155766982);
  s += 3.0659687205471286e-07 * Math.sin(args.L - args.EM + 2*args.Ma - 2.32631362117833);
  s += 4.0741311363087568e-07 * Math.sin(2*args.D - 2*args.EM + 2*args.Ju - 0.016648315372823502);
  s += 3.3119575646150639e-07 * Math.sin(args.L - 2*args.Ju + 5*args.Sa - 2.8644660976721261);
  s += 3.3114266280302658e-07 * Math.sin(args.L + 2*args.Ju - 5*args.Sa - 0.27714136537707473);
  s += 3.9948135824189056e-07 * Math.sin(2*args.D - args.L + 4*args.Ve - 4*args.EM - 3.141383692713267);
  s += 2.8337007065124278e-07 * Math.sin(args.D - 34*args.EM + 41*args.Ma - 2*args.Ju + 2.6392139960023075);
  s += 3.0876818150102909e-07 * Math.sin(args.D - args.F + 2*args.Ma + 2.8582727458423367);
  s += 3.2742788147799393e-07 * Math.sin(args.D + args.F + args.EM + 1.6876838207004017);
  s += 3.4942122251591999e-07 * Math.sin(2*args.D - 2*args.L + 3*args.Ve - 3*args.EM + 0.00075320810432100865);
  s += 2.596483348280445e-07 * Math.sin(3*args.L - 18*args.Ve + 16*args.EM + 2.6783114112345685);
  s += 2.8832405842773002e-07 * Math.sin(2*args.D - 2*args.L + 6*args.Ve - 8*args.EM + 2.9169988914639049);
  s += 3.3289248292324835e-07 * Math.sin(2*args.D + 2*args.EM - 2*args.Ju - 3.1393822488278063);
  s += 3.2546960098475711e-07 * Math.sin(args.D + args.EM - args.Ju - 3.1291472464587708);
  s += 2.4359779719361213e-07 * Math.sin(args.L + 18*args.Ve - 16*args.EM + 0.4632959983916059);
  s += 2.9791873726874098e-07 * Math.sin(args.D - args.F + args.L + args.EM + 1.6606909449120224);
  s += 2.9491250339536339e-07 * Math.sin(args.D - args.F - args.L + args.EM + 1.6605964940301894);
  s += 3.1847410712083077e-07 * Math.sin(2*args.D + args.F - args.zeta + 3.1415752002972734);
  s += 3.1609916067870993e-07 * Math.sin(args.D + 3*args.Ve - 4*args.EM - 1.5654765297025151);
  s += 3.1299571252433845e-07 * Math.sin(2*args.D - args.F - args.L + args.zeta + 7.330382858375231e-06);
  s += 2.2635090838608953e-07 * Math.sin(3*args.EM - 4*args.Ma - 0.52178604837615117);
  s += 2.2121850214487626e-07 * Math.sin(2*args.D - args.L - args.EM + 2*args.Ju - 2.1992954604681367);
  s += 2.9964372395647803e-07 * Math.sin(2*args.D - args.L - 2*args.Ve + 3*args.EM - 1.5981603953958221);
  s += 2.9356347857599295e-07 * Math.sin(args.L - 2*args.Ve + 3*args.EM - 1.5483724237051735);
  s += 2.8622899851414054e-07 * Math.sin(2*args.D - args.L - 2*args.EM + 2*args.Ma - 3.1220192969593117);
  s += 2.5037220761937743e-07 * Math.sin(2*args.EM - 3*args.Ju - 2.9597863182096256);
  s += 2.0707481475897525e-07 * Math.sin(2*args.D - args.L + 5*args.EM - 6*args.Ma + 2.6483070771321695);
  s += 2.7897682695262656e-07 * Math.sin(2*args.D - args.L - args.Ju - 3.138675725697837);
  s += 2.7828290108075143e-07 * Math.sin(2*args.D - args.L + 0.0013419826074525735);
  s += 2.692841559994727e-07 * Math.sin(args.L + 2*args.Ve - 3*args.EM - 1.5956376561049643);
  s += 2.7226334167891589e-07 * Math.sin(args.L - 2*args.Ve + 2*args.EM + 3.1346221918011041);
  s += 2.5566071712255863e-07 * Math.sin(2*args.D - args.L + args.Ju - 0.066813094150396865);
  s += 2.5558079577196554e-07 * Math.sin(2*args.D - 2*args.F + 5*args.Ve - 6*args.EM - 1.5308076704186042);
  s += 1.9450063362020575e-07 * Math.sin(2*args.EM - 3*args.Ma - 0.51840339826115844);
  s += 1.890846260916785e-07 * Math.sin(args.L - 8*args.Ve + 13*args.EM - 0.93532292887131585);
  s += 1.8879429296850821e-07 * Math.sin(args.L + 8*args.Ve - 13*args.EM - 2.2064150852309456);
  s += 2.1712557703232546e-07 * Math.sin(args.Ve - 2*args.EM + 1.8102936774956648);
  s += 1.9643083967905005e-07 * Math.sin(args.L - args.Ju - 2.0064927386350684);
  s += 1.9622910350760761e-07 * Math.sin(args.L + args.Ju - 1.1571189860837028);
  s += 1.8758153286277176e-07 * Math.sin(2*args.D - args.L - 8*args.Ve + 13*args.EM - 1.0118449315727374);
  s += 1.8615471453595145e-07 * Math.sin(2*args.D - args.L + 8*args.Ve - 13*args.EM - 2.1299920040075175);
  s += 1.8338682751240825e-07 * Math.sin(args.L - args.EM + 2*args.Ju - 2.1116935759281428);
  s += 2.07342374596715e-07 * Math.sin(args.D + args.F - args.L - 20*args.Ve + 20*args.EM - 0.24515649105047896);
  s += 2.4705039004731798e-07 * Math.sin(2*args.D - args.L + args.EM - args.Ju + 0.0098495148382390339);
  s += 2.4523739196592578e-07 * Math.sin(args.L + 2*args.Ve - 2*args.EM + 0.0026421419958898721);
  s += 2.4410368843865751e-07 * Math.sin(args.F - args.L + args.zeta + 8.5521133347713625e-06);
  s += 1.7195566855338817e-07 * Math.sin(2*args.D - args.L + args.EM - 2*args.Ma - 0.66356727599701004);
  s += 2.4061302993464195e-07 * Math.sin(2*args.D + args.F - args.L - args.zeta + 3.1415875921349623);
  s += 1.6880294147923505e-07 * Math.sin(2*args.D - args.L - 12*args.Ve + 8*args.EM - 0.84587654529726652);
  s += 1.6858413265315354e-07 * Math.sin(2*args.D - args.EM + 2*args.Ju - 2.199708089616633);
  s += 2.3009257305456261e-07 * Math.sin(2*args.D - args.F - args.zeta + 3.1415793890874779);
  s += 2.236568925384737e-07 * Math.sin(2*args.D - 2*args.EM + 2*args.Ma - 3.1168279854512839);
  s += 2.258681619737801e-07 * Math.sin(2*args.D - args.L - 3*args.Ve + 4*args.EM - 1.5816421900707474);
  s += 2.2456914752396924e-07 * Math.sin(4*args.Ve - 4*args.EM - 3.1402894539216479);
  s += 1.6063442449211676e-07 * Math.sin(2*args.D - args.L + 6*args.EM - 8*args.Ma - 1.0061053938809308);
  s += 1.5479082437037206e-07 * Math.sin(2*args.D - args.L - args.EM + 2*args.Ma - 2.459489761470302);
  s += 1.581063907598351e-07 * Math.sin(3*args.Ve - 7*args.EM + 4*args.Ma + 2.5865021619381734);
  s += 2.1048368160344266e-07 * Math.sin(3*args.Ve - 3*args.EM + 3.1258877696979561);
  s += 2.0453322436327617e-07 * Math.sin(2*args.D - 2*args.Ve + 3*args.EM - 1.5956426374868939);
  s += 2.0454653139338063e-07 * Math.sin(args.L - 2*args.EM + 2*args.Ma - 3.1332844815491923);
  s += 1.5290587489085467e-07 * Math.sin(10*args.Ve - 3*args.EM - 0.40197544866656182);
  s += 1.5169827209194378e-07 * Math.sin(2*args.L - 10*args.Ve + 3*args.EM - 2.7396828725373448);
  s += 1.9182329107010104e-07 * Math.sin(args.L - 3*args.Ve + 4*args.EM - 1.5910028318364628);
  s += 1.4005331333507534e-07 * Math.sin(args.L + args.EM - 2*args.Ju - 1.020587210472871);
  s += 1.8901886206357722e-07 * Math.sin(args.EM - args.Sa + 0.0075721436015922213);
  s += 1.8607149080986099e-07 * Math.sin(args.F + args.L + args.zeta + 1.2217304763958097e-05);
  s += 1.8280361584892679e-07 * Math.sin(2*args.D - args.L + 5*args.Ve - 5*args.EM - 3.1405684331868593);
  s += 1.3628378685525483e-07 * Math.sin(2*args.F + args.L - 18*args.Ve + 16*args.EM - 0.46328251452833308);
  s += 1.3627256688590046e-07 * Math.sin(2*args.F - args.L + 18*args.Ve - 16*args.EM - 2.6783101199593649);
  s += 1.7798447811165027e-07 * Math.sin(2*args.D - 3*args.Ve + 4*args.EM - 1.5806928497954269);
  s += 1.5375607665217929e-07 * Math.sin(2*args.D + 2*args.EM - 3*args.Ju + 0.1760945823893936);
  s += 1.7637521718765439e-07 * Math.sin(2*args.F - 2*args.zeta - 1.9896753472601376e-05);
  s += 1.6009504772206797e-07 * Math.sin(2*args.D - args.Ju - 3.0562565458064999);
  s += 1.7236672755401398e-07 * Math.sin(2*args.D + 2*args.Ve - 2*args.EM - 0.00019437873634336718);
  s += 1.2171141171231231e-07 * Math.sin(2*args.D + args.EM - 2*args.Ma - 0.69441735995475606);
  s += 1.6623989438528273e-07 * Math.sin(2*args.D - args.L + 2*args.Ve - 3*args.EM - 1.5529403860286239);
  s += 1.263956783165479e-07 * Math.sin(8*args.EM - 15*args.Ma + 2.7113181576989032);
  s += 1.377993176262137e-07 * Math.sin(2*args.D + args.Ju - 0.24020814147858938);
  s += 1.6488513294537158e-07 * Math.sin(args.F - 2*args.L - args.zeta + 3.1415706624412181);
  s += 1.2201904557278036e-07 * Math.sin(2*args.D - args.L - 15*args.Ve + 13*args.EM + 2.6818410937354042);
  s += 1.6196849836400803e-07 * Math.sin(args.L + 2*args.EM - 2*args.Ju - 3.134826791376117);
  s += 1.5448816881798652e-07 * Math.sin(args.L - 15*args.Ve + 9*args.EM + 4*args.Ma + 3.0916430434059077);
  s += 1.1687189831948165e-07 * Math.sin(2*args.D - 8*args.Ve + 13*args.EM - 0.99907034503390268);
  s += 1.6017322443883912e-07 * Math.sin(5*args.Ve - 5*args.EM - 3.1407528839057686);
  s += 1.157062134177324e-07 * Math.sin(2*args.D + 8*args.Ve - 13*args.EM - 2.1431920388228951);
  s += 1.5897040603582898e-07 * Math.sin(args.F + 2*args.L - args.zeta + 3.1415703133753676);
  s += 1.5837562454465569e-07 * Math.sin(args.L + 2*args.EM - 2*args.Ma + 0.0014442866338969032);
  s += 1.1154408684201249e-07 * Math.sin(2*args.D - args.EM + 2*args.Ma - 2.4121325987320761);
  s += 1.5718438316374179e-07 * Math.sin(args.L - 21*args.Ve + 21*args.EM + 0.0013368321295530576);
  s += 1.4223542432923944e-07 * Math.sin(2*args.D - args.L - 3*args.Me + args.EM + 1.465449023199672);
  s += 1.2536755216018542e-07 * Math.sin(4*args.Ve - 6*args.EM - 0.29246181478026501);
  s += 1.1213109718458541e-07 * Math.sin(args.EM - 3*args.Ju - 0.96703142355833005);
  s += 1.5042441115284782e-07 * Math.sin(2*args.D + args.EM - args.Ju + 0.0076051500203994336);
  s += 1.2315341497311776e-07 * Math.sin(args.D - args.F + args.EM + args.Ju + 1.3186948264386982);
  s += 1.4406637158246245e-07 * Math.sin(2*args.D - args.L + 4*args.Ve - 5*args.EM + 1.5946975569891806);
  s += 1.4662874348043622e-07 * Math.sin(2*args.D + 3*args.Ve - 3*args.EM + 3.1408737072502935);
  s += 1.4117701971903005e-07 * Math.sin(args.L + 3*args.Ve - 4*args.EM - 1.5520851239090709);
  s += 1.1115709793674495e-07 * Math.sin(5*args.Ve - 8*args.EM + 1.2258580070096126);
  s += 9.8013292036583068e-08 * Math.sin(2*args.D - 2*args.L + 6*args.EM - 8*args.Ma - 1.0060137496146269);
  s += 1.1169114675598962e-07 * Math.sin(2*args.D - args.L + 3*args.Ve - 5*args.EM - 0.22664466835292682);
  s += 9.7412233872833078e-08 * Math.sin(3*args.EM - 5*args.Ma - 1.0333055324867957);
  s += 9.6940086060018876e-08 * Math.sin(2*args.D + 2*args.L - 18*args.Ve + 16*args.EM + 2.6783109277047337);
  s += 9.4403853858438602e-08 * Math.sin(2*args.D + 18*args.Ve - 16*args.EM + 0.46330293515336213);
  s += 8.868041703458126e-08 * Math.sin(args.D + args.F - 2*args.L - 3*args.EM + 7*args.Ma + 0.64064651443313425);
  s += 8.8161468966065463e-08 * Math.sin(2*args.D - args.L + args.EM - 2*args.Ju - 1.0171444003119487);
  s += 1.0509983919063741e-07 * Math.sin(2*args.D - args.L + 3*args.EM - 3*args.Ju + 3.0320177891175475);
  s += 8.5584647530111836e-08 * Math.sin(args.L + 2*args.EM - 4*args.Ma - 1.0809788782161975);
  s += 1.1321891260202598e-07 * Math.sin(args.D - args.L + args.EM - args.Ju + 0.012092229300858449);
  s += 1.1065590396654202e-07 * Math.sin(2*args.D - args.L + 5*args.Ve - 6*args.EM - 1.5372518508073836);
  s += 9.3180470849034224e-08 * Math.sin(2*args.D - args.L - 3*args.Ve + 5*args.EM - 2.8947025730401004);
  s += 8.271702523135225e-08 * Math.sin(args.L - 2*args.EM + 4*args.Ma - 2.0570219446716362);
  s += 8.3612686568301901e-08 * Math.sin(args.EM + 2*args.Ju - 5*args.Sa + 1.1475978675302485);
  s += 8.1312685595119264e-08 * Math.sin(2*args.D - 2*args.L + 5*args.EM - 6*args.Ma - 0.49510000865825898);
  s += 1.0959569960194016e-07 * Math.sin(6*args.Ve - 6*args.EM - 3.1413130275871239);
  s += 1.0629121753228036e-07 * Math.sin(2*args.D + args.Ve - args.EM - 3.1411718989693789);
  s += 1.0492704775035907e-07 * Math.sin(2*args.D + 2*args.Ve - 3*args.EM - 1.570065286645427);
  s += 9.0526051644169561e-08 * Math.sin(args.Sa - 1.7342649630445433);
  s += 8.9405015428619874e-08 * Math.sin(2*args.D - 2*args.EM + 3*args.Ju - 0.17781206340545608);
  s += 1.0313564556712898e-07 * Math.sin(2*args.D - args.L + 6*args.Ve - 6*args.EM - 3.141041665315806);
  s += 8.7686122968058167e-08 * Math.sin(args.D - args.F + 5*args.Ve - 7*args.EM + 2.9543747239239195);
  s += 8.7900231549797867e-08 * Math.sin(2*args.D - args.L - 2*args.EM + 3*args.Ju - 0.17939493785106359);
  s += 8.263426391142177e-08 * Math.sin(2*args.D - args.L - 8*args.EM + 16*args.Ma - 4*args.Ju - 5*args.Sa - 1.299239953672275);
  s += 8.2633958393672754e-08 * Math.sin(2*args.D - args.L + 8*args.EM - 16*args.Ma + 4*args.Ju + 5*args.Sa - 1.8423470416790193);
  s += 9.7377168819448737e-08 * Math.sin(2*args.D - args.L + 4*args.EM - 4*args.Ma - 3.1083197825030924);
  s += 6.920393233659339e-08 * Math.sin(2*args.D - args.L - 3*args.EM + 4*args.Ma - 2.5951919793837761);
  s += 6.8394410914051016e-08 * Math.sin(4*args.EM - 6*args.Ma - 1.0258615096020141);
  s += 6.9172655780366967e-08 * Math.sin(args.D - args.L + 3*args.EM - 4*args.Ma - 0.50198339965938432);
  s += 7.1222402374184378e-08 * Math.sin(args.L + 3*args.Ve - 5*args.EM - 0.37103932796990252);
  s += 9.09680067484641e-08 * Math.sin(2*args.D - args.L + 2*args.EM - 2*args.Sa - 3.1412121921752547);
  s += 8.2771662312626189e-08 * Math.sin(args.EM + 1.6627039530027081);
  s += 6.3510473180710429e-08 * Math.sin(2*args.D - args.L + 2*args.EM - args.Ju - 0.92295041856375959);
  s += 6.7684909784539916e-08 * Math.sin(args.L - 3*args.Ve + 5*args.EM - 2.7606970337698384);
  s += 7.938637981051719e-08 * Math.sin(2*args.D - 2*args.EM + args.Ju - 1.4723512212876484);
  s += 6.238096348021582e-08 * Math.sin(2*args.D - args.L + 2*args.EM - 4*args.Ma - 0.98788339840114925);
  s += 7.0015081448207508e-08 * Math.sin(args.L - 6*args.Ve + 8*args.EM - 2.9166911926308243);
  s += 6.9102494514985508e-08 * Math.sin(2*args.D + 3*args.Ve - 5*args.EM - 0.23434946456685829);
  s += 8.1129472623043386e-08 * Math.sin(3*args.EM - 6*args.Ma - 1.5468790106841084);
  s += 7.0744107375963494e-08 * Math.sin(args.D - 15*args.Ve + 12*args.EM + 1.3997017942743257);
  s += 6.3520741376691742e-08 * Math.sin(2*args.D - args.L + 2*args.EM - 4*args.Ju + 0.34480517052956694);
  s += 7.4222484337536935e-08 * Math.sin(2*args.D - args.L - 2*args.EM + args.Ju - 1.4815746662279765);
  s += 7.034131590186655e-08 * Math.sin(args.Ve + 1.435147498519725);
  s += 6.4974541727712502e-08 * Math.sin(2*args.D - 2*args.Ve + args.EM - 1.3459593171192152);
  s += 5.4962866359227531e-08 * Math.sin(2*args.D - args.L + 18*args.Ve - 17*args.EM + 2.2604894424189261);
  s += 7.6961070720684271e-08 * Math.sin(2*args.EM - args.Ju - 1.5664224437946928);
  s += 7.7036939449190764e-08 * Math.sin(2*args.D + 0.0018768416858708991);
  s += 7.2649021106949054e-08 * Math.sin(2*args.D - 3*args.Ve + 3*args.EM + 3.0919952995632234);
  s += 7.1827151780265645e-08 * Math.sin(2*args.D - args.L - 3*args.Ve + 3*args.EM + 3.0952382413211641);
  s += 7.4884198438378118e-08 * Math.sin(7*args.Ve - 7*args.EM - 3.1414481924518776);
  s += 5.4620285157087015e-08 * Math.sin(args.D + 3*args.EM - 4*args.Ma - 0.50192171878436243);
  s += 5.4124109644215527e-08 * Math.sin(3*args.EM - 8*args.Ma + 3*args.Ju + 0.51374455527327689);
  s += 7.0513896893867422e-08 * Math.sin(3*args.EM - 3*args.Ma - 3.0953385691191131);
  s += 5.3112332582480834e-08 * Math.sin(2*args.D - 3*args.EM + 4*args.Ma - 2.5873209498713119);
  s += 5.9616968986047862e-08 * Math.sin(2*args.L + 4*args.EM - 8*args.Ma + 3*args.Ju - 1.3169581636519347);
  s += 5.9610276999190992e-08 * Math.sin(2*args.L - 4*args.EM + 8*args.Ma - 3*args.Ju - 1.8246173500587157);
  s += 7.0300382925770731e-08 * Math.sin(2*args.D + args.L - args.EM + args.Ju + 3.1089037579572723);
  s += 7.2334201221546158e-08 * Math.sin(3*args.F - args.zeta - 1.5009831566957005e-05);
  s += 6.9694516702823081e-08 * Math.sin(2*args.D - args.L + 2*args.Ju - 5*args.Sa + 3.1099385314455152);
  s += 6.9276495698980654e-08 * Math.sin(2*args.D - args.L - 2*args.Ju + 5*args.Sa + 0.030661461045828651);
  s += 5.2430408268813739e-08 * Math.sin(2*args.D - args.L - 2*args.EM + 3*args.Ma - 2.6352264331689095);
  s += 5.9423599363225341e-08 * Math.sin(args.D - 23*args.Ve + 25*args.EM + 0.21016391936923612);
  s += 6.9603687672376866e-08 * Math.sin(2*args.L - 2*args.EM + 2*args.Ju - 3.1413572244034271);
  s += 5.7993181581857196e-08 * Math.sin(2*args.D - args.L - 2*args.Ve + args.EM - 1.3451149499507054);
  s += 4.9623755011374329e-08 * Math.sin(2*args.D - args.L - 2*args.EM + 4*args.Ma - 2.1388916836699989);
  s += 5.5359731483518618e-08 * Math.sin(2*args.D + args.L - 18*args.Ve + 15*args.EM - 1.8082789846749412);
  s += 5.7308312910055282e-08 * Math.sin(args.D - args.F + args.EM - 2*args.Ju + 1.7546522090293977);
  s += 4.8155630260124929e-08 * Math.sin(args.L - 3*args.EM + 4*args.Ma - 2.6119294339835566);
  s += 5.2947958546196853e-08 * Math.sin(args.D - args.F - args.L + 2*args.Ma + 2.8585246611961588);
  s += 5.2837103587079987e-08 * Math.sin(args.D - args.F + args.L + 2*args.Ma + 2.8585242054099291);
  s += 5.2985048346026905e-08 * Math.sin(args.EM - 2*args.Sa - 1.3003534763418836);
  s += 4.9578122421430312e-08 * Math.sin(args.D - args.F + args.EM + args.Ju - args.Sa - 1.9642429872745137);
  s += 6.3711804342508465e-08 * Math.sin(2*args.D - args.L + 2*args.EM - 2*args.Ma + 0.0078497997841813685);
  s += 5.178039322724689e-08 * Math.sin(2*args.D - 3*args.Ve + 5*args.EM - 2.8653988518103581);
  s += 4.6425800896797924e-08 * Math.sin(2*args.D - args.L + 3*args.EM - 8*args.Ma + 3*args.Ju + 0.5180431179459497);
  s += 6.3036979078745345e-08 * Math.sin(2*args.D - args.L + 7*args.Ve - 7*args.EM - 3.141100135804312);
  s += 4.6065926499879981e-08 * Math.sin(4*args.EM - 5*args.Ma + 2.6670560991145704);
  s += 5.9622141206254771e-08 * Math.sin(2*args.D - 2*args.L + 2*args.EM - 3*args.Ju + args.Sa - 3.1048639310827997);
  s += 6.1050131111828366e-08 * Math.sin(2*args.D - args.L + args.Ve - args.EM + 3.1404618446801429);
  s += 5.9826008248894542e-08 * Math.sin(2*args.D - args.F + args.L + args.zeta + 1.7802358370347263e-05);
  s += 5.9518581024978625e-08 * Math.sin(4*args.D - 2*args.L + 2*args.EM - 2*args.Ju - 3.1394824443841141);
  s += 4.3615981659298737e-08 * Math.sin(2*args.D + 3*args.EM - 8*args.Ma + 3*args.Ju + 0.51242640244551807);
  s += 5.8632207188599564e-08 * Math.sin(2*args.D - args.L - args.EM + args.Sa + 3.1297173641733198);
  s += 5.912839669296881e-08 * Math.sin(args.D + args.Ve - args.EM - 3.1412426289689632);
  s += 5.2689371331004341e-08 * Math.sin(5*args.EM - 8*args.Ma + 3*args.Ju - 3.0191321412368475);
  s += 4.2286146235207145e-08 * Math.sin(2*args.D + args.EM - 2*args.Ju - 0.97767455569731965);
  s += 4.2361752717592733e-08 * Math.sin(2*args.D + 2*args.EM - 4*args.Ma - 1.0002483906433439);
  s += 5.8145293229522516e-08 * Math.sin(args.D + 2*args.EM - 2*args.Ma - 3.1367526438687179);
  s += 5.7892050116278886e-08 * Math.sin(args.D - 3*args.Ve + 4*args.EM + 1.5644376298751503);
  s += 4.4701280739109417e-08 * Math.sin(2*args.D - 2*args.L - 2*args.Ve + 13*args.EM - 15*args.Ma - 1.953589734789585);
  s += 4.7909828985610087e-08 * Math.sin(args.D - args.F + 4*args.Ve - 5*args.EM + 1.335558691297924);
  s += 4.0898393362375587e-08 * Math.sin(args.L - 2*args.EM + 3*args.Ma - 2.616408070700837);
  s += 3.9349770547133227e-08 * Math.sin(2*args.Ju - 0.76423742586344467);
  s += 4.4918522784496981e-08 * Math.sin(args.L - args.Ve + 2*args.EM + 1.299075142980048);
  s += 4.0576173619573775e-08 * Math.sin(args.L - 5*args.EM + 6*args.Ma - 2.6383997437927817);
  s += 5.4459437377666833e-08 * Math.sin(2*args.D + args.L - 2*args.Ve + 2*args.EM + 3.1339950344580374);
  s += 5.3347642742544062e-08 * Math.sin(4*args.EM - 7*args.Ma - 1.5451009771552655);
  s += 4.5273285819037244e-08 * Math.sin(2*args.D - args.Ve + 1.7958312267941401);
  s += 3.9219482806713785e-08 * Math.sin(2*args.D - 2*args.L + 2*args.EM - 4*args.Ju + 3*args.Sa + 1.0074230317672068);
  s += 4.23288415989609e-08 * Math.sin(2*args.Ve - args.EM - 1.8812415744163871);
  s += 4.2673312015370063e-08 * Math.sin(2*args.D + args.L + 4*args.EM - 8*args.Ma + 3*args.Ju - 1.2903626841451636);
  s += 4.2636739594718203e-08 * Math.sin(2*args.D + args.L - 4*args.EM + 8*args.Ma - 3*args.Ju - 1.8511600791830016);
  s += 4.5387337160983005e-08 * Math.sin(2*args.D - 3*args.L + 2*args.EM - 3*args.Ju + 0.17534281369072804);
  s += 4.2365838874821714e-08 * Math.sin(args.L + args.Ve - 2*args.EM + 1.8515783585068477);
  s += 3.8343238880189706e-08 * Math.sin(args.L + 3*args.EM - 4*args.Ma - 0.51279822501983741);
  s += 4.3343858445026295e-08 * Math.sin(args.D - args.F + args.Ve + 1.8035479597079447);
  s += 5.101510717584999e-08 * Math.sin(args.EM - args.Ma + 0.015424665582543072);
  s += 5.1624816806723286e-08 * Math.sin(8*args.Ve - 8*args.EM + 3.1415453558517199);
  s += 4.1695913927444293e-08 * Math.sin(2*args.D + 8*args.EM - 16*args.Ma + 4*args.Ju + 5*args.Sa - 1.8423468661470046);
  s += 4.1695571049424628e-08 * Math.sin(2*args.D - 8*args.EM + 16*args.Ma - 4*args.Ju - 5*args.Sa - 1.2992459015452127);
  s += 4.25256529137915e-08 * Math.sin(2*args.D - args.L - args.Ve + 1.7968086729024226);
  s += 4.1559369291539016e-08 * Math.sin(2*args.D - 3*args.EM + 2*args.Ju + 1.8189223655475584);
  s += 4.3498875136019755e-08 * Math.sin(4*args.D - 2*args.L + 2*args.EM - 3*args.Ju + 0.17393264807802097);
  s += 5.0265919225188062e-08 * Math.sin(4*args.D - args.L + 2*args.EM - 2*args.Ju - 3.1396072693614809);
  s += 3.6571763640790455e-08 * Math.sin(args.L + 2*args.EM - 3*args.Ma - 0.52784112966086683);
  s += 4.5951533621441326e-08 * Math.sin(2*args.D - args.L - 5*args.EM + 8*args.Ma - 3*args.Ju - 0.087759188649608258);
  s += 4.9279494110697842e-08 * Math.sin(2*args.D - 3*args.L + 24*args.Ve - 24*args.EM + 3.1321609107046164);
  s += 4.9708392847024546e-08 * Math.sin(2*args.L - args.Ve + args.EM - 0.00018733135581648519);
  s += 3.574849414509717e-08 * Math.sin(2*args.D - 2*args.EM + 3*args.Ma - 2.6352875748495652);
  s += 3.4935858684063342e-08 * Math.sin(args.EM + args.Ju - 2.1705368897959381);
  s += 3.4114998440981152e-08 * Math.sin(2*args.D - 2*args.L + 18*args.Ve - 17*args.EM + 2.2600192880722334);
  s += 4.7460649612203698e-08 * Math.sin(args.D - args.EM + args.Ju + 3.1300407613021846);
  s += 4.118343223018177e-08 * Math.sin(3*args.EM - 3*args.Ju + 2.9631729953712482);
  s += 3.9449674115754994e-08 * Math.sin(args.L - 3*args.EM + 2*args.Ju - 1.3404561974122884);
  s += 3.3837618813862064e-08 * Math.sin(args.D + args.EM - 2*args.Ju - 0.93897884724208791);
  s += 4.1201061390760111e-08 * Math.sin(args.L - args.Sa - 1.4126973521954169);
  s += 4.1140944070023638e-08 * Math.sin(args.L + args.Sa - 1.7296164675874111);
  s += 4.6258665982768819e-08 * Math.sin(2*args.D - args.EM + args.Sa + 3.128843006894535);
  s += 4.5804117367060449e-08 * Math.sin(2*args.L - args.EM + args.Ju + 3.1187064692237847);
  s += 4.3216237523426115e-08 * Math.sin(2*args.D - 5*args.EM + 8*args.Ma - 3*args.Ju - 0.078931149065806894);
  s += 4.6381763582424995e-08 * Math.sin(2*args.D + 5*args.Ve - 5*args.EM + 0.00057793637655847757);
  s += 3.7869629660589486e-08 * Math.sin(2*args.D - args.L - 19*args.Ve + 21*args.EM - 3*args.Ma + 2.8846314211615316);
  s += 3.9503101767376879e-08 * Math.sin(args.L + 2*args.EM - 3*args.Ju - 2.9557617678850945);
  s += 3.3461344236311804e-08 * Math.sin(2*args.D - 2*args.EM + 4*args.Ma - 2.1087328225991797);
  s += 3.9699040942717835e-08 * Math.sin(5*args.Ve - 7*args.EM + 2.9758337265494679);
  s += 4.5209178516308286e-08 * Math.sin(2*args.D - args.L - 18*args.Ve + 18*args.EM + 0.0016696696752295864);
  s += 4.5165557279892796e-08 * Math.sin(2*args.D + args.L - args.Ve + args.EM + 0.00026277451655859008);
  s += 3.2868776218200871e-08 * Math.sin(5*args.EM - 9*args.Ma - 2.0549047340820623);
  s += 4.4271115953783716e-08 * Math.sin(2*args.D + 4*args.Ve - 4*args.EM + 0.00130342565774985);
  s += 4.4311970453409521e-08 * Math.sin(2*args.D + args.F + args.L - args.zeta + 3.1415729313692458);
  s += 3.2040938703992557e-08 * Math.sin(args.L - 6*args.EM + 8*args.Ma + 1.0018235167984821);
  s += 4.2990067575861088e-08 * Math.sin(2*args.D - 2*args.L - args.EM + args.Ju + 3.1122999297904435);
  s += 3.6288739644387052e-08 * Math.sin(2*args.D - 18*args.Ve + 15*args.EM - 1.8082678142286117);
  s += 3.836761831832332e-08 * Math.sin(2*args.D - 2*args.L + 14*args.EM - 23*args.Ma + 1.7236507433708861);
  s += 3.1749260886547721e-08 * Math.sin(2*args.D - args.L + 2*args.EM - 3*args.Ma - 0.50266777380994032);
  s += 4.2374848854460902e-08 * Math.sin(2*args.D + 2*args.EM - 2*args.Ma + 0.014842571071915478);
  s += 4.2954492146305347e-08 * Math.sin(2*args.D - args.F + args.L - args.zeta - 8.2030474844971007e-06);
  s += 4.2585816046598078e-08 * Math.sin(2*args.L - 3*args.Ve + 3*args.EM + 3.1392034131774622);
  s += 4.266042432150403e-08 * Math.sin(2*args.L + args.Ve - args.EM - 3.1412963253991948);
  s += 4.1832763056971061e-08 * Math.sin(args.L - args.EM + args.Sa + 3.1336923371759196);
  s += 4.1924086378234601e-08 * Math.sin(args.L - 4*args.Ve + 4*args.EM + 3.1366412978156384);
  s += 3.2629119579837822e-08 * Math.sin(2*args.EM - 4*args.Ju - 2.7847109666979781);
  s += 3.4125770957930858e-08 * Math.sin(2*args.D - args.L - 3*args.EM + 2*args.Ju + 1.8206162587351988);
  s += 3.1612071984180735e-08 * Math.sin(2*args.D - args.L + 10*args.Ve - 3*args.EM - 0.40228970941128123);
  s += 3.1577797921487399e-08 * Math.sin(2*args.D + args.L - 10*args.Ve + 3*args.EM - 2.7393203297187165);
  s += 4.1199355171386299e-08 * Math.sin(2*args.D + 6*args.Ve - 6*args.EM + 0.00066303349875595455);
  s += 4.0145171111468151e-08 * Math.sin(2*args.D - args.L + args.Ve - 1.5665207843332773);
  s += 3.9663104679080246e-08 * Math.sin(2*args.D - args.L + 6*args.Ve - 7*args.EM - 1.5565491851115592);
  s += 4.0189656113192852e-08 * Math.sin(2*args.D - args.L + 8*args.Ve - 8*args.EM - 3.1412969192325781);
  s += 3.7594399513095757e-08 * Math.sin(args.D + args.F - args.L + args.EM + 1.6355685295654601);
  s += 2.8371933262411329e-08 * Math.sin(2*args.D - args.L - args.EM + 3*args.Ju - 2.2585255309312422);
  s += 3.0413079163720263e-08 * Math.sin(2*args.D - 2*args.L + 10*args.Ve - 3*args.EM - 0.40267822971603573);
  s += 3.9609277746650464e-08 * Math.sin(2*args.D + args.F - args.L + args.zeta + 1.2391837689153924e-05);
  s += 3.0164587482842506e-08 * Math.sin(2*args.D - 10*args.Ve + 3*args.EM - 2.7390321395822315);
  s += 3.5308773659205448e-08 * Math.sin(args.D + args.F + args.L + args.EM + 1.6881426264664698);
  s += 3.1520195226948039e-08 * Math.sin(2*args.D - 3*args.EM + 3*args.Ju + 0.28815410933582131);
  s += 2.8292935231560964e-08 * Math.sin(args.L - 3*args.Ve + 7*args.EM - 4*args.Ma + 0.54230385806174908);
  s += 2.826138273902547e-08 * Math.sin(args.L + 3*args.Ve - 7*args.EM + 4*args.Ma + 2.5993078998645234);
  s += 3.5847007035639555e-08 * Math.sin(args.D - args.F - args.EM + 1.4931088005135849);
  s += 3.5298632181478939e-08 * Math.sin(args.D + args.F - args.L - args.EM - 1.6640717805497307);
  s += 3.7231880446052977e-08 * Math.sin(2*args.L + args.EM - args.Ju + 0.018297311212970558);
  s += 2.8859374416535017e-08 * Math.sin(2*args.D - args.L - args.EM - 2*args.Ju + 5*args.Sa + 1.9760086223887356);
  s += 3.1928866093759008e-08 * Math.sin(args.D - 3*args.F + 43*args.Ve - 42*args.EM - 1.3680956348404401);
  s += 2.7825394913753325e-08 * Math.sin(args.Lp + 2.649176248753156);
  s += 3.6091570921297188e-08 * Math.sin(2*args.D - 2*args.F - args.L + 5*args.Ve - 6*args.EM - 1.5299663651021775);
  s += 3.5723529285945143e-08 * Math.sin(2*args.D - 2*args.F + args.L + 5*args.Ve - 6*args.EM - 1.529932941240427);
  s += 3.7076951912652235e-08 * Math.sin(4*args.D - 2*args.L + 3*args.Ve - 3*args.EM + 3.1412539587665869);
  s += 3.6759750541143832e-08 * Math.sin(args.L + 4*args.Ve - 4*args.EM - 3.1404133130098586);
  s += 3.624787099016157e-08 * Math.sin(args.L + 3*args.Ve - 3*args.EM + 3.1276631458377748);
  s += 3.2722226453955449e-08 * Math.sin(2*args.D - args.L + 2*args.EM - 5*args.Sa - 3.0124672982865035);
  s += 3.6005954269113197e-08 * Math.sin(9*args.Ve - 9*args.EM + 3.1413779629214247);
  s += 3.177782396341701e-08 * Math.sin(args.L - args.Ve + 1.7147689709475347);
  s += 2.5917474208452597e-08 * Math.sin(5*args.EM - 7*args.Ma + 2.1570161624335116);
  s += 2.5938598344702816e-08 * Math.sin(2*args.D - args.L - 3*args.Ve + 7*args.EM - 4*args.Ma + 0.56861570337494172);
  s += 2.5790761490040121e-08 * Math.sin(2*args.D - args.L + 3*args.Ve - 7*args.EM + 4*args.Ma + 2.5730556882086835);
  s += 3.0807945177262502e-08 * Math.sin(2*args.D - args.L + 2*args.EM - 4*args.Ju + 5*args.Sa - 0.16221323084812894);
  s += 3.5306529583088969e-08 * Math.sin(2*args.EM - 2*args.Sa - 3.139897575951887);
  s += 2.881214628942291e-08 * Math.sin(args.L - 3*args.Ve + 2*args.EM - 1.338686401217396);
  s += 3.444149496753271e-08 * Math.sin(2*args.D + 7*args.Ve - 7*args.EM + 0.00055516564358411725);
  s += 2.815254822400973e-08 * Math.sin(2*args.L - 26*args.Ve + 29*args.EM + 1.831132961938329);
  s += 2.4003345646030792e-08 * Math.sin(args.L - 18*args.Ve + 12*args.EM + 8*args.Ma - 3*args.Ju - 2.3302097738064314);
  s += 2.4639273944987835e-08 * Math.sin(2*args.D - args.L - 3*args.EM + 5*args.Ma - 2.1270045019752022);
  s += 2.4474212954642917e-08 * Math.sin(6*args.EM - 11*args.Ma - 2.5627792694984572);
  s += 3.3454290877838208e-08 * Math.sin(2*args.D - args.L - args.EM + args.Ma + 3.1300966989686545);
  s += 3.364809742809683e-08 * Math.sin(2*args.D - 2*args.L - 2*args.Ve + 2*args.EM + 3.1370404924668769);
  s += 2.5949126742870447e-08 * Math.sin(2*args.D - args.L + 10*args.EM - 19*args.Ma + 3*args.Sa + 1.2296200942281821);
  s += 2.594490400440626e-08 * Math.sin(2*args.D - args.L - 10*args.EM + 19*args.Ma - 3*args.Sa + 1.9119767889203758);
  s += 2.8679601653289097e-08 * Math.sin(2*args.D - args.L + 3*args.EM - 4*args.Ju - 2.9792657527366764);
  s += 2.3349856422848533e-08 * Math.sin(18*args.Ve - 17*args.EM + 2.2610401856913764);
  s += 2.4653611233214927e-08 * Math.sin(args.D - args.F + args.EM + args.Sa - 0.4451519505848352);
  s += 2.6797551991360223e-08 * Math.sin(2*args.D - args.L - 3*args.EM + 3*args.Ju + 0.25923080275196109);
  s += 2.430781252784415e-08 * Math.sin(args.L - 8*args.EM + 15*args.Ma + 0.45665387865978402);
  s += 2.356385339668259e-08 * Math.sin(2*args.D - args.L + 2*args.EM - 4*args.Ju + 3*args.Sa + 1.0079080899049073);
  s += 2.4143051115843359e-08 * Math.sin(args.L + 8*args.EM - 15*args.Ma + 2.6844366888410041);
  s += 3.2255870435119971e-08 * Math.sin(args.D - args.Ve + args.EM + 3.1414568823298312);
  s += 2.6926138030881772e-08 * Math.sin(2*args.D + 6*args.Ve - 8*args.EM + 2.9198659377122782);
  s += 3.1838663815427011e-08 * Math.sin(args.L + args.EM - args.Sa + 0.0069573429815097841);
  s += 2.9194722419551163e-08 * Math.sin(3*args.D - args.F + args.EM + 1.6701907473213016);
  s += 2.3378861041907891e-08 * Math.sin(3*args.EM - 6*args.Ma + 2*args.Ju - 0.51676275945366856);
  s += 2.6523051182058951e-08 * Math.sin(args.D - args.F + args.L - 18*args.Ve + 17*args.EM - 1.798144987374654);
  s += 3.0576302020167542e-08 * Math.sin(args.L - 23*args.Ve + 24*args.EM - 1.6086023962564024);
  s += 2.3084172405330536e-08 * Math.sin(2*args.D - args.L + 3*args.EM - 4*args.Ma - 0.52164721727417596);
  s += 3.1318963799674954e-08 * Math.sin(2*args.D - args.F - args.Lp + args.zeta + 1.5882496193145059e-05);
  s += 3.0786458404113578e-08 * Math.sin(2*args.D - args.L + 3*args.EM - 3*args.Ma + 0.016683262534711998);
  s += 2.4949719477305258e-08 * Math.sin(args.L - 4*args.Ve + 6*args.EM - 2.8462384047559213);
  s += 2.2244287218824076e-08 * Math.sin(args.L - args.EM + 3*args.Ju - 2.2096337458223081);
  s += 2.2545625300715078e-08 * Math.sin(2*args.F + 2*args.L - 18*args.Ve + 16*args.EM - 0.46328254545827441);
  s += 2.4888201165073968e-08 * Math.sin(2*args.L - 18*args.Ve + 15*args.EM - 1.8082553481563488);
  s += 2.296920302900764e-08 * Math.sin(2*args.D - args.L - args.EM - args.Ju - 1.1800967449127064);
  s += 2.4408238629157282e-08 * Math.sin(26*args.Ve - 29*args.EM + 1.3100837779038987);
  s += 2.1004368648260968e-08 * Math.sin(2*args.L + args.EM - 2*args.Ma - 0.81035306420244047);
  s += 2.2072878491133905e-08 * Math.sin(2*args.F + 18*args.Ve - 16*args.EM - 2.6783034988014629);
  s += 2.872755269161117e-08 * Math.sin(2*args.D - 2*args.L - 20*args.Ve + 21*args.EM - 1.601791080806068);
  s += 2.1014057365220275e-08 * Math.sin(2*args.D - args.EM + 3*args.Ju - 2.2586277344644325);
  s += 2.0923324042782187e-08 * Math.sin(2*args.L - args.EM + 2*args.Ma - 2.3245732551267655);
  s += 2.8816342104324874e-08 * Math.sin(4*args.EM - 8*args.Ma + args.Ju + 5*args.Sa - 1.550002326296648);
  s += 2.1997490445281312e-08 * Math.sin(args.L - 2*args.EM + args.Ju - 1.1374593810223574);
  s += 2.3551037557157433e-08 * Math.sin(3*args.EM - 2*args.Ju + 1.2902525969006946);
  s += 2.0636336436661993e-08 * Math.sin(args.L - 2*args.Ju - 2.4224703955453304);
  s += 2.1248048195707262e-08 * Math.sin(2*args.D - args.L - 4*args.EM + 6*args.Ma - 2.1047555119895973);
  s += 2.0602744163349983e-08 * Math.sin(args.L + 2*args.Ju - 0.73221533674943873);
  s += 2.8281326528242017e-08 * Math.sin(2*args.D - args.L + args.Sa - 1.5891028340561317);
  s += 2.6867606402751755e-08 * Math.sin(7*args.EM - 13*args.Ma - 3.0686548296166323);
  s += 2.8248837089694031e-08 * Math.sin(2*args.D - args.L - args.Sa - 1.5594328672867765);
  s += 2.0120177461826293e-08 * Math.sin(2*args.Ve - 4*args.EM + 2.2604710922255169);
  s += 2.0293110975149536e-08 * Math.sin(args.L + args.EM - 3*args.Ju - 0.96073732188346517);
  s += 2.2464595954053141e-08 * Math.sin(2*args.D - 2*args.L + 4*args.EM - 8*args.Ma + 3*args.Ju - 1.2612804106680318);
  s += 2.2428382735663057e-08 * Math.sin(2*args.D - 2*args.L - 4*args.EM + 8*args.Ma - 3*args.Ju - 1.880357897515186);
  s += 2.0974132781223615e-08 * Math.sin(args.D + args.L - 18*args.Ve + 16*args.EM - 0.46326951054226484);
  s += 2.0903826505523799e-08 * Math.sin(args.D - args.L + 18*args.Ve - 16*args.EM - 2.6783137694442996);
  s += 2.009080966596589e-08 * Math.sin(2*args.D - args.L + 2*args.EM - 5*args.Ju + 5*args.Sa - 2.1868662064125468);
  s += 2.7945844955469798e-08 * Math.sin(4*args.D - args.L + 3*args.Ve - 3*args.EM + 3.1413668885259716);
  s += 2.7832097394035758e-08 * Math.sin(2*args.D + 8*args.Ve - 8*args.EM + 0.00041431021415233566);
  s += 2.2511522720237012e-08 * Math.sin(2*args.L - 2*args.Ju + 5*args.Sa - 2.864546053990082);
  s += 2.2487665142394704e-08 * Math.sin(2*args.L + 2*args.Ju - 5*args.Sa - 0.27731666744565631);
  s += 2.7682781090835466e-08 * Math.sin(2*args.D - 2*args.L + 2*args.Ve - 2*args.EM - 0.0012230759721500485);
  s += 2.7081959717756596e-08 * Math.sin(3*args.Ve - 5*args.EM + 2*args.Ju + 3.1225072999862751);
  s += 1.9442578308768353e-08 * Math.sin(args.Ur - 2*args.Ne + 2.2578683515542033);
  s += 1.9537169208470676e-08 * Math.sin(9*args.EM - 17*args.Ma + 2.2094715363381034);
  s += 2.2077119608524366e-08 * Math.sin(3*args.EM - 2*args.Ma - 1.8420647096881326);
  s += 1.9853627159130595e-08 * Math.sin(args.L - 3*args.EM + 5*args.Ma - 2.0984839541553795);
  s += 2.0735358511008001e-08 * Math.sin(2*args.D - args.EM - 2*args.Ju + 5*args.Sa + 1.9645235269054679);
  s += 2.6864621494153722e-08 * Math.sin(2*args.D - 3*args.L + 2*args.EM - 2*args.Ju + 0.0011074440886723943);
  s += 2.185013416914344e-08 * Math.sin(3*args.D - 3*args.L + 3*args.EM - 4*args.Ju + 0.25529478656085985);
  s += 2.662155033196373e-08 * Math.sin(21*args.Ve - 21*args.EM + 3.1401655599244753);
  s += 2.6309090400251661e-08 * Math.sin(args.L - 4*args.Ve + 5*args.EM - 1.5820691709545458);
  s += 2.2031972547415774e-08 * Math.sin(2*args.D - 3*args.EM + 2*args.Ma - 1.3368519601136237);
  s += 2.6493799237018382e-08 * Math.sin(args.L + 5*args.Ve - 5*args.EM - 3.1410631622116663);
  s += 1.9708309620486891e-08 * Math.sin(4*args.D - 18*args.Ve + 16*args.EM + 2.67831651080273);
  s += 2.1183570370587729e-08 * Math.sin(args.L + 4*args.Ve - 6*args.EM - 0.29424010604983553);
  s += 2.0531696626091554e-08 * Math.sin(args.L - 2*args.EM + 4*args.Ju - 0.35419116561984593);
  s += 2.6281976104679401e-08 * Math.sin(2*args.D - args.L + 9*args.Ve - 9*args.EM - 3.1415233130015978);
  s += 1.9726211062193158e-08 * Math.sin(2*args.D - args.EM - args.Ju - 1.1315938520930691);
  s += 1.9987900482220113e-08 * Math.sin(2*args.D - args.L - 8*args.EM + 15*args.Ma + 0.39537584430136385);
  s += 2.5255062818989735e-08 * Math.sin(2*args.D - args.L + 2*args.EM - 3*args.Ju + args.Sa + 0.033647176366380052);
  s += 2.5424814334324078e-08 * Math.sin(2*args.D + args.L - 2*args.EM + 2*args.Ju - 0.024135229046971195);
  s += 1.8481407631117498e-08 * Math.sin(2*args.L - 18*args.Ve + 17*args.EM - 2.2597871080284295);
  s += 2.1341345990845953e-08 * Math.sin(args.L - 3*args.EM + 3*args.Ju + 1.818129285686928);
  s += 2.1453418852526801e-08 * Math.sin(args.D - args.F + 2*args.Ve - args.EM + 1.8027640735931063);
  s += 1.9208650168083065e-08 * Math.sin(4*args.D - 2*args.L + 18*args.Ve - 16*args.EM + 0.46328386957048945);
  s += 2.152315679101404e-08 * Math.sin(args.D - args.F - args.L + 23*args.Ve - 23*args.EM - 2.9198983000126577);
  s += 1.9936727559722774e-08 * Math.sin(args.L - 5*args.Ve + 8*args.EM + 1.9346914660980956);
  s += 2.4384607742041473e-08 * Math.sin(2*args.D - args.L + 7*args.EM - 10*args.Ma - 1.5156748150433248);
  s += 1.9096036525979752e-08 * Math.sin(2*args.D - args.L - args.EM + 2.0368764823999488);
  s += 2.541626036833876e-08 * Math.sin(10*args.Ve - 10*args.EM + 3.1412093842061042);
  s += 2.1602404136687063e-08 * Math.sin(args.D + args.F - args.L + args.EM - 2*args.Ju + 1.7541857301538089);
  s += 1.9238862783478252e-08 * Math.sin(2*args.D - args.L + 8*args.EM - 15*args.Ma + 2.7450140214182821);
  s += 2.0675066906668616e-08 * Math.sin(args.D - args.F - args.L + args.EM + args.Ju + 1.3193951756873674);
  s += 2.1627870797246222e-08 * Math.sin(4*args.D - args.L + 2*args.EM - 3*args.Ju + 0.17347620446337872);
  s += 2.053412770537493e-08 * Math.sin(args.D - args.F + args.L + args.EM + args.Ju + 1.3194514104463202);
  s += 2.4786324445687374e-08 * Math.sin(2*args.D - 2*args.L - args.Ve + args.EM + 0.00034573056688622209);
  s += 1.8144827177156464e-08 * Math.sin(args.L + 3*args.EM - 5*args.Ma - 1.046518374166491);
  s += 2.1388707847623948e-08 * Math.sin(4*args.D - 3*args.L + 2*args.EM - 3*args.Ju + 0.17485844010201307);
  s += 1.8252001553002027e-08 * Math.sin(2*args.D - args.L + 4*args.EM - 5*args.Ma - 0.49954273664006821);
  s += 1.9084644351807214e-08 * Math.sin(args.L + 5*args.Ve - 8*args.EM + 1.2047745965265158);
  s += 2.0502475279795698e-08 * Math.sin(2*args.D - args.L - 3*args.EM + 2*args.Ma - 1.3404532954522355);
  s += 1.8294667232720895e-08 * Math.sin(4*args.L - 18*args.Ve + 16*args.EM + 2.6783114452154764);
  s += 1.8141792613196024e-08 * Math.sin(4*args.EM - 8*args.Ma - 2.046443396914726);
  s += 2.4373228890741838e-08 * Math.sin(2*args.D + args.L + 2*args.EM - 2*args.Ju - 3.1395086065521958);
  s += 2.0101557416184961e-08 * Math.sin(2*args.D - args.L - 4*args.Ve + 6*args.EM - 2.8942336992491269);
  s += 2.0260362814344143e-08 * Math.sin(2*args.D - args.L + 3*args.Ve - 4*args.EM - 1.3386762268143271);
  s += 1.7819882273602391e-08 * Math.sin(2*args.D + 2*args.EM - 3*args.Ma - 0.51441284130829268);
  s += 2.41947145962456e-08 * Math.sin(args.D - 3.1404675888503637);
  s += 2.0698669028470044e-08 * Math.sin(2*args.F - args.L - 4*args.Me + 3*args.EM + 1.3854958772214983);
  s += 2.1579079297944778e-08 * Math.sin(2*args.D - args.L - 3*args.EM + 3*args.Ma - 0.12788510890038896);
  s += 1.8029075703114743e-08 * Math.sin(2*args.D - 15*args.Ve + 13*args.EM + 2.6822983387817469);
  s += 1.8420507276636492e-08 * Math.sin(args.Ve - 3*args.EM + 2.7453687008491636);
  s += 1.7681274155537877e-08 * Math.sin(args.L + 3*args.EM - 8*args.Ma + 3*args.Ju + 0.50270819694974478);
  s += 2.3107747720636573e-08 * Math.sin(5*args.EM - 8*args.Ma - 1.5354180701125768);
  s += 2.3155593125282752e-08 * Math.sin(args.D + args.F - args.L - args.Me - 15*args.Ve + 16*args.EM + 3.122086078764593);
  s += 2.2520410626672933e-08 * Math.sin(2*args.D + 3*args.Ve - 4*args.EM - 1.5224962298121496);
  s += 2.2381039748080477e-08 * Math.sin(2*args.D - args.L + 2*args.EM - 3*args.Sa - 1.5163791254610968);
  s += 2.3416500797588256e-08 * Math.sin(2*args.D + args.F - args.Lp - args.zeta + 3.1415755493631239);
  s += 1.7874647511964269e-08 * Math.sin(6*args.Ve - 10*args.EM + 3*args.Ju - 1.1724770315094148);
  s += 2.1477613551414628e-08 * Math.sin(3*args.D - args.F - args.L + args.EM - 1.4824562547442748);
  s += 2.322257532514912e-08 * Math.sin(2*args.D + args.F + args.zeta + 1.2217304763958231e-05);
  s += 2.1948003616177959e-08 * Math.sin(args.L - 3*args.EM + 3*args.Ma - 0.054109732373556034);
  s += 1.9163963102476399e-08 * Math.sin(args.D - args.F + 2*args.Ve - 3*args.EM - 1.8052523637214632);
  s += 1.7164370791393205e-08 * Math.sin(2*args.L + 18*args.Ve - 16*args.EM + 0.46329817205770463);
  s += 1.9507345570709404e-08 * Math.sin(4*args.EM - 4*args.Ma - 2.9452870015088104);
  s += 1.7958349874264428e-08 * Math.sin(2*args.D - args.L + 2*args.EM - args.Ju - 5*args.Sa + 0.33092567058982481);
  s += 1.6167116284337445e-08 * Math.sin(args.D - args.F - args.L + 18*args.Ve - 15*args.EM - 0.87150019438515869);
  s += 1.6616782155185597e-08 * Math.sin(args.Me - 4*args.EM - 2.6046428067595979);
  s += 2.2519796330501424e-08 * Math.sin(2*args.D - args.EM + args.Ma + 3.1302230833309808);
  s += 1.6519656167023338e-08 * Math.sin(2*args.D - 3*args.EM + 5*args.Ma - 2.1266216099329007);
  s += 1.6466569317707645e-08 * Math.sin(2*args.D - args.L + 3*args.EM - 5*args.Ma - 1.0099921985122735);
  s += 2.2312597221109328e-08 * Math.sin(2*args.D - 4*args.Ve + 4*args.EM - 3.1280765626417137);
  s += 2.2318076767495736e-08 * Math.sin(args.D + args.L + args.EM - args.Ju - 3.1294324184018816);
  s += 1.6367079157111856e-08 * Math.sin(2*args.D - 3*args.Ve + 7*args.EM - 4*args.Ma + 0.56378125965584003);
  s += 2.0653676721432381e-08 * Math.sin(args.D - args.F + 2*args.L + args.EM + 1.6613182624543925);
  s += 1.625013062880081e-08 * Math.sin(2*args.D + 3*args.Ve - 7*args.EM + 4*args.Ma + 2.5780129158845635);
  s += 2.1484761015149985e-08 * Math.sin(4*args.D - args.L - args.EM + args.Ju + 3.0991322456752082);
  s += 2.2349910715170285e-08 * Math.sin(2*args.F - args.L - 4.7725857277250554e-06);
  s += 2.194287258926339e-08 * Math.sin(2*args.D - args.L + 3*args.EM - 2*args.Ju - 1.587924081258238);
  s += 1.5953196438598461e-08 * Math.sin(args.D - args.L + args.EM - 2*args.Ju - 0.94169010319363577);
  s += 1.9543753579332549e-08 * Math.sin(2*args.D - 3*args.EM + 3*args.Ma - 0.13756832679683781);
  s += 2.1998438911154688e-08 * Math.sin(2*args.D + 9*args.Ve - 9*args.EM + 0.00021248400727695796);
  s += 2.1856329909286997e-08 * Math.sin(2*args.D - args.L + args.EM - args.Ma + 0.0062412132374056635);
  s += 1.6015596985825559e-08 * Math.sin(2*args.D - 4*args.EM + 6*args.Ma - 2.1004559684448774);
  s += 2.0780549078752472e-08 * Math.sin(2*args.D - args.L + 7*args.Ve - 8*args.EM - 1.5327881398108416);
  s += 2.1409993346176716e-08 * Math.sin(args.D + args.L + 3*args.Ve - 4*args.EM - 1.5656974484838362);
  s += 1.632858554756342e-08 * Math.sin(args.L - args.EM - 2*args.Ju + 5*args.Sa + 1.9845426170631166);
  s += 1.5780173024167298e-08 * Math.sin(args.D + args.L - 34*args.EM + 41*args.Ma - 2*args.Ju + 2.6392152581695307);
  s += 1.5780173024167298e-08 * Math.sin(args.D - args.L - 34*args.EM + 41*args.Ma - 2*args.Ju + 2.6392152581695307);
  s += 1.7694541695508659e-08 * Math.sin(2*args.D - args.L + 3*args.Ve - 2*args.EM - 1.8119040908711936);
  s += 2.1028050384071212e-08 * Math.sin(2*args.D - args.L - 4*args.Ve + 4*args.EM - 3.1283540199990081);
  s += 1.9538043133657593e-08 * Math.sin(args.D - args.F - 2*args.L + args.EM + 1.6601120482732385);
  s += 1.8545626744253876e-08 * Math.sin(8*args.Ve - 12*args.EM - 0.15123759808819098);
  s += 1.506892726951926e-08 * Math.sin(2*args.D + args.L - args.EM + 2*args.Ju - 2.1928397034293745);
  s += 1.7317373335263573e-08 * Math.sin(18*args.Ve - 15*args.EM + 1.8076698617468259);
  s += 1.9710296241865683e-08 * Math.sin(2*args.D - args.L - 4*args.Ve + 5*args.EM + 1.5109458681488241);
  s += 2.079326405215583e-08 * Math.sin(4*args.D - 3*args.L + 2*args.EM - 2*args.Ju + 0.001600963534712297);
  s += 1.6588555570291065e-08 * Math.sin(2*args.D - args.L - 5*args.Ve + 8*args.EM + 1.8762501480097837);
  s += 1.7517615396211653e-08 * Math.sin(2*args.D - args.L - 5*args.Ve + 7*args.EM + 0.20259001676211091);
  s += 1.4811269930215124e-08 * Math.sin(args.L - 20*args.Ve + 16*args.EM + 7*args.Ma - 8*args.Ju + 6*args.Sa + 0.59093397651456381);
  s += 1.980539110906112e-08 * Math.sin(2*args.D + 4*args.Ve - 5*args.EM + 1.6007291441192868);
  s += 1.537721184850068e-08 * Math.sin(args.L + args.EM + 2*args.Ju - 5*args.Sa + 1.1406135506547952);
  s += 1.9889106467987319e-08 * Math.sin(2*args.L - 2*args.Ve + 3*args.EM - 1.5496705350061974);
  s += 1.9563934425105515e-08 * Math.sin(2*args.D + args.L - 2*args.EM + 2*args.Ma - 3.1116154833916991);
  s += 1.5122842719465211e-08 * Math.sin(2*args.D - args.EM + 2.0115146333155374);
  s += 1.9002860743952439e-08 * Math.sin(2*args.D + args.Sa - 1.624601071905647);
  s += 1.6431809249794023e-08 * Math.sin(args.D + args.F - 20*args.Ve + 20*args.EM - 0.24507254408356866);
  s += 1.5320112323063197e-08 * Math.sin(2*args.EM + 0.36544751075812792);
  s += 1.9312465905731577e-08 * Math.sin(2*args.D + args.L - 2*args.Ve + 3*args.EM - 1.5925995567734594);
  s += 1.9680393923564784e-08 * Math.sin(args.D - 2*args.L + 3*args.Ve - 4*args.EM - 1.5706603855955477);
  s += 1.4909512692653946e-08 * Math.sin(args.D - args.F + args.EM - 2*args.Sa + 1.9891906981786509);
  s += 1.4295454282573221e-08 * Math.sin(args.L - 4*args.EM + 6*args.Ma - 2.0975243944665634);
  s += 1.8754907235563309e-08 * Math.sin(2*args.D - args.Sa - 1.5297338240623661);
  s += 1.8882253245342125e-08 * Math.sin(6*args.Ve - 7*args.EM - 1.5515696019369567);
  s += 1.7693008555441449e-08 * Math.sin(2*args.D + 3*args.EM - 3*args.Ju + 0.091684248646139055);
  s += 1.9222662209734633e-08 * Math.sin(2*args.D - 2*args.F + 4*args.Ve - 4*args.EM - 3.1407835459483189);
  s += 1.8648512433354643e-08 * Math.sin(args.L - 5*args.Ve + 6*args.EM + 1.5462115192691639);
  s += 1.4047376814351063e-08 * Math.sin(args.L - 4*args.EM + 5*args.Ma + 0.46827698457523431);
  s += 1.7325923197889132e-08 * Math.sin(args.L - 5*args.EM + 8*args.Ma - 3*args.Ju - 0.091439359133933099);
  s += 1.85501440118232e-08 * Math.sin(2*args.D - 2*args.L - 2*args.EM + 2*args.Ju - 0.013949920112999174);
  s += 1.8298020171742821e-08 * Math.sin(2*args.L + 2*args.Ve - 3*args.EM - 1.5973203634870514);
  s += 1.8762289458937726e-08 * Math.sin(args.F - args.L + args.Lp - args.zeta + 3.1415720587046199);
  s += 1.8762289458938808e-08 * Math.sin(args.F - 2*args.L + args.zeta - 3.1415884647995886);
  s += 1.4578235573482158e-08 * Math.sin(8*args.Ve - 14*args.EM - 0.34436401030145897);
  s += 1.5041505205638057e-08 * Math.sin(2*args.D - args.L - args.EM + 2*args.Sa - 1.8484104754085902);
  s += 1.5283460118883711e-08 * Math.sin(args.D - args.F - args.L + 26*args.Ve - 28*args.EM + 2.9033453486802543);
  s += 1.3240362152332474e-08 * Math.sin(2*args.D - 2*args.L + 2*args.EM - 5*args.Ju + 5*args.Sa - 2.1833222982219578);
  s += 1.517974508369639e-08 * Math.sin(args.D - args.F + 5*args.Ve - 6*args.EM + 1.3328437470758989);
  s += 1.8271127612124006e-08 * Math.sin(args.L + 6*args.Ve - 6*args.EM - 3.141557333551718);
  s += 1.2901709533371292e-08 * Math.sin(args.EM - 4*args.Ju - 0.82318564195523625);
  s += 1.5338598444954143e-08 * Math.sin(args.L - 20*args.Ve + 19*args.EM + 3*args.Ju + 0.21283141305135034);
  s += 1.7416042153238387e-08 * Math.sin(5*args.Ve - 6*args.EM - 1.5241547260173713);
  s += 1.4965308828202357e-08 * Math.sin(2*args.D - 4*args.Ve + 6*args.EM - 2.8917115527571835);
  s += 1.8181181882365167e-08 * Math.sin(11*args.Ve - 11*args.EM + 3.1410615376204483);
  s += 1.554432072149597e-08 * Math.sin(2*args.L - 2*args.EM + 3*args.Ju - 0.17946263306048169);
  s += 1.3700704715909979e-08 * Math.sin(2*args.D - args.L - 4*args.EM + 5*args.Ma + 0.4151770071694692);
  s += 1.2843586721610326e-08 * Math.sin(2*args.L - 8*args.Ve + 13*args.EM - 0.93538024011424248);
  s += 1.2823674969489625e-08 * Math.sin(2*args.L + 8*args.Ve - 13*args.EM - 2.2064539203238422);
  s += 1.7742237612660344e-08 * Math.sin(2*args.L - 2*args.Ve + 2*args.EM + 3.1329455181713866);
  s += 1.3559380885221881e-08 * Math.sin(2*args.L + args.Ju - 1.1675917299120109);
  s += 1.6172173977328316e-08 * Math.sin(args.D - args.F + 2*args.Ve - 2*args.EM - 3.0443770227691651);
  s += 1.6433774551211307e-08 * Math.sin(2*args.D - 4*args.Ve + 5*args.EM + 1.5035601157241809);
  s += 1.3109154926872985e-08 * Math.sin(2*args.L - args.Ju - 2.0173361985802818);
  s += 1.7477611062680803e-08 * Math.sin(2*args.D - args.L + 10*args.Ve - 10*args.EM + 3.141394735648408);
  s += 1.2387726029786271e-08 * Math.sin(2*args.D + args.L + args.EM - 2*args.Ma - 0.71347416633063498);
  s += 1.7395591500740985e-08 * Math.sin(2*args.D - args.L - 2*args.EM + 2*args.Sa - 0.0033205273662421857);
  s += 1.4430218172864478e-08 * Math.sin(args.D - args.F + 3*args.Ve - 4*args.EM - 1.8073541829132695);
  s += 1.7351957613331007e-08 * Math.sin(args.L - args.EM + 1.5676466432509129);
  s += 1.2757938525875393e-08 * Math.sin(2*args.D - args.L + 6*args.EM - 7*args.Ma + 2.6305403723919083);
  s += 1.4470631466677447e-08 * Math.sin(args.D - args.F - args.L + 21*args.Ve - 20*args.EM + 1.7966265785921505);
  s += 1.7308014596400801e-08 * Math.sin(2*args.L + 2*args.Ve - 2*args.EM + 0.0013566694856863896);
  s += 1.3226709329243083e-08 * Math.sin(args.Ve + args.EM + 0.38962914366659823);
  s += 1.7162146642989244e-08 * Math.sin(2*args.D - 2*args.EM + 2*args.Sa - 0.0036349328591511764);
  s += 1.2701490269269264e-08 * Math.sin(2*args.D + 5*args.EM - 6*args.Ma + 2.6483763840338734);
  s += 1.2533908023070149e-08 * Math.sin(2*args.L - args.EM + 2*args.Ju - 2.1006644469657623);
  s += 1.7147449569900025e-08 * Math.sin(2*args.D + 10*args.Ve - 10*args.EM - 3.7922777068472808e-05);
  s += 1.3842324596617207e-08 * Math.sin(2*args.D - args.L + 5*args.Ve - 7*args.EM + 2.8660203461257239);
  s += 1.2597650639584296e-08 * Math.sin(2*args.D + 3*args.EM - 4*args.Ma - 0.49602257269760947);
  s += 1.2973589278662069e-08 * Math.sin(2*args.D - 8*args.EM + 15*args.Ma + 0.40634939036748763);
  s += 1.3708491039474318e-08 * Math.sin(2*args.D - args.L - 4*args.Me + 5*args.EM + 1.8591185074811329);
  s += 1.6337006281762533e-08 * Math.sin(2*args.D + 5*args.Ve - 6*args.EM + 1.6135533522003351);
  s += 1.6769265921573635e-08 * Math.sin(2*args.D + args.L + args.EM - args.Ju + 0.0067637070674955203);
  s += 1.3194620191733582e-08 * Math.sin(2*args.D - 2*args.L + 2*args.EM - 4*args.Ju + 0.34193709103626546);
  s += 1.667628490112565e-08 * Math.sin(4*args.D - args.L - 2*args.Ve + 2*args.EM + 3.1316657081676014);
  s += 1.3091578794988614e-08 * Math.sin(2*args.D + 10*args.EM - 19*args.Ma + 3*args.Sa + 1.2296214526237825);
  s += 1.3089341066892023e-08 * Math.sin(2*args.D - 10*args.EM + 19*args.Ma - 3*args.Sa + 1.91198035756596);
  s += 1.6461020888011581e-08 * Math.sin(args.L - args.EM + args.Ma + 3.1334536005006788);
  s += 1.658062789394798e-08 * Math.sin(args.D - args.F + args.zeta - 3.1415772946923757);
  s += 1.1715910955388092e-08 * Math.sin(2*args.D + args.L - args.EM + 2*args.Ma - 2.3875675802829215);
  s += 1.4065333564142474e-08 * Math.sin(2*args.D - 5*args.Ve + 7*args.EM + 0.19799686818008516);
  s += 1.5726747814481214e-08 * Math.sin(2*args.Ma - 3.0911317784883479);
  s += 1.2855307811784055e-08 * Math.sin(2*args.D - args.L + 8*args.Ve - 14*args.EM - 0.33734527980908269);
  s += 1.238895242308125e-08 * Math.sin(2*args.D + 8*args.EM - 15*args.Ma + 2.7319295806121522);
  s += 1.6126852775173768e-08 * Math.sin(2*args.D + args.L - 3*args.Ve + 4*args.EM - 1.58062366088267);
  s += 1.1718499139812765e-08 * Math.sin(2*args.D + 6*args.EM - 8*args.Ma - 1.0059084757464174);
  s += 1.3423919239717513e-08 * Math.sin(args.D - args.F + 3*args.Ve - 2*args.EM + 1.8029824518512712);
  s += 1.2617402244126882e-08 * Math.sin(2*args.D - args.L - 2*args.EM + 4*args.Ju - 0.34546985255978252);
  s += 1.221447673128308e-08 * Math.sin(2*args.D - 4*args.EM + 5*args.Ma + 0.40823753198108526);
  s += 1.604733284472575e-08 * Math.sin(args.F + 2*args.L + args.zeta + 1.2042771838759287e-05);
  s += 1.5822857545708179e-08 * Math.sin(args.L + 3*args.EM - 6*args.Ma - 1.5850095566752738);
  s += 1.277991468508244e-08 * Math.sin(6*args.Ve - 8*args.EM - 0.3015260234807482);
  s += 1.4731712693917566e-08 * Math.sin(2*args.D - 2*args.F - args.L + 23*args.Ve - 22*args.EM - 1.4823409693165763);
  s += 1.2290142791027925e-08 * Math.sin(2*args.D + args.L + args.Ju - 0.37865554677854846);
  s += 1.4239419215584743e-08 * Math.sin(5*args.Ve - 6*args.EM - 4*args.Ma + 0.1284587661988961);
  s += 1.3888820277974526e-08 * Math.sin(2*args.D + args.L - args.Ju - 2.9805327442895888);
  s += 1.58898354745951e-08 * Math.sin(2*args.D + args.L + 2*args.Ve - 2*args.EM - 0.00075402472911363227);
  s += 1.2434750550169196e-08 * Math.sin(2*args.D - args.L + 2*args.Ve - 4*args.EM + 0.34021785952205008);
  s += 1.1540899425689192e-08 * Math.sin(args.L + 4*args.EM - 6*args.Ma - 1.0216680311811026);
  s += 1.2618873186646214e-08 * Math.sin(4*args.D - args.L + 4*args.EM - 8*args.Ma + 3*args.Ju - 1.2809772859351201);
  s += 1.2608654780757443e-08 * Math.sin(4*args.D - args.L - 4*args.EM + 8*args.Ma - 3*args.Ju - 1.8605906129762162);
  s += 1.2159018205590461e-08 * Math.sin(args.F - 23*args.Ve + 24*args.EM - 1.2081392975309824);
  s += 1.1076706332907646e-08 * Math.sin(args.F - args.L - 2*args.Ju + 0.81739571195975091);
  s += 1.5023734938946316e-08 * Math.sin(2*args.D - args.L + 2*args.EM - 4*args.Ju + 2*args.Sa + 0.041643070919485846);
  s += 1.1181869328065673e-08 * Math.sin(args.D - args.EM + 2*args.Ju + 0.94476203098559819);
  s += 1.4463067553658641e-08 * Math.sin(6*args.EM - 9*args.Ma + 1.6511170361601102);
  s += 1.4757591435186269e-08 * Math.sin(args.L - 4*args.EM + 4*args.Ma - 3.0865580241182893);
  s += 1.223638267809512e-08 * Math.sin(6*args.Ve - 9*args.EM + 1.2445475121968925);
  s += 1.3242546438130605e-08 * Math.sin(args.D - args.F - args.L + 5*args.Ve - 7*args.EM + 2.9562766539247276);
  s += 1.2252947695097215e-08 * Math.sin(2*args.D - args.L + 5*args.Ve - 8*args.EM + 1.2628618117707906);
  s += 1.1933621585045231e-08 * Math.sin(args.D + args.F - args.L + args.EM - 3*args.Ju + 1.9319309054868399);
  s += 1.2785427048148515e-08 * Math.sin(args.L - 2*args.Ve + args.EM - 1.3441110074128233);
  s += 1.5042760499102651e-08 * Math.sin(args.L - 3*args.EM + 6*args.Ma - 1.5521422435025254);
  s += 1.1981033757887571e-08 * Math.sin(2*args.D - 2*args.EM + 4*args.Ju - 0.34232139402109502);
  s += 1.1026899705492856e-08 * Math.sin(2*args.D + args.L - 8*args.Ve + 13*args.EM - 0.99024368081324865);
  s += 1.3065976892935188e-08 * Math.sin(args.D - args.F + args.L + 5*args.Ve - 7*args.EM + 2.9564864218676199);
  s += 1.3109487098274405e-08 * Math.sin(args.L - 18*args.Ve + 20*args.EM - 8*args.Ma + 3*args.Ju - 1.7473381890052093);
  s += 1.0754114128926701e-08 * Math.sin(2*args.D - 2*args.Ma + 0.82271314093956827);
  s += 1.0925467884214091e-08 * Math.sin(2*args.D + args.L + 8*args.Ve - 13*args.EM - 2.1523613609860468);
  s += 1.5021673273608343e-08 * Math.sin(2*args.D - args.L + 4*args.EM - 4*args.Ju + 3.137691934727433);
  s += 1.4550110237615868e-08 * Math.sin(2*args.D - 20*args.Ve + 21*args.EM - 1.603777045003739);
  s += 1.1053318844452038e-08 * Math.sin(args.D - 3*args.EM + 4*args.Ma + 0.50254027270460278);
  s += 1.1111041536317381e-08 * Math.sin(args.D - args.F + 2*args.Me - 2*args.Ve - 4*args.EM + 2.0481034589890679);
  s += 1.0536762622910791e-08 * Math.sin(2*args.D - args.L - 2*args.Ma + 0.77985669090742771);
  s += 1.164152046988242e-08 * Math.sin(2*args.D + 8*args.Ve - 14*args.EM - 0.34584583132056479);
  s += 1.4419938713863105e-08 * Math.sin(7*args.Ve - 8*args.EM - 1.5425538398606884);
  s += 1.0918711365233854e-08 * Math.sin(4*args.D - args.L - 18*args.Ve + 16*args.EM + 2.678548614048875);
  s += 1.462276422607187e-08 * Math.sin(2*args.D - 2*args.F + 3*args.Ve - 3*args.EM + 0.0010135840607927967);
  s += 1.1779781560940494e-08 * Math.sin(2*args.D - args.EM + 2*args.Sa - 1.8484718516950107);
  s += 1.3461809856956748e-08 * Math.sin(2*args.D - args.L - 22*args.Ve + 28*args.EM - 7*args.Ma + 1.4859774202420841);
  s += 1.1732491082848547e-08 * Math.sin(2*args.D - args.L + args.EM + 0.28032693047372831);
  s += 1.1738129272878014e-08 * Math.sin(args.L - args.EM + 2*args.Sa - 1.8423643668241045);
  s += 1.4262937875468255e-08 * Math.sin(args.L + args.EM - args.Ma + 0.0073680201391360051);
  s += 1.1572567106248382e-08 * Math.sin(args.D + 4*args.EM - 8*args.Ma + 3*args.Ju + 1.8566912722890085);
  s += 1.1548796471983996e-08 * Math.sin(args.D - 4*args.EM + 8*args.Ma - 3*args.Ju + 1.2846648662466291);
  s += 1.3689630269035233e-08 * Math.sin(4*args.D - 2*args.L - args.EM + args.Ju + 3.1001473172954817);
  s += 1.4205040856511794e-08 * Math.sin(args.F - args.L - args.Lp - args.zeta - 2.0245819323110073e-05);
  s += 1.4067761421891068e-08 * Math.sin(args.D - args.L + args.Ve - args.EM - 3.1412880491418278);
  s += 1.1047923993121556e-08 * Math.sin(2*args.D - 2*args.L + 2*args.EM - args.Ju - 5*args.Sa + 0.33105681892862449);
  s += 1.1142795835491715e-08 * Math.sin(2*args.D - 5*args.Ve + 8*args.EM + 1.884095896149321);
  s += 1.4011115384065556e-08 * Math.sin(2*args.D - args.F - args.L - args.Lp + args.zeta + 7.1558499331752748e-06);
  s += 1.1622412690171765e-08 * Math.sin(3*args.D - args.F - args.L + 3*args.Ve - 2*args.EM + 1.8030567096458368);
  s += 1.1501526565675465e-08 * Math.sin(args.D + args.F - 2*args.L - 20*args.Ve + 20*args.EM - 0.24507665743566759);
  s += 1.3922041747205724e-08 * Math.sin(2*args.D + args.L + args.Ve - args.EM - 3.1410899488696065);
  s += 1.0896968600995477e-08 * Math.sin(2*args.D + 2*args.Ve - 4*args.EM + 0.32944652597323798);
  s += 1.0263829305665226e-08 * Math.sin(4*args.D - 3*args.L + 18*args.Ve - 16*args.EM + 0.46321147296817883);
  s += 9.8685030070374617e-09 * Math.sin(6*args.EM - 8*args.Ma + 2.1725564218828994);
  s += 1.3671745807287979e-08 * Math.sin(args.F + args.Lp - args.zeta + 3.1415809598838047);
  s += 9.950758779429393e-09 * Math.sin(2*args.Ve + 0.54083492510156583);
  s += 1.0379634412163886e-08 * Math.sin(args.L + 10*args.Ve - 3*args.EM - 0.40192363411544363);
  s += 1.0099345445957922e-08 * Math.sin(2*args.D - args.L + 4*args.EM - 6*args.Ma - 1.109974590549297);
  s += 1.3353687372214358e-08 * Math.sin(2*args.L - 2*args.EM + 2*args.Ma - 3.1281142006510709);
  s += 1.3013691709037225e-08 * Math.sin(2*args.D - args.L + 8*args.Ve - 9*args.EM - 1.5323297707078818);
  s += 1.0297391741981729e-08 * Math.sin(3*args.L - 10*args.Ve + 3*args.EM - 2.7397877048924091);
  s += 9.8112456798063241e-09 * Math.sin(2*args.L + args.EM - 2*args.Ju - 1.0226980596993058);
  s += 1.1481709476679671e-08 * Math.sin(2*args.D - args.L + 7*args.Ve - 9*args.EM - 0.19377069736766978);
  s += 1.3039068086077973e-08 * Math.sin(args.L + args.EM + 1.5413753127356391);
  s += 9.492309646463545e-09 * Math.sin(2*args.D - 2*args.L - 12*args.Ve + 8*args.EM - 0.84550902028461594);
  s += 1.3122401144987394e-08 * Math.sin(2*args.D - 2*args.L + 4*args.Ve - 5*args.EM + 1.5833403911807638);
  s += 1.29226901784598e-08 * Math.sin(2*args.L - 3*args.Ve + 4*args.EM - 1.5936861890770628);
  s += 9.634595167470363e-09 * Math.sin(args.EM - 2*args.Ma + 2*args.Sa + 0.53923152580087819);
  s += 9.6153404009506271e-09 * Math.sin(args.D - args.F - 3*args.Ve + 6*args.EM - 1.0268611603902249);
  s += 1.3179809389211293e-08 * Math.sin(12*args.Ve - 12*args.EM + 3.1408711132647276);
  s += 1.3172151500637241e-08 * Math.sin(2*args.D + 11*args.Ve - 11*args.EM - 0.00035561474898625304);
  s += 1.3103635841336832e-08 * Math.sin(4*args.D - args.L - args.Ve + args.EM + 0.00067474449289920909);
  s += 1.2487943545652187e-08 * Math.sin(2*args.D - args.L - 4*args.EM + 7*args.Ma - 1.6212502938464275);
  s += 9.7296530559010382e-09 * Math.sin(2*args.D + 3*args.L - 18*args.Ve + 16*args.EM + 2.6783836656587896);
  s += 1.2061073008622823e-08 * Math.sin(2*args.D - 2*args.L - args.Ju + 3.0568552820561878);
  s += 9.3177943353498448e-09 * Math.sin(2*args.D - 2*args.L - args.EM + 2*args.Ju - 2.1957789337157383);
  s += 1.1928072656259021e-08 * Math.sin(args.L + 3*args.EM - 3*args.Ju + 3.0482431598008999);
  s += 9.178354931688186e-09 * Math.sin(args.L - args.EM - args.Ju - 0.84043988853441531);
  s += 9.8417177265230441e-09 * Math.sin(2*args.D - args.L + 2*args.EM + 0.40404319823792578);
  s += 1.2834131433691754e-08 * Math.sin(args.D - 2*args.Ve + 2*args.EM - 0.002144256633528783);
  s += 9.3599889480201644e-09 * Math.sin(2*args.D + 3*args.EM - 5*args.Ma - 1.0251094305403126);
  s += 1.2685117291851446e-08 * Math.sin(2*args.D - args.L + 5*args.EM - 5*args.Ma + 3.132362265176432);
  s += 1.2307337223683687e-08 * Math.sin(args.L + 2*args.EM - args.Ju - 1.5304164942383698);
  s += 1.1601094595033265e-08 * Math.sin(3*args.EM - 4*args.Ju - 3.0331134761469376);
  s += 1.058338346198549e-08 * Math.sin(args.D - args.F + args.Ve - 2*args.EM - 1.8031119034403571);
  s += 1.1238958506981312e-08 * Math.sin(2*args.D - 2*args.L + args.Ju + 0.13976439608272306);
  s += 1.2653637076956542e-08 * Math.sin(3*args.F + args.L - args.zeta - 1.762782544528403e-05);
  s += 9.4156660113550664e-09 * Math.sin(4*args.D + args.L - 18*args.Ve + 16*args.EM + 2.6783842298840059);
  s += 9.3545523139863516e-09 * Math.sin(2*args.D - args.L + 2*args.Ve - args.EM - 2.0455638379278769);
  s += 9.3888968578797241e-09 * Math.sin(2*args.D + args.L + 18*args.Ve - 16*args.EM + 0.46320284597820033);
  s += 1.1404052333580943e-08 * Math.sin(2*args.D - 3*args.Me + args.EM + 1.4641079917260786);
  s += 1.2536486569922305e-08 * Math.sin(args.L + 7*args.Ve - 7*args.EM + 3.1413661813389679);
  s += 1.0753647537812813e-08 * Math.sin(2*args.D + args.L - 2*args.EM + 3*args.Ju - 0.17706624492779313);
  s += 8.8341007399780366e-09 * Math.sin(2*args.D - args.L + args.Ve - 2*args.EM - 2.3064911362272174);
  s += 9.2834417819363339e-09 * Math.sin(4*args.D - args.L + 18*args.Ve - 16*args.EM + 0.463213946277093);
  s += 1.243938826266759e-08 * Math.sin(args.D - 20*args.Ve + 20*args.EM + 3.1408379286706931);
  s += 9.0128444861813203e-09 * Math.sin(2*args.D - args.L + 7*args.EM - 9*args.Ma + 2.1248224912365314);
  s += 1.1372392912010734e-08 * Math.sin(2*args.D - args.L + 3*args.EM - 6*args.Ma - 1.4773531180673116);
  s += 9.4754192859646708e-09 * Math.sin(2*args.D - args.L - 2*args.Ve + 5*args.EM + 1.9550767327680172);
  s += 9.4646555977862266e-09 * Math.sin(5*args.EM - 6*args.Ma + 2.7553425309913799);
  s += 9.9284374707758381e-09 * Math.sin(2*args.D - 2*args.F + 4*args.EM - 8*args.Ma + 3*args.Ju - 1.285029885868104);
  s += 9.9234026834443588e-09 * Math.sin(2*args.D - 2*args.F - 4*args.EM + 8*args.Ma - 3*args.Ju - 1.8565009991085251);
  s += 1.0617538417854303e-08 * Math.sin(2*args.D + args.L + 2*args.EM - 3*args.Ju + 0.17656441452822252);
  s += 1.2070061955721539e-08 * Math.sin(2*args.D - 2*args.L - 2*args.EM + 2*args.Ma - 3.1262153650869409);
  s += 1.2124765446856891e-08 * Math.sin(2*args.D - 2*args.F - args.L + 2*args.EM - 2*args.Ju - 3.1396282602317211);
  s += 1.2120342027736655e-08 * Math.sin(args.F + args.L - args.Lp - args.zeta + 3.1415676953814895);
  s += 1.2071860659626389e-08 * Math.sin(2*args.D + args.F - 2*args.L - args.zeta - 3.6302848441599575e-05);
  s += 1.0036865531625811e-08 * Math.sin(9*args.EM - 15*args.Ma + 0.22026765671404952);
  s += 9.2152757733858016e-09 * Math.sin(args.D - args.F - args.L + 29*args.Ve - 33*args.EM + 2*args.Ju + 2.7839631969929841);
  s += 9.5898390065560021e-09 * Math.sin(args.L - 8*args.EM + 16*args.Ma - 4*args.Ju - 5*args.Sa + 1.8423471407328875);
  s += 9.5892928863779382e-09 * Math.sin(args.L + 8*args.EM - 16*args.Ma + 4*args.Ju + 5*args.Sa + 1.2992410622291244);
  s += 1.1790081675975386e-08 * Math.sin(2*args.D - args.L + 11*args.Ve - 11*args.EM + 3.1410946637778783);
  s += 8.8517121788254615e-09 * Math.sin(2*args.D - args.L - 5*args.Me + 13*args.EM - 7*args.Ma - 2.0148316780155078);
  s += 8.5451758749925909e-09 * Math.sin(2*args.D - args.L + 5*args.EM - 7*args.Ma - 1.0116349820135655);
  s += 8.3406757279248772e-09 * Math.sin(args.D - 2*args.F + 20*args.Ve - 18*args.EM - args.Sa - 2.2679951281666835);
  s += 1.173249108285037e-08 * Math.sin(args.F - 3*args.L - args.zeta + 3.1415708369741435);
  s += 1.1684009714741208e-08 * Math.sin(2*args.F - args.L - 2*args.zeta - 2.7227136331319252e-05);
  s += 9.6999934361388364e-09 * Math.sin(args.F - 20*args.Ve + 19*args.EM - 1.7981061288058602);
  s += 1.1635528346628467e-08 * Math.sin(2*args.zeta - 3.1415696152436672);
  s += 1.1635528346629512e-08 * Math.sin(args.F - args.Lp - args.zeta - 1.3788101090665275e-05);
  s += 8.6202378356747829e-09 * Math.sin(3*args.Ve - args.EM + 0.47365167733431562);
  s += 8.2337525172726611e-09 * Math.sin(2*args.D + args.L - 18*args.Ve + 17*args.EM - 2.2602293501837525);
  s += 1.1587046978519206e-08 * Math.sin(2*args.F + args.L - 2*args.zeta - 2.7401669256074564e-05);
  s += 9.603052243406134e-09 * Math.sin(args.D - args.F + 4*args.Ve - 3*args.EM + 1.8034408320094266);
  s += 1.1066207355625322e-08 * Math.sin(args.L + 3*args.EM - 3*args.Ma - 3.0982386286178261);
  s += 8.8196055688996143e-09 * Math.sin(args.D - args.F + args.L + args.EM + args.Ju - args.Sa - 1.9642363753618193);
  s += 8.8128405869239021e-09 * Math.sin(args.D - args.F - args.L + args.EM + args.Ju - args.Sa - 1.964234565119064);
  s += 1.1154400443451019e-08 * Math.sin(2*args.D - 2*args.L - 2*args.Ve + 3*args.EM - 1.6003605280650031);
  s += 9.8135962246431329e-09 * Math.sin(args.D + args.F + args.EM - 2*args.Ju - 1.3869064976500951);
  s += 8.6445788560441322e-09 * Math.sin(7*args.EM - 11*args.Ma + 1.1485666082484602);
  s += 1.1043961810994764e-08 * Math.sin(2*args.D - 18*args.Ve + 18*args.EM + 0.033661142383380561);
  s += 8.4888627232493488e-09 * Math.sin(2*args.D - 4*args.EM + 4*args.Ma - 0.46854978369288341);
  s += 1.1074072475207707e-08 * Math.sin(args.D + 3*args.Ve - 3*args.EM - 0.029906922473604089);
  s += 9.4442512065981806e-09 * Math.sin(args.D - args.F - args.Ve - 1.8035729256739399);
  s += 1.1281380794320554e-08 * Math.sin(2*args.L + 2*args.EM - 2*args.Ju - 3.1360727068542706);
  s += 8.4060181162544681e-09 * Math.sin(6*args.EM - 10*args.Ma - 2.0443552381963457);
  s += 1.0932488871512467e-08 * Math.sin(2*args.D - 2*args.F - args.EM + args.Ju + 3.1093551256187126);
  s += 8.1784811580068312e-09 * Math.sin(2*args.D - args.Ve + 2*args.EM + 1.0092605647348811);
  s += 9.1388312606935328e-09 * Math.sin(8*args.EM - 16*args.Ma + 4*args.Ju + 5*args.Sa + 1.2992481225691666);
  s += 8.40429831523237e-09 * Math.sin(2*args.D - args.L - 4*args.EM + 4*args.Ma - 0.44482978618627622);
  s += 9.345771595841159e-09 * Math.sin(2*args.D - 3*args.L + 6*args.Ve - 8*args.EM + 2.9174838978541775);
  s += 1.112023660774949e-08 * Math.sin(2*args.L + 2*args.EM - 2*args.Ma + 0.0061711482620559859);
  s += 1.0834247516384085e-08 * Math.sin(8*args.Ve - 9*args.EM - 1.540978566355045);
  s += 1.1102042554319071e-08 * Math.sin(2*args.D - args.L + args.EM - args.Sa + 0.0030482204218855885);
  s += 8.9138212747990978e-09 * Math.sin(4*args.D - 2*args.L + 4*args.EM - 8*args.Ma + 3*args.Ju - 1.27614519321072);
  s += 8.7710282292969674e-09 * Math.sin(2*args.D + 2*args.Ju - 5*args.Sa - 1.8966981351411072);
  s += 8.9040351559149207e-09 * Math.sin(4*args.D - 2*args.L - 4*args.EM + 8*args.Ma - 3*args.Ju - 1.8654036679011685);
  s += 9.5182112909166924e-09 * Math.sin(2*args.D - args.L + 3*args.EM - 2*args.Ma - 1.7555393668789527);
  s += 1.1102233297410393e-08 * Math.sin(args.F + 3*args.L - args.zeta + 3.1415701388424426);
  s += 1.0959769070553362e-08 * Math.sin(2*args.D + 2*args.F - args.L + 2*args.EM - 2*args.Ju + 0.002096108732604217);
  s += 1.0640332067853746e-08 * Math.sin(2*args.D + args.L - 3*args.Ve + 3*args.EM + 3.1091820072977852);
  s += 8.904220854192191e-09 * Math.sin(args.L + args.EM - 2*args.Sa - 1.298712839341768);
  s += 1.0908307824964234e-08 * Math.sin(2*args.D + args.F - args.L - args.Lp - args.zeta + 3.1415872430691119);
  s += 8.0010057217767275e-09 * Math.sin(2*args.D + args.L - 12*args.Me + 12*args.EM - 2*args.Ju + 2.6383910315900123);
  s += 7.7078678554568976e-09 * Math.sin(2*args.D - args.L - 5*args.EM + 7*args.Ma + 0.93380384450652154);
  s += 7.8213430719278801e-09 * Math.sin(args.EM - 3*args.Ma - 1.0155556970928179);
  s += 8.3803489283419027e-09 * Math.sin(args.L - args.Lp + 0.34588746343436061);
  s += 1.0578326440496139e-08 * Math.sin(args.L - 4*args.EM + 7*args.Ma - 1.5838649367892443);
  s += 8.7251872229734944e-09 * Math.sin(2*args.D - 2*args.Ju + 5*args.Sa - 1.306684847607094);
  s += 1.0387019222513102e-08 * Math.sin(4*args.D - args.L - 2*args.EM + 2*args.Ju - 0.025134520160455413);
  s += 1.0542679801215874e-08 * Math.sin(2*args.D + args.L + 2*args.Ve - 3*args.EM - 1.5792007425348538);
  s += 7.6446149125366894e-09 * Math.sin(args.L - 5*args.EM + 7*args.Ma + 0.97830283436876797);
  s += 1.0530478033805195e-08 * Math.sin(2*args.D + args.EM - args.Ma + 0.0043737238923745626);
  s += 1.0568938248187217e-08 * Math.sin(4*args.D - args.F - args.L + args.zeta + 1.3439035240354922e-05);
  s += 7.8495273922595059e-09 * Math.sin(args.Ma - 2.6762570823975222);
  s += 1.0531512012818351e-08 * Math.sin(2*args.D - 2*args.F + 2*args.Ve - 2*args.EM - 0.00018154069090352135);
  s += 8.9292171627401173e-09 * Math.sin(args.EM + args.Ju - 5*args.Sa + 0.19743487633844248);
  s += 7.5284883010440672e-09 * Math.sin(args.D - 31*args.EM + 35*args.Ma - 0.97287115410980063);
  s += 1.0350823829032209e-08 * Math.sin(2*args.D - 2*args.L + 4*args.EM - 4*args.Ma + 0.0076241893846634998);
  s += 8.41154865661704e-09 * Math.sin(args.D + args.F + 2*args.Ma - 0.28353089756072625);
  s += 8.3724239251631353e-09 * Math.sin(args.EM - 3*args.Sa + 0.2820783560806488);
  s += 9.0714199876888034e-09 * Math.sin(args.L + args.Ve + 1.4224958282906042);
  s += 7.2997229373100322e-09 * Math.sin(2*args.D + 18*args.Ve - 17*args.EM + 2.2484321815729764);
  s += 1.0181908153820346e-08 * Math.sin(4*args.D - 2*args.F - args.L - 15*args.Ve + 15*args.EM - 3.1343866029919645);
  s += 1.0153129345280614e-08 * Math.sin(4*args.D - 2*args.L - 2*args.Ve + 2*args.EM + 3.1325745320612599);
  s += 8.7183414383019832e-09 * Math.sin(3*args.D - args.F - 2*args.L + 3*args.EM - 2*args.Ju + 1.3855328320874354);
  s += 9.2447510780925097e-09 * Math.sin(args.L - 16*args.Ve + 16*args.EM - 7*args.Ma + 8*args.Ju - 6*args.Sa + 1.6735270938717752);
  s += 8.0011070712693581e-09 * Math.sin(2*args.D + 5*args.Ve - 8*args.EM + 1.2445390699495131);
  s += 1.0023461656367723e-08 * Math.sin(2*args.D + 12*args.Ve - 12*args.EM - 0.00069347621163444537);
  s += 7.4301954993550966e-09 * Math.sin(args.L + 4*args.EM - 5*args.Ma + 2.6650198823070976);
  s += 9.8118375158070327e-09 * Math.sin(2*args.L + 3*args.Ve - 4*args.EM - 1.5503431131037864);
  s += 9.9630752061461608e-09 * Math.sin(2*args.D + args.L + 3*args.Ve - 3*args.EM + 3.1407681580340818);
  s += 9.8186851741767124e-09 * Math.sin(args.L + 4*args.EM - 7*args.Ma - 1.5616884827329929);
  s += 7.4218079050936485e-09 * Math.sin(args.L - 4*args.EM + 8*args.Ma - args.Ju - 5*args.Sa - 2.0180648265495797);
  s += 7.4210301669018001e-09 * Math.sin(args.L + 4*args.EM - 8*args.Ma + args.Ju + 5*args.Sa - 1.1236313380115996);
  s += 7.65709031200733e-09 * Math.sin(args.D + args.F - 2*args.L + args.EM - 3*args.Ju - 1.2094376681247068);
  s += 8.155804680488741e-09 * Math.sin(2*args.D - args.L + 18*args.Ve - 15*args.EM + 1.8082807078982028);
  s += 9.8248439175336037e-09 * Math.sin(args.D + 2*args.Ve - 2*args.EM + 0.00090368989709939786);
  s += 9.1884938339178209e-09 * Math.sin(2*args.D - 2*args.L + args.Ve - 1.6403686026866866);
  s += 7.9546086710431415e-09 * Math.sin(8*args.EM - 16*args.Ma + 6*args.Ju + 0.26313401821708426);
  s += 9.6700860301845592e-09 * Math.sin(3*args.D - args.L + 3*args.Ve - 4*args.EM - 1.5655358266300698);
  s += 9.7038078539877711e-09 * Math.sin(13*args.Ve - 13*args.EM + 3.1406543493741683);
  s += 6.8548102084960778e-09 * Math.sin(2*args.D - args.L - 33*args.EM + 40*args.Ma + 3*args.Ju - 0.87089157821020557);
  s += 8.0561966617702045e-09 * Math.sin(4*args.D - 2*args.L + 6*args.Ve - 8*args.EM + 2.9162792713715926);
  s += 9.3347231612233842e-09 * Math.sin(20*args.Ve - 21*args.EM - 1.5382354567743977);
  s += 6.8176302409817294e-09 * Math.sin(2*args.EM - args.Ma - 2.2906014323574979);
  s += 7.9626631084563783e-09 * Math.sin(args.D - args.F - args.Ve + 2*args.EM - 1.3365463236707971);
  s += 7.9971208922992075e-09 * Math.sin(2*args.D - 3*args.Ve + 2*args.EM - 1.3443075224114633);
  s += 7.9158486071136682e-09 * Math.sin(args.D - args.F + 6*args.Ve - 7*args.EM + 1.3314957871783959);
  s += 7.0953574352596735e-09 * Math.sin(4*args.Ve - 2*args.EM + 0.46341452722586701);
  s += 6.9371771893501346e-09 * Math.sin(2*args.D - 2*args.L - 8*args.Ve + 13*args.EM - 1.0306108610671654);
  s += 6.7964691130813509e-09 * Math.sin(2*args.D - 5*args.EM + 7*args.Ma + 0.92722377310915782);
  s += 9.1311454590994053e-09 * Math.sin(2*args.Ju - 6*args.Sa + 3*args.Ur + 0.041277381792609702);
  s += 9.0231445070623032e-09 * Math.sin(2*args.D - args.L + 4*args.EM - 7*args.Ma - 1.5173107216334034);
  s += 9.0983468887575595e-09 * Math.sin(4*args.D - args.EM + args.Ju + 3.098224752384533);
  s += 6.8745854541969562e-09 * Math.sin(2*args.D - 2*args.L + 8*args.Ve - 13*args.EM - 2.1104864236967442);
  s += 7.0426705910679315e-09 * Math.sin(2*args.D - args.L - 5*args.EM + 9*args.Ma - 1.1162655537798329);
  s += 8.3603998941370284e-09 * Math.sin(args.EM - 3*args.Ju + 5*args.Sa + 3.0060743266836298);
  s += 9.2702953831563821e-09 * Math.sin(2*args.D - 2*args.L - 3*args.Ve + 4*args.EM - 1.5837700018456546);
  s += 9.3237408841799902e-09 * Math.sin(2*args.D - 2*args.L + args.Ve - args.EM + 0.0015826668137030706);
  s += 8.0033466518168305e-09 * Math.sin(args.D - args.F + args.L + args.EM - 2*args.Ju + 1.7545661804981214);
  s += 6.6795724891418866e-09 * Math.sin(args.L + 8*args.EM - 16*args.Ma + 6*args.Ju - 2.5178443341663064);
  s += 7.9774239601210986e-09 * Math.sin(args.D + args.F + 5*args.Ve - 7*args.EM - 0.1872659120766389);
  s += 6.6743476114933982e-09 * Math.sin(args.L - 8*args.EM + 16*args.Ma - 6*args.Ju - 0.62377321826199084);
  s += 9.1978090414099231e-09 * Math.sin(2*args.D - args.L - 19*args.Ve + 19*args.EM + 0.0016817724817491605);
  s += 8.1341321133620384e-09 * Math.sin(2*args.D - args.L + 14*args.EM - 23*args.Ma + 1.7129760159214489);
  s += 7.530245898156078e-09 * Math.sin(args.D + args.F + args.EM + args.Ju - 1.822301443447669);
  s += 6.8039774376710528e-09 * Math.sin(2*args.F - 18*args.Ve + 16*args.EM - 0.46319766541237134);
  s += 9.1224455788824515e-09 * Math.sin(2*args.D - 2*args.F - args.L + 3*args.Ve - 3*args.EM - 3.1415716797132718);
  s += 6.7943291753178241e-09 * Math.sin(2*args.D - args.L + 8*args.EM - 12*args.Ma - 2.0240571399088028);
  s += 6.7721416020813169e-09 * Math.sin(2*args.D - 2*args.L - 15*args.Ve + 13*args.EM + 2.680753760618797);
  s += 9.0660158367495121e-09 * Math.sin(args.F + args.L + args.Lp - args.zeta - 2.4609142452988717e-05);
  s += 9.06601583674934e-09 * Math.sin(2*args.D - args.F - args.Lp - args.zeta + 3.1415795636204034);
  s += 7.314694057101749e-09 * Math.sin(args.L + 2*args.Ve - args.EM - 1.8524705099000569);
  s += 6.5700261403888176e-09 * Math.sin(2*args.D + args.Ve - 2*args.EM - 2.1258224227298985);
  s += 8.8348866402592539e-09 * Math.sin(args.EM + args.Ju - 2*args.Sa - 3.1190885307250706);
  s += 8.562698278390388e-09 * Math.sin(2*args.L - 15*args.Ve + 9*args.EM + 4*args.Ma + 3.0899977362274229);
  s += 8.648434526220337e-09 * Math.sin(2*args.D - args.L + 9*args.Ve - 10*args.EM - 1.5318735147659133);
  s += 8.9700775346499442e-09 * Math.sin(4*args.D - 2*args.L + 2*args.Ve - 2*args.EM - 0.00045159591969830894);
  s += 8.5215751646817904e-09 * Math.sin(15*args.Ve - 9*args.EM - 4*args.Ma + 0.04997730141315479);
  s += 7.3653592906889395e-09 * Math.sin(2*args.D + 2*args.L - 18*args.Ve + 15*args.EM - 1.8082061985662046);
  s += 7.6155188111083414e-09 * Math.sin(args.D - args.F - args.L + args.EM - 2*args.Ju + 1.7545893039290061);
  s += 8.8509782351000815e-09 * Math.sin(2*args.D - 2*args.L + 4*args.Ve - 4*args.EM + 3.1396055757812094);
  s += 8.8501917768639135e-09 * Math.sin(2*args.L - 21*args.Ve + 21*args.EM + 0.0015771353049345623);
  s += 6.267436727401564e-09 * Math.sin(args.Me - 3*args.EM + 2.4032555484273708);
  s += 6.2807195831590238e-09 * Math.sin(2*args.D - args.L - args.Ma + 2.457172826135734);
  s += 8.6157214147430648e-09 * Math.sin(args.L - 5*args.Ve + 5*args.EM - 3.1183334186433291);
  s += 7.3447989120545628e-09 * Math.sin(args.D + args.F - args.L - 18*args.Ve + 17*args.EM + 1.3444985061906705);
  s += 6.2612298669414459e-09 * Math.sin(8*args.EM - 13*args.Ma + 0.65363123470665951);
  s += 7.9731063577132918e-09 * Math.sin(2*args.D - 2*args.L - 3*args.Me + args.EM + 1.4659946063029077);
  s += 6.1552287853261175e-09 * Math.sin(2*args.Sa - 0.73613441736235818);
  s += 8.650676296049647e-09 * Math.sin(2*args.EM - 4*args.Ma + 2*args.Ju - 0.0019065758593290734);
  s += 6.3789598606827547e-09 * Math.sin(args.L - 5*args.EM + 9*args.Ma - 1.070824038068932);
  s += 8.6452776219914633e-09 * Math.sin(args.L + 8*args.Ve - 8*args.EM + 3.1411164505268059);
  s += 6.4459697604304817e-09 * Math.sin(2*args.F - 2*args.L + 18*args.Ve - 16*args.EM - 2.6783819178734358);
  s += 8.2418550635927608e-09 * Math.sin(2*args.D - 4*args.EM + 7*args.Ma - 1.6199380657315503);
  s += 7.7382112123207285e-09 * Math.sin(args.D - args.F + args.EM - args.Ju + 1.6920809708965256);
  s += 6.5747812104150847e-09 * Math.sin(2*args.D - 2*args.L - 2*args.Ve + 5*args.EM + 1.9493592724314612);
  s += 8.5067586498649012e-09 * Math.sin(4*args.D - 2*args.L - args.Ve + args.EM + 0.00068615763884862034);
  s += 7.0638005168493453e-09 * Math.sin(args.D - args.F + 5*args.Ve - 4*args.EM + 1.8033809768557916);
  s += 6.7382930430856382e-09 * Math.sin(args.Ju - 2*args.Sa - 1.2552063494955974);
  s += 7.8501003988920128e-09 * Math.sin(2*args.D + 3*args.EM - 6*args.Ma - 1.489070232396672);
  s += 7.5850523575318624e-09 * Math.sin(3*args.D + args.F - args.L + args.EM + 1.6862805501953713);
  s += 8.3499807734597123e-09 * Math.sin(4*args.D - args.L + 2*args.Ve - 2*args.EM - 0.00088982445320348862);
  s += 8.1026875729343339e-09 * Math.sin(9*args.Ve - 10*args.EM - 1.5395676274989869);
  s += 7.8577825562280804e-09 * Math.sin(2*args.D - args.L - 3*args.EM + 6*args.Ma - 1.6334879800927635);
  s += 6.3483819931399134e-09 * Math.sin(args.L + args.Lp + 2.7380316423374578);
  s += 6.0938091358843682e-09 * Math.sin(2*args.D - args.L - args.Ve + 2*args.EM - 0.52456235373822269);
  s += 8.1206904664856998e-09 * Math.sin(2*args.D - 3*args.EM + 4*args.Ju - 0.024314314076316446);
  s += 8.2746585435476016e-09 * Math.sin(args.L - 2*args.EM + 2*args.Sa - 3.1395675311089137);
  s += 6.2932937236528903e-09 * Math.sin(args.L - args.Ur + 2*args.Ne + 1.1694645557493291);
  s += 6.2927588075562574e-09 * Math.sin(args.L + args.Ur - 2*args.Ne + 1.9721468131191848);
  s += 7.5623585237261244e-09 * Math.sin(args.D - args.F + args.L - args.EM - 1.6640052764892914);
  s += 6.8350919561259673e-09 * Math.sin(args.D - args.F - args.L + args.Ve + 1.8038028368179042);
  s += 6.4074388759811036e-09 * Math.sin(2*args.D - 2*args.L + 2*args.EM - 2*args.Ju - 2*args.Sa + 2.7907357428201327);
  s += 6.0253382677789317e-09 * Math.sin(args.L + 5*args.EM - 9*args.Ma - 2.0741825595945453);
  s += 7.3503115905360989e-09 * Math.sin(2*args.D + args.L - 2*args.EM + args.Ju - 1.4537032763670241);
  s += 6.021850452442812e-09 * Math.sin(2*args.D + 2*args.Ju - 0.46662298338093189);
  s += 6.6441900906718396e-09 * Math.sin(args.L - 3*args.EM + 2*args.Ma - 1.3220429202249402);
  s += 7.0318130352193417e-09 * Math.sin(args.L - 5*args.Ve + 7*args.EM + 0.15957348350402631);
  s += 7.1851010042671554e-09 * Math.sin(2*args.D - 2*args.L + 2*args.EM - 5*args.Sa + 0.12802687377372479);
  s += 7.9976926247327693e-09 * Math.sin(2*args.D + args.EM - args.Sa + 0.0025319296760879157);
  s += 7.9964287676637632e-09 * Math.sin(2*args.D - args.L + 12*args.Ve - 12*args.EM + 3.1407830015736451);
  s += 5.8731541339946319e-09 * Math.sin(9*args.EM - 16*args.Ma + 4*args.Ju + 5*args.Sa + 2.6442399762991182);
  s += 6.5455599245101158e-09 * Math.sin(args.D - args.F - args.L + 4*args.Ve - 5*args.EM + 1.3350375098244378);
  s += 5.7793453859045538e-09 * Math.sin(2*args.L + 2*args.EM - 4*args.Ma - 1.0787833935942721);
  s += 6.3727538000351605e-09 * Math.sin(2*args.D - 26*args.Ve + 29*args.EM + 1.8307593958675146);
  s += 7.6972569432899433e-09 * Math.sin(2*args.D - 2*args.F - 2*args.Ve + 2*args.EM + 3.1355258258797765);
  s += 7.6608061310556699e-09 * Math.sin(2*args.D - 2*args.F + args.EM - args.Ju + 0.0074875493631916239);
  s += 5.7542767425944467e-09 * Math.sin(5*args.Ve - 3*args.EM + 0.46259591461286753);
  s += 7.5680252941779241e-09 * Math.sin(3*args.D - 2*args.F - 18*args.Ve + 19*args.EM - 1.5528042949602123);
  s += 5.442300860376616e-09 * Math.sin(2*args.D - 12*args.Ve + 8*args.EM - 0.84560655011683661);
  s += 5.6502876917606128e-09 * Math.sin(2*args.L - 2*args.EM + 4*args.Ma - 2.0546873136877259);
  s += 7.21929609410643e-09 * Math.sin(2*args.EM - 3*args.Sa - 1.5155240850012464);
  s += 6.2793159434691131e-09 * Math.sin(2*args.D + args.L + 3*args.Ve - 5*args.EM - 0.24018599001164045);
  s += 7.5808014955408461e-09 * Math.sin(2*args.D - 2*args.F + 2*args.EM - 2*args.Ju + 0.00025387691706706442);
  s += 7.5689689738243012e-09 * Math.sin(2*args.D + 13*args.Ve - 13*args.EM - 0.001055044493541459);
  s += 5.8532931819683018e-09 * Math.sin(args.D - args.F + args.EM - 3*args.Ju + 1.9372018643226732);
  s += 6.2829560909359476e-09 * Math.sin(args.D - args.F - 2*args.Ve + args.EM - 1.8010750897170169);
  s += 5.5154216975094854e-09 * Math.sin(2*args.D - args.L - 9*args.EM + 16*args.Ma - 4*args.Ju - 5*args.Sa + 0.49734573798506154);
  s += 6.2103127286762486e-09 * Math.sin(2*args.D - args.L - 3*args.Ve + 2*args.EM - 1.3378250922115646);
  s += 6.4237800749129781e-09 * Math.sin(args.L + 5*args.Ve - 7*args.EM + 2.9621521996705336);
  s += 7.3731857447992431e-09 * Math.sin(2*args.D - args.L + 3*args.Ve - 6*args.EM + 1.5800747691323753);
  s += 5.333422961120285e-09 * Math.sin(2*args.D - 2*args.L + args.EM - 2*args.Ma - 0.60588411605650205);
  s += 6.4541448579683327e-09 * Math.sin(2*args.D - 2*args.L + 2*args.EM - 4*args.Ju + 5*args.Sa + 2.9787014024662213);
  s += 7.371294520031894e-09 * Math.sin(args.D + args.EM - args.Sa - 3.1370215039901379);
  s += 7.0808852509175067e-09 * Math.sin(2*args.D - args.L + args.EM - 3*args.Ju + 1.5241370358633568);
  s += 7.1533153928285915e-09 * Math.sin(2*args.D - args.L - 5*args.EM + 8*args.Ma - 1.6059955818729157);
  s += 7.3808792264438736e-09 * Math.sin(2*args.D - 2*args.F - args.Ve + args.EM + 0.0002600884483736621);
  s += 5.2672981393764086e-09 * Math.sin(11*args.EM - 21*args.Ma + 2*args.Ju + 2.2184857790261217);
  s += 5.2941219726273785e-09 * Math.sin(args.Ju - 3*args.Sa + 2.5543444419928423);
  s += 7.0505049765139253e-09 * Math.sin(2*args.D - args.L - 3*args.EM + 4*args.Ju - 0.037484556968391147);
  s += 7.2406729123998411e-09 * Math.sin(3*args.D - 2*args.L + 3*args.Ve - 4*args.EM - 1.5612613847894481);
  s += 6.0556281207453146e-09 * Math.sin(args.D - args.F + args.L + 4*args.Ve - 5*args.EM + 1.3346668510131423);
  s += 5.4469042093560562e-09 * Math.sin(2*args.D - args.L + 5*args.EM - 9*args.Ma - 2.0247188467689243);
  s += 5.4889461789574092e-09 * Math.sin(args.D + args.F - args.L - 4*args.Me + 4*args.EM + 2.7103391921529441);
  s += 7.2622811824813795e-09 * Math.sin(14*args.Ve - 14*args.EM + 3.140414997711376);
  s += 6.0332108279193925e-09 * Math.sin(args.D - args.F + args.L + args.Ve + 1.8037868682959191);
  s += 7.1606484234071459e-09 * Math.sin(4*args.D - 2*args.Ve + 2*args.EM + 3.1304908004884036);
  s += 5.9016319988266458e-09 * Math.sin(2*args.D + args.L - 26*args.Ve + 29*args.EM + 1.8310692523449557);
  s += 5.1117716027401149e-09 * Math.sin(2*args.D - 18*args.Ve + 17*args.EM - 2.2545107373987592);
  s += 5.2418836816923937e-09 * Math.sin(args.L + args.EM + args.Ju - 2.0894439514440686);
  s += 6.2616414962531406e-09 * Math.sin(2*args.D - 2*args.L - 2*args.Ju + 5*args.Sa + 0.15228697393834886);
  s += 6.2498893873013847e-09 * Math.sin(2*args.D - 2*args.L + 2*args.Ju - 5*args.Sa + 2.9897662729940322);
  s += 7.0624755858013447e-09 * Math.sin(args.D - 2*args.Ve + 3*args.EM + 1.5644565252809721);
  s += 5.2798333093674223e-09 * Math.sin(args.Ur - 2.0426030769528767);
  s += 5.7989767775264925e-09 * Math.sin(2*args.D - args.L + 26*args.Ve - 29*args.EM + 1.3105772780639569);
  s += 5.3999602415753054e-09 * Math.sin(2*args.F + args.L - 10*args.Ve + 3*args.EM + 0.4017847432559481);
  s += 5.3999602415753054e-09 * Math.sin(2*args.F - args.L + 10*args.Ve - 3*args.EM + 2.7398079103338451);
  s += 6.2840402205517149e-09 * Math.sin(2*args.D - args.L - 17*args.Ve + 16*args.EM + 1.4428796254165539);
  s += 6.7534690704856729e-09 * Math.sin(2*args.D + 7*args.Ve - 8*args.EM + 1.6124745288119335);
  s += 5.0277383683146115e-09 * Math.sin(2*args.D - args.L + 7*args.EM - 8*args.Ma + 2.5194604259244158);
  s += 5.7728677828227912e-09 * Math.sin(args.D + args.F + 4*args.Ve - 5*args.EM - 1.806250168855307);
  s += 5.3833691235110343e-09 * Math.sin(args.L + 2*args.EM - 4*args.Ju - 2.7766897929473053);
  s += 6.9328356398675666e-09 * Math.sin(2*args.D - args.F - 2*args.L + args.zeta - 3.1415366285208042);
  s += 5.7817054110777885e-09 * Math.sin(2*args.D + args.L - 2*args.Ve + args.EM - 1.3468820193257927);
  s += 5.6997544460242962e-09 * Math.sin(2*args.D - args.L + args.Me - 2*args.EM + 1.3238373795035949);
  s += 6.1016327890516213e-09 * Math.sin(3*args.Ve - 6*args.EM + 1.7159732142511275);
  s += 6.5184699169465378e-09 * Math.sin(2*args.D + 6*args.Ve - 7*args.EM + 1.6328619523271977);
  s += 6.8866465671151731e-09 * Math.sin(4*args.D + 2*args.EM - 2*args.Ju - 3.1396965029218951);
  s += 6.8520399413677667e-09 * Math.sin(args.D - args.L + 2*args.EM - 2*args.Ma + 0.0048277065567740932);
  s += 5.7091486941500433e-09 * Math.sin(args.D + args.F - args.L + 2*args.Ve - 3*args.EM + 1.3372093610027471);
  s += 5.6107618355281327e-09 * Math.sin(2*args.D - 2*args.L + 26*args.Ve - 29*args.EM + 1.310544058153392);
  s += 5.2630847672203852e-09 * Math.sin(2*args.D - args.L - args.Ve + 3*args.EM - 2.7617360581591219);
  s += 6.8358729036466075e-09 * Math.sin(4*args.D + args.F - args.L - args.zeta + 3.1415786909557775);
  s += 6.1323274508219686e-09 * Math.sin(2*args.D - args.L + 2*args.Ju - 0.11509841645840464);
  s += 4.9818549889564891e-09 * Math.sin(2*args.D - args.L - 4*args.Me + 5*args.Ve - 3*args.EM - 0.48869419275264858);
  s += 5.1172147265861128e-09 * Math.sin(args.L - 2*args.Ma + 0.40451623289700295);
  s += 6.0279342566970461e-09 * Math.sin(5*args.EM - 5*args.Ma + 3.0234033314807958);
  s += 6.6735880966504472e-09 * Math.sin(2*args.D + 3*args.Ve - 6*args.EM + 1.5722214590076966);
  s += 6.3443604083804128e-09 * Math.sin(2*args.D - 2*args.L + 2*args.EM - 4*args.Ju + 2*args.Sa + 0.041448905238014581);
  s += 5.5542645886985254e-09 * Math.sin(2*args.D - args.L + 2*args.EM - 3*args.Ju + 2*args.Sa - 2.9298852665193693);
  s += 6.5615224336449711e-09 * Math.sin(4*args.D - 3*args.L + 3*args.Ve - 3*args.EM + 0.00060157267103860671);
  s += 6.4729339576667565e-09 * Math.sin(args.D + 2*args.EM - 2*args.Ju + 0.012357429228560476);
  s += 5.8364571023395119e-09 * Math.sin(2*args.D - args.L + 6*args.EM - 6*args.Ma - 3.0129619344702587);
  s += 5.0695712414054328e-09 * Math.sin(2*args.D + 2*args.EM - 4*args.Ju + 0.3481154414587227);
  s += 6.279427715378828e-09 * Math.sin(args.L - 2*args.EM + 3*args.Ju - args.Sa - 0.034020777254213347);
  s += 5.3820440304817071e-09 * Math.sin(args.D + args.F + args.Ve - 1.3379234070502595);
  s += 6.204177655925467e-09 * Math.sin(2*args.D + 8*args.Ve - 9*args.EM + 1.6129864973373274);
  s += 5.0042324440529124e-09 * Math.sin(2*args.D - args.L + 3*args.EM - 5*args.Ju - 2.7963860238724267);
  s += 6.1890927574964118e-09 * Math.sin(args.L + 20*args.Ve - 21*args.EM - 1.5389429309620919);
  s += 6.3644066130278809e-09 * Math.sin(args.L + 2*args.EM - 2*args.Sa - 3.1401234605979913);
  s += 5.2677251890918904e-09 * Math.sin(args.D - args.F + 6*args.Ve - 5*args.EM + 1.8033410298847887);
  s += 5.1035669933764338e-09 * Math.sin(4*args.D + 4*args.EM - 8*args.Ma + 3*args.Ju - 1.2847424288709908);
  s += 5.0983832846876132e-09 * Math.sin(4*args.D - 4*args.EM + 8*args.Ma - 3*args.Ju - 1.8567430697668013);
  s += 5.4800174439326681e-09 * Math.sin(args.D - args.F + 2*args.EM - 2*args.Ma + 1.7369781682124381);
  s += 4.8735571977190302e-09 * Math.sin(2*args.L + 3*args.Ve - 5*args.EM - 0.36282672273632149);
  s += 6.1382480988398955e-09 * Math.sin(args.D - 2*args.EM + 2*args.Ju + 3.117247479846073);
  s += 6.2649095686477135e-09 * Math.sin(2*args.D - 2*args.F + 5*args.Ve - 5*args.EM + 3.1394295546931228);
  s += 6.0757268862048747e-09 * Math.sin(10*args.Ve - 11*args.EM - 1.5384567147661112);
  s += 6.2587951646704353e-09 * Math.sin(args.L - 22*args.Ve + 22*args.EM + 0.0015197613347422965);
  s += 5.1167377457655148e-09 * Math.sin(2*args.D - 3*args.EM + args.Ju + 0.26075499589747403);
  s += 6.1988247795862679e-09 * Math.sin(2*args.D + 2*args.F - args.L + 3*args.Ve - 3*args.EM - 0.00027207507483169627);
  s += 5.7375643827971719e-09 * Math.sin(2*args.D - 5*args.Ve + 6*args.EM + 1.6539487577039009);
  s += 5.9559165603545712e-09 * Math.sin(2*args.D - args.L + 10*args.Ve - 11*args.EM - 1.5314677616813708);
  s += 6.1571115100625042e-09 * Math.sin(2*args.F - 2*args.L + 3.1397033218864596);
  s += 4.8599818463154672e-09 * Math.sin(7*args.Ve - 9*args.EM - 0.32052397683212336);
  s += 5.9623252727268967e-09 * Math.sin(4*args.D - args.L - 2*args.Ve + 3*args.EM - 1.6010506067580341);
  s += 5.8729450274904441e-09 * Math.sin(7*args.EM - 16*args.Ma + 4*args.Ju + 5*args.Sa - 0.04575490494171526);
  s += 5.8869330753131985e-09 * Math.sin(4*args.D - args.L - 2*args.EM + 2*args.Ma - 3.1016769980295251);
  s += 6.1086523819793901e-09 * Math.sin(2*args.D - args.F + 2*args.L + args.zeta + 1.8849555921539212e-05);
  s += 5.1997654782297022e-09 * Math.sin(2*args.EM - args.Sa - 1.7622386850090344);
  s += 5.6238387008697253e-09 * Math.sin(args.D + args.EM - 1.658143772671949);
  s += 5.1531193196634884e-09 * Math.sin(2*args.D - 8*args.Ve + 12*args.EM + 1.3702767279489207);
  s += 5.638812585870554e-09 * Math.sin(2*args.D - args.L - 5*args.Ve + 6*args.EM + 1.6458560117378804);
  s += 5.2332225785234939e-09 * Math.sin(2*args.EM - 5*args.Ma - 1.4035015763342695);
  s += 5.1710095738008815e-09 * Math.sin(args.D + args.F - args.L - 20*args.Ve + 12*args.EM + 15*args.Ma - 2.9584348939392235);
  s += 5.9773110557496533e-09 * Math.sin(args.D - args.L - 3*args.Ve + 4*args.EM + 1.5645344562197074);
  s += 5.9962145027537034e-09 * Math.sin(args.L + 9*args.Ve - 9*args.EM + 3.1408293379834422);
  s += 5.98005072465881e-09 * Math.sin(2*args.D + 4*args.EM - 4*args.Ju - 0.0024724688977423846);
  s += 5.6314576313262541e-09 * Math.sin(args.L - 7*args.EM + 10*args.Ma + 1.5059173464417193);
  s += 5.8473450193721747e-09 * Math.sin(4*args.D - 2*args.L - 2*args.EM + 2*args.Ju - 0.023447556645854465);
  s += 4.8937103048164685e-09 * Math.sin(args.D - args.F - args.Ve + 3*args.EM + 0.25478647201841664);
  s += 5.9632082776476496e-09 * Math.sin(2*args.D - args.F + args.Lp - args.zeta - 1.3439035240159826e-05);
  s += 5.9374861462765581e-09 * Math.sin(2*args.D - 2*args.L + 5*args.Ve - 5*args.EM - 3.1391719241952085);
  s += 5.7491386125524106e-09 * Math.sin(4*args.D - args.L - 20*args.Ve + 21*args.EM - 1.6025194830088934);
  s += 5.9147283588977906e-09 * Math.sin(2*args.D + args.L + 0.0022571811874742384);
  s += 4.9201089674419556e-09 * Math.sin(args.D - args.F - 3*args.Ve + 4*args.EM + 1.8050943878143355);
  s += 5.0159940915508156e-09 * Math.sin(2*args.D - 2*args.EM + args.Sa - 1.3687316001504284);
  s += 5.0887368331521157e-09 * Math.sin(2*args.D - args.L + 4*args.EM - 5*args.Ju - 2.963533356660204);
  s += 5.2543024896261525e-09 * Math.sin(args.L - 2*args.EM + 5*args.Sa + 3.0146092215589992);
  s += 5.6778076247924471e-09 * Math.sin(2*args.D + 2*args.L - args.EM + args.Ju + 3.1081512771128095);
  s += 5.193101934337532e-09 * Math.sin(2*args.EM - 5*args.Sa - 3.0074443805818882);
  s += 5.6554406125090999e-09 * Math.sin(4*args.D - 2*args.L - 20*args.Ve + 21*args.EM - 1.6031089073147);
  s += 5.5706522645671054e-09 * Math.sin(2*args.D - args.L + 8*args.EM - 11*args.Ma + 1.6176564376458551);
  s += 5.7847653342899532e-09 * Math.sin(args.D - 2*args.EM + 2*args.Ma + 3.1355977178514229);
  s += 5.7745953228183501e-09 * Math.sin(args.L - 20*args.Ve + 20*args.EM + 0.0012473219836196948);
  s += 5.0370719681652639e-09 * Math.sin(2*args.EM - 4*args.Ju + 5*args.Sa - 0.15897890457646427);
  s += 5.2784075986646933e-09 * Math.sin(3*args.D - args.F + args.L + args.EM + 1.6683822605528185);
  s += 4.9976183367594997e-09 * Math.sin(2*args.D - args.L + 8*args.Ve - 10*args.EM - 0.16901948882336013);
  s += 5.5154102965494634e-09 * Math.sin(2*args.D - args.L + 7*args.EM - 16*args.Ma + 4*args.Ju + 5*args.Sa - 0.045761463702412963);
  s += 4.9112182784829265e-09 * Math.sin(args.D - args.F - args.EM + 2*args.Ju + 1.387400232561441);
  s += 5.6782218840217376e-09 * Math.sin(2*args.D + 14*args.Ve - 14*args.EM - 0.0014871482879719696);
  s += 5.3816057674955382e-09 * Math.sin(2*args.D - 2*args.L + 7*args.EM - 10*args.Ma - 1.5168853633434474);
  s += 4.9046858077839911e-09 * Math.sin(args.L - 2*args.EM + 4*args.Ju - 5*args.Sa + 0.16348061413406539);
  s += 5.4050336228564886e-09 * Math.sin(2*args.D + 9*args.Ve - 10*args.EM + 1.6130746086084558);
  s += 5.6238387008711472e-09 * Math.sin(4*args.D - args.F + args.zeta + 1.5707963267946206e-05);
  s += 5.4547358869207319e-09 * Math.sin(2*args.D - 3*args.EM + 6*args.Ma - 1.5935348616465355);
  s += 5.5541309818039167e-09 * Math.sin(15*args.Ve - 15*args.EM + 3.1401688051087526);
  s += 5.5313067839447711e-09 * Math.sin(4*args.D - args.Ve + args.EM + 0.00065786718005439947);
  s += 5.4896612016831986e-09 * Math.sin(2*args.D - 3*args.L + 3*args.Ve - 3*args.EM + 0.0016002313101562335);
  s += 5.4859823565074551e-09 * Math.sin(args.D + 4*args.Ve - 4*args.EM + 0.0010454475826442325);
  s += 5.3370030483918776e-09 * Math.sin(2*args.D - 5*args.Ve + 5*args.EM - 3.1122034818939848);
  s += 5.4783945965391197e-09 * Math.sin(2*args.D - args.F + args.Lp + args.zeta - 3.1415772946923757);
  s += 5.4623925799302448e-09 * Math.sin(2*args.D - args.L + 13*args.Ve - 13*args.EM + 3.1404024473757182);
  s += 5.2859254093885169e-09 * Math.sin(2*args.D - 5*args.EM + 8*args.Ma - 1.6042932163846826);
  s += 5.2286812052056463e-09 * Math.sin(2*args.D + 4*args.EM - 7*args.Ma - 1.5334171111748462);
  s += 5.1308903942911059e-09 * Math.sin(args.L - 7*args.EM + 13*args.Ma - 0.050247712156435899);
  s += 5.3787056816305646e-09 * Math.sin(4*args.D - 2*args.L + 4*args.Ve - 4*args.EM + 3.1411007392893739);
  s += 4.9436041606633423e-09 * Math.sin(args.D + args.F - args.EM + 1.4938962580769213);
  s += 4.9377367753241102e-09 * Math.sin(args.EM - args.Ur - 0.071523072416340344);
  s += 5.0165200680940444e-09 * Math.sin(args.L + 7*args.EM - 13*args.Ma - 3.092825785335755);
  s += 5.2386255226600913e-09 * Math.sin(3*args.L - 2*args.EM + 2*args.Ju - 3.1411610203942923);
  s += 5.1244638541653613e-09 * Math.sin(args.L - 3*args.Ve + 5*args.EM - 2*args.Ju + 0.01719960627674649);
  s += 5.0123070476061905e-09 * Math.sin(2*args.D - args.L - 8*args.Ve + 12*args.EM + 1.5365854326361077);
  s += 4.9678660360530373e-09 * Math.sin(2*args.D + 4*args.EM - 4*args.Ma - 3.1005403968307017);
  s += 5.0583994997415496e-09 * Math.sin(args.L + 3*args.Ve - 5*args.EM + 2*args.Ju + 3.1243657396397704);
  s += 4.9966270998699675e-09 * Math.sin(2*args.D - 2*args.L + 24*args.Ve - 24*args.EM + 3.1321938228963973);
  s += 4.9825047313325345e-09 * Math.sin(4*args.D - args.L - args.Ju + 3.1381648053855051);
  s += 4.8495018538345624e-09 * Math.sin(2*args.D + args.L + 2*args.EM - 2*args.Ma + 0.019393007828976679);
  s += 4.8592842532848512e-09 * Math.sin(4*args.D - args.L - 3*args.Ve + 4*args.EM - 1.5728528436995342);
  return s;
}

// Sum the ELP/MPP02 series: perturbation, longitude T^1 (808 terms)
function Elp_pert_longT1_C(args) {
  var s = 0.0;
  s += 8.1293558048447e-06 * Math.sin(args.Lp);
  s += 2.5036748119858655e-06 * Math.sin(2*args.D - args.L - args.Lp + 3.1415926535897931);
  s += 2.0063044565355927e-06 * Math.sin(2*args.D - args.Lp + 3.1415926535897931);
  s += 1.7993859774380428e-06 * Math.sin(args.L - args.Lp + 3.1415926535897931);
  s += 1.1925752612552356e-06 * Math.sin(args.L - 18*args.Ve + 16*args.EM + 1.1395252607519988);
  s += 1.3361465051378813e-06 * Math.sin(args.L + args.Lp);
  s += 3.4509037821376769e-07 * Math.sin(2*args.D - args.L + args.Lp);
  s += 2.9709382378392367e-07 * Math.sin(2*args.D + args.Lp);
  s += 2.1894185838906644e-07 * Math.sin(args.D + args.Lp + 3.1415926535897931);
  s += 1.9625257811314018e-07 * Math.sin(2*args.D - 2*args.Lp + 3.1415926535897931);
  s += 1.8165968631174314e-07 * Math.sin(2*args.Lp);
  s += 1.7972043158730498e-07 * Math.sin(2*args.D - args.L - 2*args.Lp + 3.1415926535897931);
  s += 1.7690851223686968e-07 * Math.sin(2*args.D + args.L - args.Lp + 3.1415926535897931);
  s += 1.1819757545450487e-07 * Math.sin(2*args.L - args.Lp + 3.1415926535897931);
  s += 1.0496216196021453e-07 * Math.sin(2*args.D - 2*args.L - args.Lp + 3.1415926535897931);
  s += 8.2026112930234987e-08 * Math.sin(args.L - 10*args.Ve + 3*args.EM + 1.8636576298539844);
  s += 9.322967087736377e-08 * Math.sin(2*args.L + args.Lp);
  s += 6.597973654919428e-08 * Math.sin(2*args.L - 18*args.Ve + 16*args.EM + 1.1395420030380612);
  s += 6.1879251668923165e-08 * Math.sin(18*args.Ve - 16*args.EM + 2.002051120075012);
  s += 6.2686408967463e-08 * Math.sin(args.L - 2*args.Lp + 3.1415926535897931);
  s += 6.1571337500911073e-08 * Math.sin(2*args.D - args.L + 2*args.Lp);
  s += 5.3184060817716099e-08 * Math.sin(4*args.D - args.L - args.Lp + 3.1415926535897931);
  s += 5.2733539387916297e-08 * Math.sin(2*args.D + 0.0018471316335301488);
  s += 4.0459446556477355e-08 * Math.sin(2*args.D - args.L + 0.0023917742748231089);
  s += 3.558532419343994e-08 * Math.sin(2*args.D + args.L + args.Lp);
  s += 3.3258218524114165e-08 * Math.sin(4*args.D - 2*args.L - args.Lp + 3.1415926535897931);
  s += 3.0591743278011719e-08 * Math.sin(2*args.D - 2*args.L + args.Lp + 3.1415926535897931);
  s += 2.7450057466836276e-08 * Math.sin(args.L + 4*args.EM - 8*args.Ma + 3*args.Ju + 0.12156250171440273);
  s += 2.744582052954182e-08 * Math.sin(args.L - 4*args.EM + 8*args.Ma - 3*args.Ju + 3.0200381469835218);
  s += 2.4695076677817458e-08 * Math.sin(2*args.Ju - 5*args.Sa + 1.3371284112757598);
  s += 2.8361600344907857e-08 * Math.sin(args.L + 2*args.Lp);
  s += 1.8773719210883126e-08 * Math.sin(4*args.EM - 8*args.Ma + 3*args.Ju - 0.81717542120987108);
  s += 2.6131457411803988e-08 * Math.sin(2*args.D - 2*args.F - args.Lp + 3.1415926535897931);
  s += 2.2737761644037238e-08 * Math.sin(4*args.D - args.Lp + 3.1415926535897931);
  s += 1.345611570729511e-08 * Math.sin(args.EM - 2*args.Ma + 0.89178873006093995);
  s += 1.4023390795926259e-08 * Math.sin(2*args.D - 18*args.Ve + 16*args.EM + 1.1393887176711814);
  s += 1.8325957145940459e-08 * Math.sin(2*args.D + args.L - 2*args.Lp + 3.1415926535897931);
  s += 1.3801569399360914e-08 * Math.sin(2*args.D + args.L - 18*args.Ve + 16*args.EM + 1.1393765356198886);
  s += 1.3686256695421458e-08 * Math.sin(2*args.D - args.L + 18*args.Ve - 16*args.EM + 2.0022191702438463);
  s += 1.4672968572111849e-08 * Math.sin(2*args.Ve - 3*args.EM + 0.26816663275385549);
  s += 1.7550255256165203e-08 * Math.sin(2*args.D - 2*args.F + args.Lp);
  s += 1.3187242916919666e-08 * Math.sin(2*args.D - 2*args.L + 18*args.Ve - 16*args.EM + 2.0022106562060609);
  s += 1.1805343746838855e-08 * Math.sin(args.L - 15*args.Ve + 9*args.EM + 4*args.Ma - 0.66880139804136118);
  s += 1.1611849591022885e-08 * Math.sin(2*args.D - args.L + 2*args.EM - 3*args.Ju + 1.062491920956915);
  s += 1.536859369117229e-08 * Math.sin(args.D + args.L + args.Lp + 3.1415926535897931);
  s += 1.454441043328608e-08 * Math.sin(args.F - args.zeta);
  s += 1.045571401221634e-08 * Math.sin(2*args.D - args.L - 3*args.Me + args.EM + 1.0106648428714589);
  s += 1.4302003592731312e-08 * Math.sin(2*args.D + 2*args.L - args.Lp + 3.1415926535897931);
  s += 1.3730193468933068e-08 * Math.sin(8*args.Ve - 13*args.EM + 1.608387705249493);
  s += 1.1587708806960827e-08 * Math.sin(args.D - args.F + args.EM - 2.8849777613080518);
  s += 1.3089969389957472e-08 * Math.sin(args.D - args.L + args.Lp + 3.1415926535897931);
  s += 1.2411230236404123e-08 * Math.sin(2*args.D - 3*args.Lp + 3.1415926535897931);
  s += 7.377041053540249e-09 * Math.sin(2*args.D - 2*args.L + 2*args.EM - 3*args.Ju + 1.0621800324850705);
  s += 7.2773285934764228e-09 * Math.sin(8*args.EM - 15*args.Ma - 2.0748450796081812);
  s += 7.2945473335264332e-09 * Math.sin(2*args.EM - 4*args.Ma + 0.45721791115523175);
  s += 7.8120216694754052e-09 * Math.sin(args.L - 2*args.Ju + 5*args.Sa + 1.8410860644654232);
  s += 7.8094676911021364e-09 * Math.sin(args.L + 2*args.Ju - 5*args.Sa + 1.3003866070879173);
  s += 7.5726631447095186e-09 * Math.sin(3*args.Ve - 4*args.EM + 0.31576592041043539);
  s += 9.0175344686373699e-09 * Math.sin(2*args.D - args.L - 3*args.Lp + 3.1415926535897931);
  s += 6.0183178356131629e-09 * Math.sin(args.EM - 2*args.Ju + 0.74264553741722461);
  s += 8.193351210751158e-09 * Math.sin(3*args.L - args.Lp + 3.1415926535897931);
  s += 5.71141056932282e-09 * Math.sin(2*args.D - args.L - 12*args.Ve + 8*args.EM - 2.4513872790784683);
  s += 7.7570188977525757e-09 * Math.sin(4*args.D - args.L + args.Lp);
  s += 7.5146120571978074e-09 * Math.sin(4*args.D - args.L - 2*args.Lp + 3.1415926535897931);
  s += 7.1752424804211321e-09 * Math.sin(2*args.D - 2*args.L - 2*args.Lp + 3.1415926535897931);
  s += 6.8485624095301225e-09 * Math.sin(args.L - 0.014049486526232061);
  s += 6.8358729036444577e-09 * Math.sin(args.D - args.Lp);
  s += 6.6904287993115964e-09 * Math.sin(3*args.L + args.Lp);
  s += 4.9791012972781294e-09 * Math.sin(2*args.D - args.L - 20*args.Ve + 21*args.EM + 2.8211236335260192);
  s += 6.2540964863130141e-09 * Math.sin(2*args.D + args.L);
  s += 4.8428484540019308e-09 * Math.sin(args.D - args.L + 3*args.Ve - 4*args.EM + 0.32349532259105457);
  s += 6.1086523819801536e-09 * Math.sin(2*args.D - 2*args.L + 2*args.Lp);
  s += 4.4955197393030361e-09 * Math.sin(3*args.L - 18*args.Ve + 16*args.EM + 1.1393698893347965);
  s += 4.2947512590401575e-09 * Math.sin(args.Ju + 2.565415269741286);
  s += 5.817764173314431e-09 * Math.sin(2*args.D - 3*args.L - args.Lp + 3.1415926535897931);
  s += 4.5660909510349843e-09 * Math.sin(10*args.Ve - 3*args.EM + 1.2784039186597078);
  s += 4.5303951448086535e-09 * Math.sin(2*args.L - 10*args.Ve + 3*args.EM + 1.8631956193090626);
  s += 4.2172189647577418e-09 * Math.sin(args.L + 18*args.Ve - 16*args.EM + 2.0022383788224847);
  s += 4.2496472160676211e-09 * Math.sin(2*args.D - args.L + 4*args.EM - 8*args.Ma + 3*args.Ju - 0.33647860550614644);
  s += 4.2345239543607216e-09 * Math.sin(2*args.D - args.L - 4*args.EM + 8*args.Ma - 3*args.Ju - 2.8031795164627877);
  s += 3.9928660833225484e-09 * Math.sin(args.L - 26*args.Ve + 29*args.EM - 1.1123707772227649);
  s += 4.937208263503482e-09 * Math.sin(2*args.D + 4*args.EM - 8*args.Ma + 3*args.Ju - 0.076571471036983543);
  s += 4.9327943829735517e-09 * Math.sin(2*args.D - 4*args.EM + 8*args.Ma - 3*args.Ju - 3.0650381417678743);
  s += 5.1875063878720347e-09 * Math.sin(2*args.D + 2*args.F - args.L - args.Lp);
  s += 5.0420622835391734e-09 * Math.sin(2*args.F + args.Lp + 3.1415926535897931);
  s += 4.7026927067624989e-09 * Math.sin(2*args.L - 2*args.Lp + 3.1415926535897931);
  s += 4.6542113386515454e-09 * Math.sin(2*args.D + 2*args.F - args.Lp);
  s += 4.5572486024296384e-09 * Math.sin(2*args.D + 2*args.Lp);
  s += 4.5572486024296384e-09 * Math.sin(2*args.D - 2*args.F + args.L - args.Lp);
  s += 4.3633231299858236e-09 * Math.sin(4*args.D - 2*args.L + args.Lp);
  s += 4.2663603937639167e-09 * Math.sin(args.D - 2*args.L + args.Lp + 3.1415926535897931);
  s += 3.2061572987154303e-09 * Math.sin(args.D + args.F - args.L - 20*args.Ve + 20*args.EM - 1.9968350300980358);
  s += 3.1478306079554286e-09 * Math.sin(args.L - 2*args.Ve + 3*args.EM + 2.8308437339536443);
  s += 3.0441394435194159e-09 * Math.sin(args.D + 3*args.Ve - 4*args.EM + 0.32355653891974234);
  s += 3.8300280807653344e-09 * Math.sin(4*args.D - 2*args.L - 2*args.Lp + 3.1415926535897931);
  s += 3.6845839764324739e-09 * Math.sin(4*args.D - 2*args.Lp + 3.1415926535897931);
  s += 3.6845839764324739e-09 * Math.sin(2*args.F + args.L - args.Lp);
  s += 3.6845839764324739e-09 * Math.sin(3*args.Lp);
  s += 2.8911844369637329e-09 * Math.sin(args.L + 2*args.Ve - 3*args.EM + 0.30831159086266102);
  s += 3.5391398720996126e-09 * Math.sin(4*args.D + args.Lp);
  s += 3.5391398720996126e-09 * Math.sin(2*args.D + 2*args.L + args.Lp);
  s += 2.5371156247358555e-09 * Math.sin(2*args.D - args.L + 6*args.EM - 8*args.Ma + 0.50093270781683008);
  s += 3.4421771358777056e-09 * Math.sin(4*args.D + args.L - args.Lp + 3.1415926535897931);
  s += 2.9022271203112782e-09 * Math.sin(args.L - 8*args.Ve + 13*args.EM + 1.386086888971428);
  s += 2.8982041707032962e-09 * Math.sin(args.L + 8*args.Ve - 13*args.EM + 1.7555976967487092);
  s += 2.4815959693711974e-09 * Math.sin(args.L - 2*args.EM + 3*args.Ju - 1.0638360467735257);
  s += 2.6999333999899614e-09 * Math.sin(args.D + args.F + args.EM - 2.8543681340126059);
  s += 3.3452143996557982e-09 * Math.sin(3*args.D - args.L + args.Lp + 3.1415926535897931);
  s += 2.63232220407427e-09 * Math.sin(2*args.D - args.L - 2*args.Ve + 3*args.EM + 2.8331976262889729);
  s += 2.529637168360729e-09 * Math.sin(3*args.Ve - 5*args.EM - 2.7823046128387365);
  s += 3.1997702953229373e-09 * Math.sin(2*args.F + args.L + args.Lp + 3.1415926535897931);
  s += 2.4229564051911185e-09 * Math.sin(args.D - 34*args.EM + 41*args.Ma - 2*args.Ju - 1.9421156552170942);
  s += 2.3595520763689418e-09 * Math.sin(2*args.F + args.L - 18*args.Ve + 16*args.EM - 2.0022161231811331);
  s += 2.3592766771444313e-09 * Math.sin(2*args.F - args.L + 18*args.Ve - 16*args.EM - 1.1393765096600845);
  s += 2.741910432674778e-09 * Math.sin(args.D - args.F + args.L + args.EM - 3.0140412400743331);
  s += 2.741910432674778e-09 * Math.sin(args.D - args.F - args.L + args.EM - 3.0140412400743331);
  s += 2.8223075283148035e-09 * Math.sin(2*args.D - 2*args.L + 14*args.EM - 23*args.Ma - 3.0626710676276008);
  s += 2.2869443030213741e-09 * Math.sin(2*args.D - 2*args.F + 5*args.Ve - 6*args.EM + 0.31817080929625841);
  s += 2.1497461368110906e-09 * Math.sin(2*args.D - args.L - 15*args.Ve + 13*args.EM + 1.1399785069844977);
  s += 2.2878153495666358e-09 * Math.sin(args.EM + 2*args.Ju - 5*args.Sa + 2.8489324559188898);
  s += 2.8119193504353089e-09 * Math.sin(3*args.D - args.L - args.Lp);
  s += 2.6185335805635076e-09 * Math.sin(2*args.D - args.L + 6*args.Ve - 8*args.EM + 0.058164155943753147);
  s += 1.9692833771642361e-09 * Math.sin(args.L + args.EM - 2*args.Ma + 0.93920859392398892);
  s += 1.9424553799165706e-09 * Math.sin(args.L - args.EM + 2*args.Ma + 2.2037536952932784);
  s += 1.9603012385030695e-09 * Math.sin(2*args.D - args.L - 3*args.Ve + 4*args.EM + 2.7896753227391198);
  s += 1.7708340086642092e-09 * Math.sin(3*args.EM - 4*args.Ma + 0.97851529001794324);
  s += 2.3863286604550261e-09 * Math.sin(2*args.D - args.L - 8*args.Ve + 13*args.EM + 1.5568507564867693);
  s += 2.366150708579076e-09 * Math.sin(2*args.D - args.L + 8*args.Ve - 13*args.EM + 1.5842988297253544);
  s += 1.6758742745616084e-09 * Math.sin(2*args.D - args.L - args.EM + 2*args.Ju + 2.3742030525694475);
  s += 1.6871847109838429e-09 * Math.sin(args.D - 15*args.Ve + 12*args.EM - 0.58171680372930412);
  s += 1.8101104040657596e-09 * Math.sin(2*args.D - 2*args.Ve + 3*args.EM + 2.8334551478685763);
  s += 1.6036935870772197e-09 * Math.sin(args.Ve - 2*args.EM - 2.399007031602638);
  s += 1.6783749767494669e-09 * Math.sin(2*args.D + 2*args.L - 18*args.Ve + 16*args.EM + 1.1393743129681584);
  s += 1.5997713512981574e-09 * Math.sin(2*args.D - args.L + 5*args.EM - 6*args.Ma - 2.1209005011076556);
  s += 2.1816615649929118e-09 * Math.sin(2*args.D - 3*args.L + args.Lp + 3.1415926535897931);
  s += 1.6345464631710323e-09 * Math.sin(2*args.D + 18*args.Ve - 16*args.EM + 2.0021944448345934);
  s += 2.0331342825432036e-09 * Math.sin(2*args.D - 2*args.L + 6*args.Ve - 8*args.EM + 0.062070689857863813);
  s += 1.6922494515586635e-09 * Math.sin(args.L - 3*args.Ve + 4*args.EM + 2.808069031600942);
  s += 1.546279612700527e-09 * Math.sin(2*args.EM - 3*args.Ma + 0.99787371975461536);
  s += 2.0187796508663441e-09 * Math.sin(3*args.EM - 6*args.Ma - 0.052248650092064905);
  s += 1.5470887016022061e-09 * Math.sin(2*args.D - 2*args.L + 6*args.EM - 8*args.Ma + 0.50109770545053012);
  s += 1.5489675440621083e-09 * Math.sin(3*args.EM - 5*args.Ma + 0.47837834441334443);
  s += 1.8646884575850787e-09 * Math.sin(2*args.L + 4*args.EM - 8*args.Ma + 3*args.Ju + 0.12156152663086739);
  s += 1.8645904077117579e-09 * Math.sin(2*args.L - 4*args.EM + 8*args.Ma - 3*args.Ju + 3.0200222287731093);
  s += 1.5129318374541765e-09 * Math.sin(2*args.D - args.L - args.Ju - 2.1010932620981686);
  s += 1.4597544154948173e-09 * Math.sin(2*args.D - args.L + args.EM - 2*args.Ma + 0.92075445318181048);
  s += 1.9877360925490974e-09 * Math.sin(4*args.D - args.L);
  s += 1.5236163753300734e-09 * Math.sin(2*args.D - 3*args.Ve + 4*args.EM + 2.7860210478508431);
  s += 1.3790388549778537e-09 * Math.sin(args.D + args.F - 2*args.L - 3*args.EM + 7*args.Ma - 0.86551006389875085);
  s += 1.3636973246686274e-09 * Math.sin(2*args.D - args.L - args.EM + 2*args.Ma + 2.2340128892241915);
  s += 1.3983334562046755e-09 * Math.sin(args.L - 8*args.EM + 15*args.Ma - 1.0465534833501207);
  s += 1.3892615311138428e-09 * Math.sin(args.L + 8*args.EM - 15*args.Ma - 2.0954910722696365);
  s += 1.7632700851488138e-09 * Math.sin(2*args.D - args.L + 2*args.Ju - 5*args.Sa - 1.4923040366269515);
  s += 1.8907080667933238e-09 * Math.sin(2*args.L + 0.0013476791641270972);
  s += 1.8907733563271904e-09 * Math.sin(args.L - 3*args.Lp + 3.1415926535897931);
  s += 1.7464926080626763e-09 * Math.sin(2*args.D - args.L - 2*args.Ju + 5*args.Sa - 1.6497928495855601);
  s += 1.8422919882162369e-09 * Math.sin(3*args.D + args.Lp + 3.1415926535897931);
  s += 1.3465729671395801e-09 * Math.sin(2*args.EM - 3*args.Ju - 2.068179253667473);
  s += 1.2896973426967436e-09 * Math.sin(2*args.D - args.EM + 2*args.Ju + 2.3741338203861981);
  s += 1.2850638026587283e-09 * Math.sin(args.L - args.EM + 2*args.Ju + 2.3793423109860807);
  s += 1.3235791516357462e-09 * Math.sin(args.L + 2*args.EM - 4*args.Ma + 0.45455889044773562);
  s += 1.2612247641268453e-09 * Math.sin(9*args.EM - 17*args.Ma - 2.5825772725032716);
  s += 1.4031586427990014e-09 * Math.sin(2*args.D - args.L + 2*args.Ve - 3*args.EM + 0.27364019655216393);
  s += 1.3547048980309218e-09 * Math.sin(2*args.D - args.L + 4*args.Ve - 5*args.EM - 2.8168523139752693);
  s += 1.2799496309893205e-09 * Math.sin(args.L - 2*args.EM + 4*args.Ma + 2.6897037008342894);
  s += 1.2328411481127235e-09 * Math.sin(args.EM - 3*args.Ju + 0.49385551598226701);
  s += 1.6483665157724225e-09 * Math.sin(args.D - args.L - args.Lp);
  s += 1.3145655022026719e-09 * Math.sin(2*args.D - args.L + 2*args.EM - 5*args.Sa - 1.3053720699785643);
  s += 1.2713119554114042e-09 * Math.sin(args.L + 3*args.Ve - 4*args.EM + 0.32588219307299687);
  s += 1.5349205272794116e-09 * Math.sin(2*args.D - 8*args.Ve + 13*args.EM + 1.5235914625117666);
  s += 1.1421794665960085e-09 * Math.sin(args.Sa + 2.4761459373984849);
  s += 1.5998851476614686e-09 * Math.sin(2*args.L + 2*args.Lp);
  s += 1.5202156959945111e-09 * Math.sin(2*args.D + 8*args.Ve - 13*args.EM + 1.6187176535528658);
  s += 1.1820626295473749e-09 * Math.sin(2*args.D - args.L + args.Ju - 1.1097639798696752);
  s += 1.5514037795505154e-09 * Math.sin(2*args.D + 2*args.L - 2*args.Lp + 3.1415926535897931);
  s += 1.5514037795505154e-09 * Math.sin(2*args.D - 2*args.F - 2*args.Lp + 3.1415926535897931);
  s += 1.1475312117462718e-09 * Math.sin(2*args.D - args.L - 8*args.EM + 15*args.Ma - 1.0971021103127903);
  s += 1.4406966309943634e-09 * Math.sin(2*args.D - 2*args.L + 3.0752729500086322);
  s += 1.2293596477952846e-09 * Math.sin(2*args.D - args.L + 2*args.EM - 4*args.Ju + 5*args.Sa - 1.8629128965916222);
  s += 1.1038742825751655e-09 * Math.sin(2*args.D - args.L + 8*args.EM - 15*args.Ma - 2.0457070845919576);
  s += 1.082499500254839e-09 * Math.sin(4*args.EM - 6*args.Ma + 0.47921077463636574);
  s += 1.4544410433286077e-09 * Math.sin(args.D + args.L - args.Lp);
  s += 1.0536688587479356e-09 * Math.sin(5*args.EM - 9*args.Ma - 0.54876481944680255);
  s += 1.0175402842777387e-09 * Math.sin(args.L + args.EM - 2*args.Ju + 0.76053178416678302);
  s += 1.0278796320701028e-09 * Math.sin(4*args.Ve - 6*args.EM - 2.5596883203845802);
  s += 1.4059596752176545e-09 * Math.sin(2*args.D - 2*args.F);
  s += 1.0009371854896271e-09 * Math.sin(args.L - args.Ju - 2.1656605146320524);
  s += 9.6962736221919046e-10 * Math.sin(2*args.D + 2*args.EM - 0.82368405493521102);
  s += 9.9906279076728868e-10 * Math.sin(2*args.D - args.L + 2*args.EM - 4*args.Ma + 0.49993793585256502);
  s += 9.8700004438642379e-10 * Math.sin(6*args.EM - 11*args.Ma - 1.0594862156759568);
  s += 9.5332833119223037e-10 * Math.sin(2*args.D - args.L + 18*args.Ve - 17*args.EM - 2.4850463430790501);
  s += 9.4770705228735345e-10 * Math.sin(2*args.D + args.EM - 2*args.Ma + 0.92329385182767432);
  s += 1.2763388896937082e-09 * Math.sin(4*args.EM - 7*args.Ma - 0.03620961732814032);
  s += 1.3111332486795656e-09 * Math.sin(7*args.EM - 13*args.Ma - 1.5684346843204897);
  s += 9.4386363868034662e-10 * Math.sin(args.L + args.Ju - 0.98625943764195367);
  s += 1.0105549554386959e-09 * Math.sin(2*args.D - args.L + 5*args.Ve - 6*args.EM + 0.31529744569802259);
  s += 9.043221050588111e-10 * Math.sin(2*args.D - args.Ju - 2.1097356913840364);
  s += 1.2120342027738401e-09 * Math.sin(4*args.D - 3*args.L - args.Lp + 3.1415926535897931);
  s += 1.2120342027738401e-09 * Math.sin(2*args.D + args.L - 3*args.Lp + 3.1415926535897931);
  s += 9.7479802666420858e-10 * Math.sin(2*args.D + 2*args.Ve - 3*args.EM + 0.2860525888073755);
  s += 8.6245224950858601e-10 * Math.sin(2*args.D - args.EM + 2*args.Ma + 2.2294622231440688);
  s += 8.7266462599711152e-10 * Math.sin(2*args.EM + 2.5892228234040529);
  s += 8.5506848350562698e-10 * Math.sin(args.L - 18*args.Ve + 12*args.EM + 8*args.Ma - 3*args.Ju + 2.5831670719907907);
  s += 9.4117156932055605e-10 * Math.sin(2*args.D - args.L + 10*args.Ve - 3*args.EM + 1.2784267741062867);
  s += 9.4023557822104429e-10 * Math.sin(2*args.D + args.L - 10*args.Ve + 3*args.EM + 1.8631667265296796);
  s += 8.3959873703623063e-10 * Math.sin(2*args.D - 3*args.Me + args.EM + 1.011154005895714);
  s += 8.2418325788633091e-10 * Math.sin(args.EM - 1.0099037048059112);
  s += 9.5839188962842011e-10 * Math.sin(2*args.D + args.L - 18*args.Ve + 15*args.EM + 2.9359720680203458);
  s += 8.2708436101934158e-10 * Math.sin(2*args.D + 2*args.EM - 3*args.Ju + 1.062608328681879);
  s += 9.0277601734007378e-10 * Math.sin(2*args.D - 2*args.L + 10*args.Ve - 3*args.EM + 1.278456198092389);
  s += 8.1900743666750719e-10 * Math.sin(2*args.Ju - 2.6199002179376891);
  s += 8.9545254274283205e-10 * Math.sin(2*args.D - 10*args.Ve + 3*args.EM + 1.8631431735297388);
  s += 1.1150714665519329e-09 * Math.sin(6*args.D - 2*args.L - args.Lp + 3.1415926535897931);
  s += 1.1150714665519329e-09 * Math.sin(2*args.D + 3*args.L - args.Lp + 3.1415926535897931);
  s += 1.1150714665519329e-09 * Math.sin(args.D + 2*args.L + args.Lp + 3.1415926535897931);
  s += 8.1749318764752582e-10 * Math.sin(2*args.D - args.L - 2*args.EM + 4*args.Ma + 2.6549957553061088);
  s += 1.0665900984409792e-09 * Math.sin(4*args.D);
  s += 1.0665900984409792e-09 * Math.sin(args.D - 2*args.Lp + 3.1415926535897931);
  s += 8.1961273715649864e-10 * Math.sin(3*args.EM - 8*args.Ma + 3*args.Ju + 1.912163490803491);
  s += 7.8774517319173511e-10 * Math.sin(2*args.D - args.L + 2*args.EM - args.Ju - 5*args.Sa + 1.9440228594481515);
  s += 8.2059227253601823e-10 * Math.sin(2*args.D - args.L + 3*args.Ve - 5*args.EM - 2.8552087870118008);
  s += 1.0181087303300257e-09 * Math.sin(3*args.D - 2*args.L - args.Lp);
  s += 1.0181087303300257e-09 * Math.sin(2*args.D - 2*args.F + args.L + args.Lp + 3.1415926535897931);
  s += 1.0181087303300257e-09 * Math.sin(2*args.F - args.L - args.Lp + 3.1415926535897931);
  s += 1.0181087303300257e-09 * Math.sin(args.F + args.L - args.zeta);
  s += 1.0181087303300257e-09 * Math.sin(args.F - args.L - args.zeta);
  s += 7.4418691223545176e-10 * Math.sin(2*args.D - 8*args.EM + 15*args.Ma - 1.0879911289845168);
  s += 6.9095826309925619e-10 * Math.sin(2*args.D - 8*args.Ve - 13*args.EM + 0.84350813039302885);
  s += 6.8886372396942786e-10 * Math.sin(2*args.D - args.L + 2*args.EM - 5*args.Ju + 5*args.Sa + 2.2611954952755018);
  s += 9.6962736221907197e-10 * Math.sin(args.D + 2*args.Lp);
  s += 9.6962736221907197e-10 * Math.sin(2*args.F - args.L + args.Lp);
  s += 7.1080824471370699e-10 * Math.sin(2*args.D + 8*args.EM - 15*args.Ma - 2.056580810390094);
  s += 7.7551328502344943e-10 * Math.sin(2*args.D - args.L - args.EM - 2*args.Ju + 5*args.Sa + 0.27941338291380546);
  s += 6.868741147039821e-10 * Math.sin(2*args.D + args.Ju - 1.0925367854068662);
  s += 9.2114599410811847e-10 * Math.sin(2*args.D + 2*args.F + args.L - args.Lp);
  s += 9.2114599410811847e-10 * Math.sin(2*args.F - args.Lp);
  s += 6.5327437497557378e-10 * Math.sin(2*args.L - 15*args.Ve + 9*args.EM + 4*args.Ma - 0.66852916100656956);
  s += 6.9888528129726086e-10 * Math.sin(2*args.D + 3*args.EM - 8*args.Ma + 3*args.Ju + 1.9703840534425334);
  s += 6.4932204408847571e-10 * Math.sin(15*args.Ve - 9*args.EM - 4*args.Ma - 2.4730342529582972);
  s += 7.7570188977534918e-10 * Math.sin(2*args.D + 5*args.EM - 1.7478203604356874);
  s += 6.6326339903937964e-10 * Math.sin(2*args.D + 2*args.EM - 4*args.Ma + 0.49496540855382304);
  s += 6.9113103531383318e-10 * Math.sin(2*args.D - args.L + 2*args.EM - 4*args.Ju + 1.231532096372332);
  s += 8.7266462599716487e-10 * Math.sin(6*args.D - args.L - args.Lp + 3.1415926535897931);
  s += 8.7266462599716487e-10 * Math.sin(4*args.D - 2*args.L + 2*args.Lp);
  s += 8.7266462599716487e-10 * Math.sin(4*args.D - 2*args.L);
  s += 6.2184956891251984e-10 * Math.sin(args.D - 2*args.F + 20*args.Ve - 18*args.EM - args.Sa + 0.62314470738441574);
  s += 6.9285128294058133e-10 * Math.sin(5*args.Ve - 8*args.EM - 1.2744838413995234);
  s += 8.241832578864373e-10 * Math.sin(2*args.D - args.L + 2*args.EM + 0.049516910741241371);
  s += 6.0932723902724916e-10 * Math.sin(4*args.EM - 8*args.Ma - 0.55736183888286051);
  s += 6.3891827226360048e-10 * Math.sin(2*args.D - args.L - 3*args.Ve + 5*args.EM - 0.39109896405509326);
  s += 5.9080117286884508e-10 * Math.sin(2*args.D - 2*args.L + 18*args.Ve - 17*args.EM - 2.484465101007105);
  s += 6.3025778544218295e-10 * Math.sin(2*args.D - args.L + 4*args.EM + 0.40201198405458849);
  s += 6.2442150843983501e-10 * Math.sin(2*args.D - args.L + 3*args.EM - 8*args.Ma + 3*args.Ju + 1.9926469715826753);
  s += 8.2418325788621127e-10 * Math.sin(3*args.D - args.Lp + 3.1415926535897931);
  s += 8.2418325788621127e-10 * Math.sin(2*args.D + 2*args.F - args.L + args.Lp + 3.1415926535897931);
  s += 5.8648034827496398e-10 * Math.sin(2*args.D - 2*args.L - 3*args.Me + args.EM + 1.0116761958568325);
  s += 5.7764962470170125e-10 * Math.sin(2*args.D - args.L - 19*args.Ve + 21*args.EM - 3*args.Ma - 2.5126311997964614);
  s += 5.8339280291926002e-10 * Math.sin(2*args.D - 2*args.L + 5*args.EM - 6*args.Ma + 1.0106855141311277);
  s += 7.7570188977525768e-10 * Math.sin(2*args.D + 2*args.F + args.Lp + 3.1415926535897931);
  s += 5.5369303885369546e-10 * Math.sin(args.D - args.L + 3*args.EM - 4*args.Ma + 1.002909250501034);
  s += 5.4706200262335429e-10 * Math.sin(2*args.D - args.L - 3*args.EM + 4*args.Ma + 2.1999305432355167);
  s += 5.3329504922049175e-10 * Math.sin(2*args.D - args.L - args.EM + 0.792173007954866);
  s += 5.3174346749535523e-10 * Math.sin(2*args.D - 2*args.L + 2*args.EM - 4*args.Ju + 3*args.Sa - 0.69607034839682624);
  s += 6.2116378698841518e-10 * Math.sin(2*args.D - 2*args.L - 2*args.Ve + 13*args.EM - 15*args.Ma - 0.23084285158191703);
  s += 6.2839790079875607e-10 * Math.sin(2*args.D - 18*args.Ve + 15*args.EM + 2.9360393946525432);
  s += 5.7573379554330979e-10 * Math.sin(args.L + 3*args.Ve - 5*args.EM - 2.7902181274369529);
  s += 6.4389780935869575e-10 * Math.sin(2*args.D + 2*args.L + 0.15083734728567399);
  s += 7.2722052166430387e-10 * Math.sin(2*args.D - 2*args.F - args.L - args.Lp);
  s += 7.2722052166430387e-10 * Math.sin(args.F + args.zeta + 3.1415926535897931);
  s += 5.510468264930215e-10 * Math.sin(args.L - 3*args.Ve + 5*args.EM - 0.38833062793772538);
  s += 5.2708123962776133e-10 * Math.sin(2*args.D - 2*args.EM + 4*args.Ma + 2.6676162936585652);
  s += 5.549826852673654e-10 * Math.sin(args.D - 3*args.Ve + 4*args.EM - 0.3237652175263655);
  s += 5.3329504922070765e-10 * Math.sin(4*args.EM + 0.40920308963835578);
  s += 5.059223699526144e-10 * Math.sin(args.L - 6*args.EM + 8*args.Ma - 0.50596792895471177);
  s += 5.6065860382566192e-10 * Math.sin(2*args.D - args.EM - 2*args.Ju + 5*args.Sa + 0.26349999986028594);
  s += 4.8481368110954632e-10 * Math.sin(args.L - args.EM + 0.81338888127634401);
  s += 5.556545213787337e-10 * Math.sin(args.D - 23*args.Ve + 25*args.EM - 2.8815085882045888);
  s += 6.7873915355335027e-10 * Math.sin(args.L + 3*args.Lp);
  s += 4.8678136859356347e-10 * Math.sin(args.L + 3*args.EM - 8*args.Ma + 3*args.Ju + 2.0802607840925251);
  s += 5.4553572111930226e-10 * Math.sin(2*args.Ve - 4*args.EM + 1.334913538009574);
  s += 5.3095351985054405e-10 * Math.sin(2*args.L - 2*args.Ju + 5*args.Sa + 1.8407532336430523);
  s += 5.3022718832808448e-10 * Math.sin(2*args.L + 2*args.Ju - 5*args.Sa + 1.2999583303224111);
  s += 4.7548111709494916e-10 * Math.sin(2*args.D - args.L - 2*args.EM + 3*args.Ju - 1.0793286120222769);
  s += 4.5414022469141222e-10 * Math.sin(2*args.D - 2*args.L + 2*args.EM - 5*args.Ju + 5*args.Sa + 2.2591627067083611);
  s += 5.9554621677329374e-10 * Math.sin(2*args.D - args.L + 14*args.EM - 23*args.Ma - 3.0768465078889622);
  s += 6.2990293721870821e-10 * Math.sin(2*args.D + args.L + 4*args.EM - 8*args.Ma + 3*args.Ju - 0.0038734184483920826);
  s += 6.2982652614336587e-10 * Math.sin(2*args.D + args.L - 4*args.EM + 8*args.Ma - 3*args.Ju - 3.1379298427178028);
  s += 6.3025778544239667e-10 * Math.sin(4*args.D + args.L + args.Lp);
  s += 6.3025778544239667e-10 * Math.sin(4*args.D - args.L - 3*args.Lp + 3.1415926535897931);
  s += 6.3025778544239667e-10 * Math.sin(2*args.D - 4*args.Lp + 3.1415926535897931);
  s += 6.3025778544239667e-10 * Math.sin(2*args.F + 2*args.L - args.Lp);
  s += 4.6065729087796864e-10 * Math.sin(args.Ve - 0.52732934312405333);
  s += 4.8301144334143628e-10 * Math.sin(2*args.D - 2*args.L + 2*args.EM - args.Ju - 5*args.Sa + 1.9438793849725944);
  s += 4.6185900690365626e-10 * Math.sin(2*args.D - 2*args.EM + 3*args.Ju - 1.0827796926692164);
  s += 4.4153974717314694e-10 * Math.sin(2*args.D - args.L + args.EM - 2*args.Ju + 0.77073038823608175);
  s += 4.8117725774085206e-10 * Math.sin(args.D + args.F - args.L - args.EM + 2.7831036157495039);
  s += 4.3633231299857256e-10 * Math.sin(2*args.D - args.L + args.EM - 0.76117281884689225);
  s += 5.6454901044004728e-10 * Math.sin(args.D - args.F + 2*args.Ma - 1.6611935458740277);
  s += 4.764042110605092e-10 * Math.sin(2*args.D - args.L + 10*args.EM - 19*args.Ma + 3*args.Sa + 2.7964485605188454);
  s += 4.7588190604388521e-10 * Math.sin(2*args.D - args.L - 10*args.EM + 19*args.Ma - 3*args.Sa + 0.34517822818411187);
  s += 4.9557019737094295e-10 * Math.sin(2*args.D + 3*args.Ve - 5*args.EM - 2.8765569920170777);
  s += 4.3718538850888298e-10 * Math.sin(args.D + 3*args.EM - 4*args.Ma + 1.0029438732941418);
  s += 4.2839674353076114e-10 * Math.sin(args.D - args.F - args.EM - 0.56133373712796519);
  s += 4.3633231299859789e-10 * Math.sin(2*args.D + args.EM + 0.4903322764564616);
  s += 4.1942688327469527e-10 * Math.sin(2*args.D - 3*args.EM + 4*args.Ma + 2.214975714092088);
  s += 4.1876707769947497e-10 * Math.sin(18*args.Ve - 17*args.EM - 2.4946659949919416);
  s += 5.8177641733144318e-10 * Math.sin(4*args.D + args.L - 2*args.Lp + 3.1415926535897931);
  s += 5.8177641733144318e-10 * Math.sin(2*args.D - 2*args.F + 2*args.Lp);
  s += 5.8177641733144318e-10 * Math.sin(4*args.L - args.Lp + 3.1415926535897931);
  s += 4.1165721934314299e-10 * Math.sin(args.D - 23*args.EM + 20*args.Ma + 2.4299257005933841);
  s += 4.1841216506424607e-10 * Math.sin(args.L - 3*args.EM + 4*args.Ma + 2.1555291601869127);
  s += 4.1845484655651254e-10 * Math.sin(2*args.D - args.L - 2*args.EM + args.Ju + 0.56683512133192371);
  s += 4.4028034049064148e-10 * Math.sin(args.D - args.F + args.EM - 2*args.Ju - 0.39312703880768546);
  s += 4.162427838369062e-10 * Math.sin(2*args.D - args.L - 2*args.EM + 3*args.Ma + 2.1426155766489279);
  s += 4.1172043761285844e-10 * Math.sin(2*args.D - args.L - args.Sa + 0.62069184091989471);
  s += 4.1097165741942606e-10 * Math.sin(2*args.D - args.L + args.Sa + 2.5187923762558797);
  s += 4.0488844552024256e-10 * Math.sin(args.D - args.F - args.L + 18*args.Ve - 15*args.EM + 0.66492858044632874);
  s += 4.1498087601097856e-10 * Math.sin(5*args.EM - 7*args.Ma - 2.6156179842821579);
  s += 4.2234606648221051e-10 * Math.sin(2*args.D - args.L + args.Ve + 2.6806434289298524);
  s += 4.0976429162015717e-10 * Math.sin(2*args.D - 2*args.EM + args.Ju + 0.5672978638008106);
  s += 5.4983963771537397e-10 * Math.sin(5*args.EM - 8*args.Ma - 0.028612823429556459);
  s += 4.8685800078131479e-10 * Math.sin(9*args.EM - 15*args.Ma + 1.73309630791632);
  s += 5.4441714052039798e-10 * Math.sin(2*args.D - args.L + 7*args.EM - 10*args.Ma - 0.017383817313837396);
  s += 3.9663028728665259e-10 * Math.sin(2*args.D - 2*args.Ve + args.EM + 0.62375943572597148);
  s += 4.4701547943806064e-10 * Math.sin(args.L - args.EM - 2*args.Ju + 5*args.Sa + 0.27753739324823529);
  s += 5.2292037459893125e-10 * Math.sin(args.L - 6*args.Ve + 8*args.EM - 0.055078243134350308);
  s += 4.6985550050034964e-10 * Math.sin(5*args.EM - 8*args.Ma + 3*args.Ju - 1.762778148339972);
  s += 4.3633231299856605e-10 * Math.sin(2*args.D + args.L - args.EM - 2.8321159320809626);
  s += 3.878509448876063e-10 * Math.sin(2*args.D - 2*args.L + 2*args.EM - 0.74357204600511739);
  s += 4.0706623688078491e-10 * Math.sin(2*args.D - 3*args.Ve + 5*args.EM - 0.45585071411793388);
  s += 5.3329504922048958e-10 * Math.sin(4*args.D - args.L + 2*args.Lp);
  s += 5.3329504922048958e-10 * Math.sin(3*args.D - 2*args.L + args.Lp);
  s += 5.3329504922048958e-10 * Math.sin(args.D);
  s += 5.3329504922048958e-10 * Math.sin(2*args.F + 2*args.L + args.Lp + 3.1415926535897931);
  s += 5.3329504922048958e-10 * Math.sin(2*args.F - args.L + 3.1415926535897931);
  s += 5.3329504922048958e-10 * Math.sin( - 1.5707963267948966);
  s += 3.9427052079318361e-10 * Math.sin(2*args.D - args.L - 3*args.EM + 5*args.Ma + 2.6550895051386165);
  s += 3.7681561864935342e-10 * Math.sin(2*args.D - args.L - 2*args.Ve + args.EM + 0.62638039371636278);
  s += 4.5904952146141138e-10 * Math.sin(args.D - args.F + args.EM + args.Ju - args.Sa - 0.1561404804157526);
  s += 4.1325751525441281e-10 * Math.sin(args.L + args.EM + 2*args.Ju - 5*args.Sa + 2.8351155571119637);
  s += 3.9034240916141246e-10 * Math.sin(2*args.F + 2*args.L - 18*args.Ve + 16*args.EM - 2.0022183759836958);
  s += 4.3633231299858419e-10 * Math.sin(5*args.EM + 1.3669971970992498);
  s += 3.6247677090459123e-10 * Math.sin(args.Ju - 2*args.Sa + 0.85452199232157178);
  s += 4.3090888202744174e-10 * Math.sin(2*args.L - 18*args.Ve + 15*args.EM + 2.9359585886786514);
  s += 3.8709816171554262e-10 * Math.sin(args.D + args.F - args.L + args.EM + 2.7320653688046983);
  s += 3.8218761301365669e-10 * Math.sin(2*args.F + 18*args.Ve - 16*args.EM - 1.1393704383031253);
  s += 3.6719690093163448e-10 * Math.sin(args.EM + args.Ju + 2.5851387013333005);
  s += 3.9853752205046826e-10 * Math.sin(args.EM + args.Ju - 5*args.Sa + 1.8907230002449986);
  s += 4.3072149872174891e-10 * Math.sin(args.D - args.F + 4*args.Ve - 5*args.EM - 0.18238326906456773);
  s += 3.6421545125282993e-10 * Math.sin(4*args.EM - 5*args.Ma - 2.0901264387191634);
  s += 3.5878212895419374e-10 * Math.sin(11*args.EM - 21*args.Ma + 2*args.Ju - 2.5611269123418574);
  s += 4.8481368110953598e-10 * Math.sin(6*args.D - 3*args.L - args.Lp + 3.1415926535897931);
  s += 4.8481368110953598e-10 * Math.sin(4*args.L + args.Lp);
  s += 3.6318866984599565e-10 * Math.sin(args.D + args.L - 18*args.Ve + 16*args.EM - 2.0021947473860608);
  s += 3.6182530229763393e-10 * Math.sin(args.D - args.L + 18*args.Ve - 16*args.EM - 1.1393755855767722);
  s += 3.7289128431463524e-10 * Math.sin(args.D - args.F + 2*args.Ve - 2*args.EM - 1.2481355313891509);
  s += 3.4174372017530597e-10 * Math.sin(2*args.EM - args.Ju + 2.6372270787702607);
  s += 4.3633231299855829e-10 * Math.sin(3*args.EM + 3.0810721400464058);
  s += 3.5908587181193267e-10 * Math.sin(2*args.D - args.L + 6*args.Ve - 7*args.EM + 0.35169988416631182);
  s += 3.7262873953890074e-10 * Math.sin(args.EM - 3*args.Ju + 5*args.Sa + 1.3072402729902439);
  s += 3.301126446608223e-10 * Math.sin(args.L + 3*args.EM - 4*args.Ma + 1.0072857467288689);
  s += 3.3845523852553172e-10 * Math.sin(2*args.D - args.L - 4*args.EM + 6*args.Ma + 2.6797149593420175);
  s += 3.4122795807755841e-10 * Math.sin(4*args.D - 18*args.Ve + 16*args.EM + 1.1393819392723066);
  s += 3.2050267192644728e-10 * Math.sin(2*args.D - 2*args.L - 12*args.Ve + 8*args.EM - 2.4508621605947343);
  s += 3.1919769089581747e-10 * Math.sin(2*args.L - 18*args.Ve + 17*args.EM + 2.4836476161911833);
  s += 3.3255057361421189e-10 * Math.sin(4*args.D - 2*args.L + 18*args.Ve - 16*args.EM + 2.0022143715837002);
  s += 3.1928812503205667e-10 * Math.sin(2*args.D - args.L - args.EM + 3*args.Ju + 2.5866592471283831);
  s += 3.2966007500490632e-10 * Math.sin(2*args.D - args.L - 17*args.Ve + 16*args.EM - 0.44139343465627895);
  s += 3.1909852168915346e-10 * Math.sin(args.Ve - 3*args.EM + 1.0286961445503429);
  s += 3.1660504821277881e-10 * Math.sin(args.L - 2*args.EM + 3*args.Ma + 2.1405014389322501);
  s += 4.3633231299858244e-10 * Math.sin(2*args.D + 2*args.F - 2*args.Lp);
  s += 4.3633231299858244e-10 * Math.sin(args.D + 2*args.F + args.Lp);
  s += 3.1569220659610416e-10 * Math.sin(2*args.D - args.L + 2*args.EM - 2*args.Ju + 0.51927146831755966);
  s += 3.2467633890855777e-10 * Math.sin(2*args.D - 15*args.Ve + 13*args.EM + 1.1392144252478527);
  s += 3.0795629968136749e-10 * Math.sin(3*args.Ve - 7*args.EM + 4*args.Ma - 2.198903714681006);
  s += 3.3757703982170017e-10 * Math.sin(2*args.EM - 4*args.Ju - 1.8990214632322535);
  s += 3.229400214204603e-10 * Math.sin(2*args.D + 2*args.Ju - 5*args.Sa - 0.42514643113000355);
  s += 3.1675093394528464e-10 * Math.sin(4*args.L - 18*args.Ve + 16*args.EM + 1.1393698870879647);
  s += 3.3240237303615079e-10 * Math.sin(2*args.D - 2*args.L - 20*args.Ve + 21*args.EM + 2.8233882359454405);
  s += 3.1118145362422915e-10 * Math.sin(args.L - 3*args.EM + 5*args.Ma + 2.6649996144688055);
  s += 3.1061129081614461e-10 * Math.sin(args.D - args.F - args.L + 23*args.Ve - 23*args.EM - 1.1080796869095941);
  s += 3.0037353670937747e-10 * Math.sin(args.L - 5*args.EM + 6*args.Ma + 2.1302985690143492);
  s += 3.1685044859847029e-10 * Math.sin(2*args.D - 2*args.Ju + 5*args.Sa - 2.7673246291496936);
  s += 3.5727777742493879e-10 * Math.sin(args.D - 3*args.F + 43*args.Ve - 42*args.EM + 0.16171642693581537);
  s += 3.2142279887189731e-10 * Math.sin(2*args.D - 2*args.F - args.L + 5*args.Ve - 6*args.EM + 0.3180967591076051);
  s += 2.8414693881966348e-10 * Math.sin(2*args.D + args.EM - 2*args.Ju + 0.76320291140795327);
  s += 3.1800088522135534e-10 * Math.sin(2*args.D - 2*args.F + args.L + 5*args.Ve - 6*args.EM + 0.3180805720606884);
  s += 3.3937027051756339e-10 * Math.sin(args.D - args.F + args.Ve - 2.9387095756809032);
  s += 3.0783851324142399e-10 * Math.sin(args.D - 2*args.L + 21*args.Ve - 20*args.EM + 0.37719038097831059);
  s += 3.7532408383846482e-10 * Math.sin(args.L + 3*args.EM - 6*args.Ma - 0.064798804220201914);
  s += 2.8837434912021106e-10 * Math.sin(2*args.D - 2*args.EM + 3*args.Ma + 2.1424022867902965);
  s += 2.9088820866574444e-10 * Math.sin(2*args.D - 2*args.L + args.EM - 0.50707836156358266);
  s += 2.971256620408809e-10 * Math.sin(2*args.L + 18*args.Ve - 16*args.EM + 2.0022629718938574);
  s += 2.818411680466386e-10 * Math.sin(args.L + 2*args.EM - 3*args.Ma + 1.0010553590945965);
  s += 3.8785094488762884e-10 * Math.sin(4*args.D + 2*args.L - args.Lp + 3.1415926535897931);
  s += 3.8785094488762884e-10 * Math.sin(2*args.D + 2*args.F - args.L - 2*args.Lp);
  s += 3.8785094488762884e-10 * Math.sin(2*args.D - args.L - 4*args.Lp + 3.1415926535897931);
  s += 3.8785094488762884e-10 * Math.sin(2*args.D - 3*args.L - 2*args.Lp + 3.1415926535897931);
  s += 3.8785094488762884e-10 * Math.sin(2*args.D - 2*args.F + args.L - 2*args.Lp);
  s += 3.8785094488762884e-10 * Math.sin(3*args.L - 2*args.Lp + 3.1415926535897931);
  s += 3.1020245139916544e-10 * Math.sin(args.L + 10*args.Ve - 3*args.EM + 1.2784039166206635);
  s += 2.7272214333578225e-10 * Math.sin(args.D + args.EM - 2*args.Ju + 0.75243227952614578);
  s += 3.0777885935776072e-10 * Math.sin(3*args.L - 10*args.Ve + 3*args.EM + 1.8631956172377608);
  s += 3.5752005394834031e-10 * Math.sin(args.L - 3*args.EM + 6*args.Ma - 3.0721417786592609);
  s += 2.8295017143236856e-10 * Math.sin(args.L + 3*args.EM - 5*args.Ma + 0.47487545020362337);
  s += 3.0156065671729159e-10 * Math.sin(args.L - 23*args.Ve + 24*args.EM + 2.8367583865232251);
  s += 2.9088820866574547e-10 * Math.sin(args.D - args.F + 1.2301499447076016);
  s += 2.6586200642557133e-10 * Math.sin(2*args.D - args.L + 2*args.EM - 3*args.Sa + 0.61515901505167903);
  s += 2.6272507099576358e-10 * Math.sin(2*args.D - args.L + 2*args.EM - 4*args.Ju + 3*args.Sa - 0.69692679548277836);
  s += 2.6640900395191127e-10 * Math.sin(6*args.EM - 10*args.Ma - 0.53739824867761732);
  s += 2.6916037651265231e-10 * Math.sin(2*args.D - 3*args.EM + 5*args.Ma + 2.6549562381837597);
  s += 2.5763639966189839e-10 * Math.sin(2*args.D - 3*args.EM + 2*args.Ju - 2.4727456051175225);
  s += 2.8160334527713916e-10 * Math.sin(5*args.Ve - 7*args.EM - 0.34893741719875188);
  s += 2.9088820866573482e-10 * Math.sin(2*args.D + 4*args.EM + 1.8345457709672659);
  s += 2.6104106443356073e-10 * Math.sin(args.L - args.EM + 3*args.Ju + 2.6227119890914929);
  s += 3.5102960560274581e-10 * Math.sin(6*args.EM - 9*args.Ma - 3.1270853934315825);
  s += 2.9088820866570996e-10 * Math.sin(args.D + args.F + args.L + args.EM - 2.8830551116296528);
  s += 3.0040255886659759e-10 * Math.sin(18*args.Ve - 15*args.EM - 2.9354670093499653);
  s += 2.8912363962910412e-10 * Math.sin(2*args.D - 2*args.L + 2*args.EM - 5*args.Sa + 1.8363812673007922);
  s += 2.8146219913211316e-10 * Math.sin(4*args.EM - 8*args.Ma + args.Ju + 5*args.Sa + 0.30418123923416124);
  s += 2.6042533332318444e-10 * Math.sin(args.L - 4*args.EM + 6*args.Ma + 2.6624108894445726);
  s += 3.3936957677669209e-10 * Math.sin(args.L + args.EM + 1.5980770447340442);
  s += 2.4834809563216205e-10 * Math.sin(2*args.D - args.Sa + 0.61902542067659183);
  s += 2.5710659341812149e-10 * Math.sin(2*args.D - 4*args.EM + 6*args.Ma + 2.6849123030177564);
  s += 2.4240684055476525e-10 * Math.sin(6*args.EM - 2.3360834102874488);
  s += 2.9087979158862743e-10 * Math.sin(2*args.D - args.L - 37*args.EM + 48*args.Ma + 0.19000253802376527);
  s += 3.3936957677667514e-10 * Math.sin(4*args.D - 3*args.Lp + 3.1415926535897931);
  s += 3.3936957677667514e-10 * Math.sin(4*args.D - 3*args.L + args.Lp + 3.1415926535897931);
  s += 3.3936957677667514e-10 * Math.sin(3*args.D - args.L + 3.1415926535897931);
  s += 3.3936957677667514e-10 * Math.sin(2*args.D + 3*args.L + args.Lp);
  s += 3.3936957677667514e-10 * Math.sin(2*args.D + args.L + 2*args.Lp);
  s += 3.3936957677667514e-10 * Math.sin(2*args.D - 2*args.L - 3*args.Lp + 3.1415926535897931);
  s += 3.3936957677667514e-10 * Math.sin(2*args.D - 4*args.L - args.Lp + 3.1415926535897931);
  s += 3.3936957677667514e-10 * Math.sin(2*args.D - 2*args.F + 2*args.L - args.Lp);
  s += 3.3936957677667514e-10 * Math.sin(2*args.D - 2*args.F - 2*args.L - args.Lp);
  s += 3.3936957677667514e-10 * Math.sin(2*args.F - 2*args.L - args.Lp);
  s += 2.5062873375854024e-10 * Math.sin(7*args.EM - 11*args.Ma + 2.6567356566251825);
  s += 2.4200760597022258e-10 * Math.sin(2*args.D + args.Sa + 2.5208447697716947);
  s += 2.5463226460471638e-10 * Math.sin(args.D + args.F - 20*args.Ve + 20*args.EM - 1.9967860335627965);
  s += 2.4673014197162691e-10 * Math.sin(2*args.D - 3*args.L + 2*args.EM - 3*args.Ju + 1.0675103240099204);
  s += 2.4446483958596757e-10 * Math.sin(args.L + 9*args.EM - 17*args.Ma - 2.6047882094391475);
  s += 2.5463529527265775e-10 * Math.sin(2*args.D - args.L - args.EM - args.Ju + 0.40282160112698678);
  s += 2.3674813993706977e-10 * Math.sin(2*args.D - args.L - args.Ve - 2.458152259906484);
  s += 2.4240684055477032e-10 * Math.sin(2*args.L + 4*args.EM - 2.6028463399463231);
  s += 2.3955582260262359e-10 * Math.sin(8*args.EM - 13*args.Ma + 2.1601265163157186);
  s += 2.4199313874285777e-10 * Math.sin(args.L - 9*args.EM + 17*args.Ma - 0.53608927309179555);
  s += 2.396988902996233e-10 * Math.sin(2*args.D - args.EM + 3*args.Ju + 2.581684588717041);
  s += 2.6481698254373585e-10 * Math.sin(5*args.Ve - 6*args.EM - 4*args.Ma + 1.8369544048372497);
  s += 2.3521992090012057e-10 * Math.sin(args.L - 5*args.EM + 9*args.Ma - 2.5844964506649868);
  s += 2.5798603105079142e-10 * Math.sin(2*args.D - 2*args.L + 2*args.EM - 4*args.Ju + 5*args.Sa + 1.2793365325471766);
  s += 2.697147460127321e-10 * Math.sin(2*args.D - 5*args.EM + 8*args.Ma - 3*args.Ju - 1.3552440101983767);
  s += 2.3648740188823938e-10 * Math.sin(2*args.D - args.L + 3*args.EM - 5*args.Ma + 0.48365340466425805);
  s += 2.3381053924526931e-10 * Math.sin(4*args.D - 2*args.L + 2*args.EM - 3*args.Ju + 1.0623044583038443);
  s += 2.2927131903091362e-10 * Math.sin(2*args.D - args.L + 2*args.EM - 3*args.Ma + 0.99569009158537647);
  s += 2.2457894198537828e-10 * Math.sin(args.EM - 5*args.Sa + 0.87709043126623576);
  s += 2.9583007999418916e-10 * Math.sin(2*args.D - 2*args.F - args.L + 23*args.Ve - 22*args.EM - 3.0805827574951077);
  s += 2.2112575209733741e-10 * Math.sin(2*args.D - args.L - 3*args.EM + 2*args.Ju - 2.4749929318213737);
  s += 2.2694580550257512e-10 * Math.sin(2*args.D - args.L - 5*args.EM + 9*args.Ma - 2.6130278107577753);
  s += 2.3965728448682695e-10 * Math.sin(args.L - 4*args.Ve + 5*args.EM + 2.7756185092986305);
  s += 2.9653928545499303e-10 * Math.sin(args.L - 4*args.EM + 7*args.Ma - 3.0994123328601555);
  s += 2.1932540376695305e-10 * Math.sin(2*args.D - args.Ve - 2.4565517509161698);
  s += 2.4033557338836235e-10 * Math.sin(2*args.D - 10*args.EM + 19*args.Ma - 3*args.Sa + 0.34523220793640164);
  s += 2.4031131962080217e-10 * Math.sin(2*args.D + 10*args.EM - 19*args.Ma + 3*args.Sa + 2.7962195089871269);
  s += 3.0092890098030035e-10 * Math.sin(2*args.D - args.L - 4*args.EM + 7*args.Ma - 3.1196562380815549);
  s += 2.2332956624018069e-10 * Math.sin(args.L - args.Ve - 2.5893538118623853);
  s += 2.2069039019973524e-10 * Math.sin(2*args.D - args.L + 2*args.Ve - 4*args.EM + 2.1790513075461178);
  s += 2.2127485147391658e-10 * Math.sin(args.L + 5*args.EM - 9*args.Ma - 0.55864715203312221);
  s += 2.1574099319269647e-10 * Math.sin(args.EM - 2*args.Sa + 0.64815496228458791);
  s += 2.1035137821181346e-10 * Math.sin(2*args.Ve - args.EM + 2.4101936211635056);
  s += 2.4240684055476613e-10 * Math.sin(3*args.D - args.F + args.EM - 2.8830551116296612);
  s += 2.2054626503012045e-10 * Math.sin(2*args.L - 26*args.Ve + 29*args.EM - 1.1136135617026319);
  s += 2.7124933328029348e-10 * Math.sin(args.D - args.F + args.EM + args.Ju - 3.0584090073627919);
  s += 2.1529327815735737e-10 * Math.sin(args.L + args.EM - 3*args.Ju + 0.50541812694165533);
  s += 2.9088820866572159e-10 * Math.sin(6*args.D - args.Lp + 3.1415926535897931);
  s += 2.9088820866572159e-10 * Math.sin(4*args.D + 2*args.F - args.L - args.Lp);
  s += 2.9088820866572159e-10 * Math.sin(4*args.D - 2*args.L - 3*args.Lp + 3.1415926535897931);
  s += 2.9088820866572159e-10 * Math.sin(4*args.D - 2*args.F - args.L - args.Lp + 3.1415926535897931);
  s += 2.9088820866572159e-10 * Math.sin(3*args.D + args.L + args.Lp + 3.1415926535897931);
  s += 2.9088820866572159e-10 * Math.sin(3*args.D - args.L - 2*args.Lp);
  s += 2.9088820866572159e-10 * Math.sin(args.D - 3*args.L + args.Lp + 3.1415926535897931);
  s += 2.9088820866572159e-10 * Math.sin(2*args.F - 2*args.L + args.Lp + 3.1415926535897931);
  s += 2.7404934015646236e-10 * Math.sin(args.L + 4*args.EM - 7*args.Ma - 0.043804833203118496);
  s += 2.119739608081582e-10 * Math.sin(args.Ve + args.EM + 2.0494036894855574);
  s += 2.1028860498948756e-10 * Math.sin(2*args.Ma + 2.0711542387529192);
  s += 2.1018610568382315e-10 * Math.sin(args.L - 6*args.EM + 11*args.Ma - 2.0711964557360458);
  s += 2.2374998439592273e-10 * Math.sin(args.L - 2*args.EM + 4*args.Ju - 1.2375313347168835);
  s += 2.0791460910590349e-10 * Math.sin(args.EM - 4*args.Ju + 0.52488026131088039);
  s += 2.3852342479695965e-10 * Math.sin(args.D - args.F + args.L - 18*args.Ve + 17*args.EM + 2.928356643611377);
  s += 2.0753744720652784e-10 * Math.sin(args.L + 4*args.EM - 6*args.Ma + 0.48971752095089932);
  s += 2.0518505864400619e-10 * Math.sin(2*args.D - args.L + 8*args.EM - 12*args.Ma - 0.5276403443121479);
  s += 1.9880548669435467e-10 * Math.sin(2*args.Ju - 3*args.Sa + 0.68792473663543408);
  s += 2.1671971750826605e-10 * Math.sin(2*args.D - args.EM - args.Ju + 0.36442563112942122);
  s += 2.2391578107324571e-10 * Math.sin(2*args.EM - 5*args.Sa - 1.2982764255398669);
  s += 1.9392547244380168e-10 * Math.sin(2*args.D - 2*args.L - args.EM + 0.77352468849617784);
  s += 2.437341738831721e-10 * Math.sin(2*args.D - args.L + 2*args.EM - args.Ju + 3.0072559129342604);
  s += 2.4788614109060897e-10 * Math.sin(3*args.D - args.F - args.L + args.EM - 0.11099549440797898);
  s += 1.9392547244380522e-10 * Math.sin(args.L - 2*args.EM + 0.85034744991764422);
  s += 2.0101391357582769e-10 * Math.sin(args.L - 4*args.Ve + 6*args.EM - 0.50971358673463329);
  s += 2.015713119422236e-10 * Math.sin(args.L + 6*args.EM - 11*args.Ma - 1.071855833937154);
  s += 2.4240684055476675e-10 * Math.sin(2*args.D - args.L + 3*args.EM - 3.0138212878414885);
  s += 2.1481802563740925e-10 * Math.sin(args.D - args.F + args.EM + args.Sa + 2.8233944581873622);
  s += 2.6937756081980262e-10 * Math.sin(2*args.D - args.L + 3*args.EM - 6*args.Ma + 0.0065431491693661876);
  s += 2.0660136671643345e-10 * Math.sin(4*args.EM - 8*args.Ma + 5*args.Ju - 5*args.Sa + 2.7381733123743284);
  s += 1.9392547244380744e-10 * Math.sin(args.D + args.F - args.EM - 0.94874754234881697);
  s += 1.9483929238554183e-10 * Math.sin(2*args.D - args.L + 9*args.EM - 17*args.Ma - 2.5470392659317032);
  s += 2.6596276089427279e-10 * Math.sin(args.L - 7*args.EM + 13*args.Ma - 1.558836530933807);
  s += 1.9150318032210918e-10 * Math.sin(4*args.Ju - 10*args.Sa - 2.2042229459808169);
  s += 2.151886715412365e-10 * Math.sin(2*args.EM - 4*args.Ju + 5*args.Sa - 1.8604361182514335);
  s += 1.9392547244380449e-10 * Math.sin(2*args.D + 6*args.EM - 2.1306928893798096);
  s += 1.9257560504881525e-10 * Math.sin(2*args.D - args.L - 6*args.EM + 11*args.Ma - 2.1071189912677166);
  s += 2.5961316902945958e-10 * Math.sin(args.L + 7*args.EM - 13*args.Ma - 1.5839133918576644);
  s += 2.0629412677345098e-10 * Math.sin(args.D + args.L + 3*args.Ve - 4*args.EM + 0.32353641008605749);
  s += 2.0551454559156189e-10 * Math.sin(6*args.Ve - 7*args.EM + 0.33045861109863761);
  s += 1.8478672640435641e-10 * Math.sin(2*args.D - 12*args.Ve + 8*args.EM - 2.4507749077170486);
  s += 1.914110002643169e-10 * Math.sin(26*args.Ve - 29*args.EM - 2.0275567144371793);
  s += 1.8123144122926355e-10 * Math.sin(3*args.EM - 2*args.Ju - 0.67787056426259351);
  s += 1.9392547244382344e-10 * Math.sin(args.D - args.F - 2*args.EM - 1.1648543848637156);
  s += 1.8328296168612642e-10 * Math.sin(2*args.D - args.L - 9*args.EM + 17*args.Ma - 0.59169871759341808);
  s += 2.4191191351321486e-10 * Math.sin(2*args.D - 3*args.L - 3.0894244743575521);
  s += 1.8095146080277105e-10 * Math.sin(2*args.D + 2*args.Ve - 4*args.EM + 2.1747358321220815);
  s += 1.7974183883375668e-10 * Math.sin(3*args.EM - 6*args.Ma + 2*args.Ju + 0.95463718024495792);
  s += 1.8819949371461324e-10 * Math.sin(4*args.D - args.L - 18*args.Ve + 16*args.EM + 1.1393917336426136);
  s += 1.9470496114232203e-10 * Math.sin(args.D - 2*args.L + 3*args.Ve - 4*args.EM + 0.32676462685025548);
  s += 1.9392547244380483e-10 * Math.sin(4*args.D + 5*args.EM + 1.8852191368709237);
  s += 2.4240684055476799e-10 * Math.sin(4*args.D - 2*args.F - args.L + args.Lp);
  s += 2.4240684055476799e-10 * Math.sin(3*args.D - 2*args.F - args.Lp);
  s += 2.4240684055476799e-10 * Math.sin(2*args.D + 2*args.F - 2*args.L - args.Lp);
  s += 2.4240684055476799e-10 * Math.sin(2*args.D - 3*args.L + 2*args.Lp);
  s += 2.4240684055476799e-10 * Math.sin(2*args.D - 4*args.L + args.Lp + 3.1415926535897931);
  s += 2.4240684055476799e-10 * Math.sin(2*args.D - 2*args.F + args.L + 3.1415926535897931);
  s += 1.7980064797723914e-10 * Math.sin(2*args.Ve + 2.0337558271333798);
  s += 2.0126976284941124e-10 * Math.sin(2*args.D - args.L - 4*args.Ve + 5*args.EM - 0.22050694547870525);
  s += 1.9006482837791869e-10 * Math.sin(2*args.D - args.L + 7*args.Ve - 8*args.EM + 0.31614491074562495);
  s += 1.7232785146032078e-10 * Math.sin(2*args.D - args.L + 3*args.EM - 4*args.Ma + 0.98409486049289308);
  s += 1.7571602809221792e-10 * Math.sin(args.L + 2*args.EM - 3*args.Ju - 2.0729574766082228);
  s += 2.3057283094409523e-10 * Math.sin(2*args.D - args.L - 7*args.EM + 13*args.Ma - 1.6017505858688896);
  s += 1.939254724438223e-10 * Math.sin(args.D - args.F + 2*args.L + args.EM - 2.8830551116296741);
  s += 1.939254724438223e-10 * Math.sin(args.D - args.F - 2*args.L + args.EM - 2.8830551116296741);
  s += 1.8650380963888287e-10 * Math.sin(2*args.D - args.L - 9*args.EM + 15*args.Ma + 1.2443810984445194);
  s += 1.7827807304266217e-10 * Math.sin(args.D + args.F - 2*args.L - 20*args.Ve + 20*args.EM - 1.9968182452136467);
  s += 1.7694794328268704e-10 * Math.sin(4*args.D - 3*args.L + 18*args.Ve - 16*args.EM + 2.0022100193381238);
  s += 2.1839831455495882e-10 * Math.sin(8*args.EM - 16*args.Ma + 6*args.Ju + 1.6477461390378145);
  s += 1.7222249176515308e-10 * Math.sin(2*args.D + 6*args.EM - 8*args.Ma + 0.49505998648150362);
  s += 1.8372471343533648e-10 * Math.sin(2*args.D + 4*args.Ve - 5*args.EM - 2.8204360032072651);
  s += 1.7034172729030632e-10 * Math.sin(args.L + 4*args.Ve - 6*args.EM - 2.6305669229864947);
  s += 1.8907011204817599e-10 * Math.sin(args.L - 2*args.EM + 5*args.Sa + 1.3074202477414862);
  s += 1.9725433927887642e-10 * Math.sin(2*args.L - 8*args.Ve + 13*args.EM + 1.3859968302403198);
  s += 1.9710064848607465e-10 * Math.sin(2*args.L + 8*args.Ve - 13*args.EM + 1.7554108949089662);
  s += 1.6522720345475361e-10 * Math.sin(args.L - args.Sa + 0.59714005164064876);
  s += 1.6507041657802628e-10 * Math.sin(args.L + args.Sa + 2.5434371433460758);
  s += 1.7067293145750846e-10 * Math.sin(args.EM - 3*args.Ma + 0.4506104609329929);
  s += 1.8351035662714923e-10 * Math.sin(2*args.D + 3*args.Ve - 4*args.EM + 0.27222468854704196);
  s += 1.6337377011820689e-10 * Math.sin(2*args.D - args.L + 5*args.EM - 9*args.Ma - 0.53255211588236995);
  s += 1.6771984530522719e-10 * Math.sin(2*args.D + 3*args.L - 18*args.Ve + 16*args.EM + 1.1393731624043113);
  s += 1.7664412650113317e-10 * Math.sin(args.L - 2*args.EM + 4*args.Ju - 5*args.Sa + 1.8628316437871768);
  s += 1.6234638838946499e-10 * Math.sin(args.D + args.F - args.L - 12*args.Ve + 7*args.EM - 1.0958091209362428);
  s += 1.6839467497685426e-10 * Math.sin(args.L - 2*args.EM + args.Ju + 5*args.Sa - 1.9454084294329499);
  s += 1.5341590505209874e-10 * Math.sin(args.Ju - 5*args.Sa - 0.83226115694422298);
  s += 1.5780844229346573e-10 * Math.sin(6*args.EM - 8*args.Ma - 2.5977260698142928);
  s += 1.9392547244380325e-10 * Math.sin(2*args.D - 2*args.EM + 1.696214465112734);
  s += 1.8174410259334266e-10 * Math.sin(2*args.D - 4*args.Ve + 5*args.EM - 0.21681094437109208);
  s += 1.623308251595452e-10 * Math.sin(4*args.D + args.L - 18*args.Ve + 16*args.EM + 1.1393771115206262);
  s += 1.5204515732074603e-10 * Math.sin(args.D - args.F - 3*args.Ve + 6*args.EM + 0.84715581317977717);
  s += 1.6172935044426647e-10 * Math.sin(2*args.D + args.L + 18*args.Ve - 16*args.EM + 2.0021402009926539);
  s += 1.6975143823302249e-10 * Math.sin(2*args.L - 2*args.Ve + 3*args.EM + 2.8353009278811561);
  s += 1.5569221931141236e-10 * Math.sin(7*args.EM - 12*args.Ma - 1.045638562536134);
  s += 1.5997728728991116e-10 * Math.sin(4*args.D - args.L + 18*args.Ve - 16*args.EM + 2.0021731033990515);
  s += 1.6685026715476782e-10 * Math.sin(2*args.D - 20*args.Ve + 21*args.EM + 2.8230019024833695);
  s += 1.5225023908671193e-10 * Math.sin(2*args.D - args.L + 6*args.EM - 11*args.Ma - 1.0384892999681874);
  s += 2.0275382931097956e-10 * Math.sin(2*args.D - 4*args.EM + 7*args.Ma - 3.1194716225296433);
  s += 1.5116225690531863e-10 * Math.sin(2*args.D - 5*args.EM + 9*args.Ma - 2.611206949091526);
  s += 2.0077189296547562e-10 * Math.sin(2*args.D - args.L + 7*args.EM - 13*args.Ma - 1.5433763926773261);
  s += 1.9449918043384048e-10 * Math.sin(args.F - 23*args.Ve + 24*args.EM - 0.062013279144824518);
  s += 1.6397192181404829e-10 * Math.sin(args.L + 8*args.EM - 16*args.Ma + 6*args.Ju - 1.2618847215951932);
  s += 1.6383351315119248e-10 * Math.sin(args.L - 8*args.EM + 16*args.Ma - 6*args.Ju - 1.8797638540561377);
  s += 1.6392930967176685e-10 * Math.sin(2*args.D + args.L - 2*args.Ve + 3*args.EM + 2.8339224496706219);
  s += 1.4544410433285322e-10 * Math.sin(2*args.D + 3*args.EM + 0.80228579470688322);
  s += 1.4551632441985907e-10 * Math.sin(args.EM - args.Ju + 0.82532809802688201);
  s += 1.5982273213588711e-10 * Math.sin(2*args.D - 9*args.EM + 15*args.Ma + 1.2139217848049553);
  s += 1.9821199967180368e-10 * Math.sin(2*args.D + 6*args.Ve - 8*args.EM + 0.037705057307348376);
  s += 1.4544410433286092e-10 * Math.sin(args.D - args.F + 2*args.EM - 0.7380845563037034);
  s += 1.7104580928438441e-10 * Math.sin(2*args.D - args.L + 8*args.Ve - 14*args.EM + 2.9149635468985022);
  s += 1.4544410433283957e-10 * Math.sin(2*args.D + 2*args.L - 2*args.EM + 2.2686684971328623);
  s += 1.4529129584330924e-10 * Math.sin(args.L - 2*args.EM + 5*args.Ju - 5*args.Sa - 2.2621604266544955);
  s += 1.7287197585507002e-10 * Math.sin(args.D - args.F + 2*args.Ve - args.EM - 2.938794363739754);
  s += 1.4406273222208263e-10 * Math.sin(args.EM - 3*args.Sa + 2.3733396632133816);
  s += 1.5294092276254854e-10 * Math.sin(2*args.D - args.L + 4*args.EM - 6*args.Ma + 0.43696415384955872);
  s += 1.4544410433286565e-10 * Math.sin(2*args.D - args.L + 6*args.EM - 0.95899471945322612);
  s += 1.9749724264898747e-10 * Math.sin(2*args.D - args.L + 4*args.EM - 7*args.Ma - 0.025155196027936852);
  s += 1.9788234993912203e-10 * Math.sin(2*args.D - args.L - 3*args.EM + 6*args.Ma - 3.1222709701238371);
  s += 1.454441043328663e-10 * Math.sin(2*args.D + 2*args.L - args.EM - 2.1478510467232956);
  s += 1.6144120545861985e-10 * Math.sin(2*args.F + args.L - 10*args.Ve + 3*args.EM - 1.2784262507910804);
  s += 1.6144120545861985e-10 * Math.sin(2*args.F - args.L + 10*args.Ve - 3*args.EM - 1.8631664027987129);
  s += 1.4766175206946083e-10 * Math.sin(5*args.EM - 10*args.Ma - 1.0651999995105612);
  s += 1.4963327173256729e-10 * Math.sin(3*args.Ve - args.EM + 2.0249300484610604);
  s += 1.4247161898461355e-10 * Math.sin(2*args.D - args.L - 2*args.Ju - 2.4791130580487275);
  s += 1.4243931679824141e-10 * Math.sin(2*args.D + args.L - 18*args.Ve + 17*args.EM + 2.485185972146859);
  s += 1.7066747370057659e-10 * Math.sin(args.D - args.F + 2*args.Ve - 3*args.EM + 2.9527467426774083);
  s += 1.5924845420629594e-10 * Math.sin(2*args.L + 2*args.Ve - 3*args.EM + 0.30357100459516817);
  s += 1.45444104332855e-10 * Math.sin(args.L + 3*args.EM + 1.0380865834352067);
  s += 1.4610660417313974e-10 * Math.sin(2*args.D - 2*args.F + 9*args.EM - 13*args.Ma + 2.6295507157633597);
  s += 1.4544410433286997e-10 * Math.sin(2*args.D - args.L - 2*args.EM - 2.6460746548596212);
  s += 1.4393992066189959e-10 * Math.sin(args.L - args.EM - args.Ju + 0.51835852784067749);
  s += 1.3949991459587245e-10 * Math.sin(args.L - 15*args.Ve + 11*args.EM - 2.4592166369798254);
  s += 1.6338461291857718e-10 * Math.sin(5*args.Ve - 6*args.EM + 0.22616456549430097);
  s += 1.8797946187360439e-10 * Math.sin(args.D - args.F + 5*args.Ve - 7*args.EM + 0.039166788230948865);
  s += 1.4544410433283893e-10 * Math.sin(2*args.D - args.L + 5*args.EM + 2.0185680513098925);
  s += 1.9392547244381442e-10 * Math.sin(6*args.D - args.L - 2*args.Lp + 3.1415926535897931);
  s += 1.9392547244381442e-10 * Math.sin(6*args.D - 2*args.L - 2*args.Lp + 3.1415926535897931);
  s += 1.9392547244381442e-10 * Math.sin(4*args.D + 2*args.F - 2*args.L - args.Lp);
  s += 1.9392547244381442e-10 * Math.sin(4*args.D + args.L);
  s += 1.9392547244381442e-10 * Math.sin(3*args.D + 3.1415926535897931);
  s += 1.9392547244381442e-10 * Math.sin(2*args.D + 2*args.F + args.L + args.Lp + 3.1415926535897931);
  s += 1.9392547244381442e-10 * Math.sin(2*args.D - args.F + args.zeta + 3.1415926535897931);
  s += 1.9392547244381442e-10 * Math.sin(args.D + 2*args.L - args.Lp);
  s += 1.9392547244381442e-10 * Math.sin(args.D + args.L + 2*args.Lp);
  s += 1.9392547244381442e-10 * Math.sin(args.D - args.L);
  s += 1.9392547244381442e-10 * Math.sin(2*args.F - 2*args.zeta + 3.1415926535897931);
  s += 1.9392547244381442e-10 * Math.sin(3*args.L);
  s += 1.4304345094200467e-10 * Math.sin(2*args.D + 3*args.EM - 5*args.Ma + 0.47978612951469779);
  s += 1.5161150457579967e-10 * Math.sin(2*args.D - 2*args.L + 4*args.Ve - 5*args.EM - 2.8182747361714555);
  s += 1.3992802725625472e-10 * Math.sin(2*args.D - args.L + 3*args.EM - 4*args.Ju - 2.093702700206669);
  s += 1.517053993843732e-10 * Math.sin(args.L - 5*args.Ve + 6*args.EM - 0.31211894900456844);
  s += 1.9000768325066084e-10 * Math.sin(8*args.Ve - 14*args.EM - 3.1375256461531835);
  s += 1.3563937819780734e-10 * Math.sin(2*args.D + args.L - 15*args.Ve + 9*args.EM + 4*args.Ma - 0.66880139804098215);
  s += 1.3563937819780734e-10 * Math.sin(2*args.D - args.L + 15*args.Ve - 9*args.EM - 4*args.Ma - 2.472791255548811);
  s += 1.4544410433285389e-10 * Math.sin(args.L - 3*args.EM + 2.7584972461003128);
  s += 1.3618404360470708e-10 * Math.sin(2*args.D + 2*args.EM - 3*args.Ma + 0.99523766455455043);
  s += 1.4149392412882618e-10 * Math.sin(3*args.D - 3*args.L + 3*args.EM - 4*args.Ju + 1.1434713376175862);
  s += 1.4024500502596837e-10 * Math.sin(7*args.EM - 13*args.Ma - args.Ju - 2.7163544532693309);
  s += 1.3648241241079095e-10 * Math.sin(2*args.D - args.L + 7*args.EM - 9*args.Ma - 2.6453899631226574);
  s += 1.309566633864251e-10 * Math.sin(2*args.D - 15*args.Ve + 9*args.EM + 4*args.Ma - 0.66904548053356028);
  s += 1.5254666927861368e-10 * Math.sin(args.Ve - args.EM - 0.2350499099236994);
  s += 1.559826066129504e-10 * Math.sin(args.L + 2*args.Ju - 1.7706096619231642);
  s += 1.4505606204852756e-10 * Math.sin(7*args.Ve - 8*args.EM + 0.32170546535307454);
  s += 1.4341197162791113e-10 * Math.sin(2*args.D - 2*args.L + 2*args.EM - 4*args.Ju + 1.2300693073855404);
  s += 1.2940765382048464e-10 * Math.sin(args.D - args.L + args.EM - 2*args.Ju + 0.75270343453972399);
  s += 1.3099272285277535e-10 * Math.sin(2*args.D - args.L - 2*args.Ma + 2.5156086174517256);
  s += 1.3015584966548246e-10 * Math.sin(2*args.D - 2*args.L + 15*args.Ve - 9*args.EM - 4*args.Ma - 2.4725144401444492);
  s += 1.3673907002169726e-10 * Math.sin(2*args.Ju - 6*args.Sa + 3*args.Ur + 2.012353524864201);
  s += 1.8151578082354337e-10 * Math.sin(2*args.D + 3*args.EM - 6*args.Ma + 0.00088697046073387493);
  s += 1.3894466618819949e-10 * Math.sin(args.D + args.F - args.L + args.EM - 2*args.Ju - 0.39320453008317113);
  s += 1.3108594311786765e-10 * Math.sin(10*args.EM - 17*args.Ma - 2.1324470414817798);
  s += 1.4222240308104085e-10 * Math.sin(2*args.D + 5*args.Ve - 6*args.EM - 2.8245385136452503);
  s += 1.7221626160359429e-10 * Math.sin(2*args.D - args.L - 5*args.EM + 8*args.Ma - 3.1046748951048975);
  s += 1.4544410433285301e-10 * Math.sin(2*args.D - args.EM + 2.8801999275063483);
  s += 1.3191931068683903e-10 * Math.sin(6*args.Ve - 8*args.EM - 2.6746667407351712);
  s += 1.2641489078832414e-10 * Math.sin(2*args.D - args.L - 3*args.EM + 2*args.Ma + 0.63506319292396596);
  s += 1.2749331321041832e-10 * Math.sin(2*args.D + 9*args.EM - 17*args.Ma - 2.5577856148438061);
  s += 1.4438897743091398e-10 * Math.sin(args.EM - 2*args.Ju + 5*args.Sa + 1.8288267051299878);
  s += 1.5735771615108845e-10 * Math.sin(2*args.D - args.L + args.Ve - 2*args.EM - 0.12746013867427658);
  s += 1.3803891769071712e-10 * Math.sin(2*args.D - args.L - 2*args.EM + 4*args.Ju - 1.2352005330204145);
  s += 1.5452432124449381e-10 * Math.sin(2*args.D + 8*args.Ve - 14*args.EM + 2.998661654226102);
  s += 1.3153754288278996e-10 * Math.sin(4*args.D - args.L - 3*args.Me + args.EM + 1.133678223995755);
  s += 1.3560952550663392e-10 * Math.sin(2*args.D + args.L - 3*args.Ve + 4*args.EM + 2.780878588466503);
  s += 1.3493509681106862e-10 * Math.sin(args.D + args.L - 34*args.EM + 41*args.Ma - 2*args.Ju - 1.9421103474722226);
  s += 1.3493509681106862e-10 * Math.sin(args.D - args.L - 34*args.EM + 41*args.Ma - 2*args.Ju - 1.9421103474722226);
  s += 1.2478101712259798e-10 * Math.sin(2*args.D - 3*args.EM + 2*args.Ma + 0.62959660558766373);
  s += 1.4544410433286948e-10 * Math.sin(args.L + 2*args.EM + 1.3450526488151775);
  s += 1.2702080541371711e-10 * Math.sin(2*args.D - 6*args.EM + 11*args.Ma - 2.1032285616784838);
  s += 1.2451219700288884e-10 * Math.sin(args.L - 2*args.Ve + args.EM + 0.62324376998415987);
  s += 1.4188259217596246e-10 * Math.sin(2*args.D - args.L - 4*args.Ve + 6*args.EM - 0.25974882751410328);
  s += 1.2715836179947449e-10 * Math.sin(2*args.D - args.L + 3*args.Ve - 3*args.EM - 0.48819176684008997);
  s += 1.2235128359594663e-10 * Math.sin(2*args.D + 18*args.Ve - 17*args.EM - 2.4740539682425311);
  s += 1.4567111148931624e-10 * Math.sin(args.D + args.F - args.L - 20*args.Ve + 12*args.EM + 15*args.Ma + 1.7694718782362844);
  s += 1.2407439441255823e-10 * Math.sin(2*args.D - args.L + 4*args.EM - 5*args.Ma + 1.0038976004417315);
  s += 1.2292940709491115e-10 * Math.sin(2*args.D - args.L - 5*args.EM + 7*args.Ma - 0.59446066764933458);
  s += 1.2179554506440882e-10 * Math.sin(2*args.D - 8*args.Ve - 12*args.EM + 2.1715028285616187);
  s += 1.4544410433285164e-10 * Math.sin(args.L + 5*args.EM - 1.3919440607626232);
  s += 1.3332436854516819e-10 * Math.sin(args.Ur - 2*args.Ne - 2.8238043832482411);
  s += 1.2403622416300078e-10 * Math.sin(2*args.D - args.L + 5*args.EM - 7*args.Ma + 0.48674529699938496);
  s += 1.5823292442943949e-10 * Math.sin(2*args.D - 2*args.L - 2*args.Ju + 5*args.Sa - 1.5118742357730575);
  s += 1.5832921721572482e-10 * Math.sin(2*args.D - 2*args.L + 2*args.Ju - 5*args.Sa - 1.6286483209730973);
  s += 1.1942664177427172e-10 * Math.sin(2*args.D - 2*args.L - 4*args.EM + 8*args.Ma - 3*args.Ju - 0.93458116941466696);
  s += 1.4059084607240745e-10 * Math.sin(2*args.D - args.L + 18*args.Ve - 15*args.EM - 2.9359706451091192);
  s += 1.249553041759885e-10 * Math.sin(args.L + 3*args.Me - args.EM + 2.0078834647801207);
  s += 1.2996487560348832e-10 * Math.sin(2*args.D - 2*args.EM + 4*args.Ju - 1.2353656100239407);
  s += 1.1866905768010343e-10 * Math.sin(2*args.D - 2*args.Ma + 2.5356932513668951);
  s += 1.1815800633215505e-10 * Math.sin(2*args.D - 2*args.L + 4*args.EM - 8*args.Ma + 3*args.Ju - 2.1980337240026682);
  s += 1.2565371109146123e-10 * Math.sin(args.L - 21*args.Ve + 21*args.EM - 1.9702568438792689);
  s += 1.1894932074750328e-10 * Math.sin(2*args.D - 9*args.EM + 17*args.Ma - 0.57737494880728157);
  s += 1.1774142025086249e-10 * Math.sin(3*args.EM - 2*args.Ma + 2.5203391872684673);
  s += 1.2274352589971654e-10 * Math.sin(4*args.Ve - 2*args.EM + 2.0188201347384154);
  s += 1.2344611169787474e-10 * Math.sin(2*args.D - 2*args.L - 15*args.Ve + 13*args.EM + 1.1391583563948871);
  s += 1.1607040869254536e-10 * Math.sin(2*args.D - args.L - args.EM + 2*args.Ju - 5*args.Sa + 0.68332099884064768);
  s += 1.1538810547928975e-10 * Math.sin(2*args.D + args.L - args.EM + 2*args.Ju + 2.3738849114245166);
  s += 1.2101701029464903e-10 * Math.sin(4*args.D - 2*args.L - 3*args.Me + args.EM + 1.1328228670059595);
  s += 1.1745128381766236e-10 * Math.sin(args.L + 4*args.EM - 8*args.Ma + args.Ju + 5*args.Sa - 2.6185287018506527);
  s += 1.1745128381766236e-10 * Math.sin(args.L - 4*args.EM + 8*args.Ma - args.Ju - 5*args.Sa - 0.52306395173914055);
  s += 1.1427032561635573e-10 * Math.sin(2*args.L + args.EM - 2*args.Ma + 0.93337312645511117);
  s += 1.4183741959982218e-10 * Math.sin(args.L + 2*args.Ve - 4*args.EM + 1.703832634881949);
  s += 1.4544410433284487e-10 * Math.sin(2*args.D - 3*args.L + 2*args.EM - 0.10105159663075505);
  s += 1.4904376895251974e-10 * Math.sin(2*args.D + args.L - 8*args.Ve + 13*args.EM + 1.500962376797192);
  s += 1.2185307382133724e-10 * Math.sin(args.L - 20*args.Ve + 19*args.EM - 0.38056798607739317);
  s += 1.1299430767132656e-10 * Math.sin(2*args.L - args.EM + 2*args.Ma + 2.2096739286708873);
  s += 1.2248385090962923e-10 * Math.sin(args.D - 23*args.Ve + 25*args.EM + 2*args.Ju - 5*args.Sa + 1.9337005052266711);
  s += 1.478314037501098e-10 * Math.sin(2*args.D + args.L + 8*args.Ve - 13*args.EM + 1.641577319690249);
  s += 1.3392486565916562e-10 * Math.sin(args.D - args.F + args.Ve - 2*args.EM + 2.9446751390838655);
  s += 1.3256650930276859e-10 * Math.sin(args.L + 5*args.EM - 8*args.Ma + 3*args.Ju + 1.3707941197618361);
  s += 1.2777775063898162e-10 * Math.sin(args.D - args.F + args.EM - 2*args.Sa + 0.2582962426731133);
  s += 1.444644408458624e-10 * Math.sin(args.L - 5*args.EM + 8*args.Ma - 3*args.Ju - 1.653661436079201);
  s += 1.1732906795602677e-10 * Math.sin(2*args.F - 18*args.Ve + 16*args.EM - 2.002174383853264);
  s += 1.3268079456403107e-10 * Math.sin(args.D - args.F - args.L + 21*args.Ve - 20*args.EM - 2.9534437831277289);
  s += 1.5072358677377309e-10 * Math.sin(2*args.D - 7*args.EM + 13*args.Ma - 1.5955876318385784);
  s += 1.0935874930354534e-10 * Math.sin(2*args.D - args.L - 2*args.Ve + 2*args.EM - 2.4566004213863231);
  s += 1.1427563278552716e-10 * Math.sin(args.D - 18*args.Ve + 17*args.EM + 2.6678472843656564);
  s += 1.0873347528305238e-10 * Math.sin(2*args.Sa - 2.3711232261259676);
  s += 1.3096859996867101e-10 * Math.sin(args.D - args.F + 3*args.Ve - 4*args.EM + 2.9545681149692991);
  s += 1.3156788435925406e-10 * Math.sin(args.D - args.F + 5*args.Ve - 6*args.EM - 0.17704451603436297);
  s += 1.0713192671680209e-10 * Math.sin(2*args.D - 2*args.Ve + 2*args.EM - 2.3365431169222775);
  s += 1.1913617511487686e-10 * Math.sin(2*args.D - args.L - args.EM - args.Ju + 5*args.Sa + 1.2391153206450998);
  s += 1.2695297431690446e-10 * Math.sin(2*args.D + 2*args.L - 18*args.Ve + 15*args.EM + 2.9359697963049474);
  s += 1.072952841542747e-10 * Math.sin(2*args.D - 5*args.EM + 7*args.Ma - 0.60779433626414026);
  s += 1.4544410433287773e-10 * Math.sin(2*args.D - 4*args.EM - 1.59700680883672);
  s += 1.1820923530973553e-10 * Math.sin(2*args.D - args.L + 8*args.Ve - 9*args.EM + 0.31543410743825812);
  s += 1.1110645664582419e-10 * Math.sin(2*args.F - 2*args.L + 18*args.Ve - 16*args.EM - 1.1393834808610255);
  s += 1.0662769273730031e-10 * Math.sin(2*args.L - args.Ju - 2.1416162932310256);
  s += 1.2000823626854899e-10 * Math.sin(args.D + args.L - 41*args.Ve + 41*args.EM - 1.8348469258574789);
  s += 1.3141644381456907e-10 * Math.sin(3*args.L + 4*args.EM - 8*args.Ma + 3*args.Ju + 0.12156341562460604);
  s += 1.3136619668810649e-10 * Math.sin(3*args.L - 4*args.EM + 8*args.Ma - 3*args.Ju + 3.020066659564081);
  s += 1.081695080525208e-10 * Math.sin(5*args.Ve - 2*args.EM - 12*args.Ma + 3*args.Ju - 2.6560463304470243);
  s += 1.4544410433286079e-10 * Math.sin(6*args.D - args.L + args.Lp);
  s += 1.4544410433286079e-10 * Math.sin(6*args.D - 2*args.L + args.Lp);
  s += 1.4544410433286079e-10 * Math.sin(4*args.D + 2*args.F - args.Lp);
  s += 1.4544410433286079e-10 * Math.sin(4*args.D - 3*args.L - 2*args.Lp + 3.1415926535897931);
  s += 1.4544410433286079e-10 * Math.sin(3*args.D - 2*args.Lp + 3.1415926535897931);
  s += 1.4544410433286079e-10 * Math.sin(2*args.D + 2*args.F + 2*args.L - args.Lp);
  s += 1.4544410433286079e-10 * Math.sin(2*args.D + 2*args.F + 3.1415926535897931);
  s += 1.4544410433286079e-10 * Math.sin(2*args.D + 2*args.F - args.L + 2*args.Lp + 3.1415926535897931);
  s += 1.4544410433286079e-10 * Math.sin(2*args.D + args.F - args.zeta);
  s += 1.4544410433286079e-10 * Math.sin(2*args.D + 3*args.L - 2*args.Lp + 3.1415926535897931);
  s += 1.4544410433286079e-10 * Math.sin(2*args.D - args.F - args.L + args.zeta + 3.1415926535897931);
  s += 1.4544410433286079e-10 * Math.sin(2*args.D - 2*args.F - args.L + 2*args.Lp);
  s += 1.4544410433286079e-10 * Math.sin(args.D + args.L + 3.1415926535897931);
  s += 1.4544410433286079e-10 * Math.sin(args.D - 2*args.F - args.Lp);
  s += 1.4544410433286079e-10 * Math.sin(2*args.F + 2*args.Lp + 3.1415926535897931);
  s += 1.4544410433286079e-10 * Math.sin(2*args.L - 3*args.Lp + 3.1415926535897931);
  s += 1.4152465824725727e-10 * Math.sin(2*args.EM - 5*args.Ma + 0.015871069973719617);
  s += 1.1494160132114901e-10 * Math.sin(2*args.D + 10*args.Ve - 3*args.EM + 1.278419036380166);
  s += 1.1457380514903408e-10 * Math.sin(2*args.D + 2*args.L - 10*args.Ve + 3*args.EM + 1.863176373503294);
  s += 1.0752515656241698e-10 * Math.sin(2*args.D - args.L - 4*args.EM + 5*args.Ma - 1.1448748497860299);
  s += 1.0307285763368979e-10 * Math.sin(2*args.L + args.Ju - 1.0065633893331909);
  s += 1.0060642454353549e-10 * Math.sin(2*args.D - 3*args.Ve + 3*args.EM - 2.3896890231659529);
  s += 1.3149742757039563e-10 * Math.sin(args.D + 4*args.EM - 8*args.Ma + 3*args.Ju + 3.0655756291562377);
  s += 1.0323427436625391e-10 * Math.sin(2*args.D - args.L + 9*args.EM - 13*args.Ma + 2.6195768982426548);
  s += 1.3125238766321519e-10 * Math.sin(args.D - 4*args.EM + 8*args.Ma - 3*args.Ju + 0.075953317178441906);
  s += 1.0306656216907654e-10 * Math.sin(args.Ve - 8*args.EM + 12*args.Ma + 1.0617567715052043);
  s += 1.2043001934963643e-10 * Math.sin(args.D - args.F + args.EM - args.Ju + 2.9627511077761954);
  s += 1.0169987326418278e-10 * Math.sin(2*args.D + 5*args.EM - 9*args.Ma - 0.54246438395582819);
  s += 9.9031395291412399e-11 * Math.sin(2*args.D - args.L - 3*args.EM + 8*args.Ma - 3*args.Ju - 2.4725565277228241);
  s += 9.9754016408081228e-11 * Math.sin(2*args.Ve - 2*args.EM - 0.95476683791518091);
  s += 1.3482311045396988e-10 * Math.sin(args.L - 5*args.EM + 8*args.Ma - 3.1134841133912432);
  s += 1.3399913923799227e-10 * Math.sin(2*args.D - args.L - 8*args.Ve + 12*args.EM - 3.1267745613434386);
  s += 9.696273622191004e-11 * Math.sin(2*args.D - 2*args.F + 3*args.EM - 0.62881001543542281);
  s += 1.0938918008590661e-10 * Math.sin(2*args.D - args.L + 5*args.EM - 8*args.Ma + 3*args.Ju - 1.8490484724567595);
  s += 1.2927595664444539e-10 * Math.sin(2*args.D - 3*args.EM + 6*args.Ma - 3.0971755045779448);
  s += 9.8047736148400362e-11 * Math.sin(2*args.D - args.L - 25*args.Ve + 35*args.EM - 11*args.Ma - 1.0260424736771738);
  s += 1.2953919858093459e-10 * Math.sin(2*args.D - 5*args.EM + 8*args.Ma - 3.1017999286886972);
  s += 1.0809191703908985e-10 * Math.sin(args.L - 2*args.Ju - 1.283875834197288);
  s += 1.0899295288907508e-10 * Math.sin(args.D - 17*args.Ve + 15*args.EM + 3*args.Ju - 1.300857716512942);
  s += 9.7849104066571589e-11 * Math.sin(2*args.D - 2*args.L + 2*args.EM - 2*args.Ju - 2*args.Sa - 2.6118603575600963);
  s += 1.0590888721939679e-10 * Math.sin(20*args.Ve - 21*args.EM + 0.31705042432247538);
  s += 1.1255831559972356e-10 * Math.sin(args.D - args.F + 3*args.Ve - 2*args.EM - 2.938551756626044);
  s += 1.0106841345176525e-10 * Math.sin(args.Me - 4*args.EM - 1.1618318236505498);
  s += 9.9738786711738039e-11 * Math.sin(5*args.Ve - 3*args.EM + 2.014712561439886);
  s += 1.0473616468798307e-10 * Math.sin(8*args.Ve - 9*args.EM + 0.32077832096205278);
  s += 1.0824914354349537e-10 * Math.sin(2*args.D - args.L - args.EM + 3*args.Ju - 5*args.Sa + 1.8295346998276987);
  s += 1.1203048865704565e-10 * Math.sin(args.L - 9*args.EM + 15*args.Ma + 1.3682341682071282);
  s += 9.6962736221914318e-11 * Math.sin(2*args.L + args.EM - 2.0724671347369723);
  s += 1.2878172179975846e-10 * Math.sin(2*args.D - 8*args.Ve + 12*args.EM - 3.1212864617150538);
  s += 1.1466480505287312e-10 * Math.sin(4*args.D - args.L + 4*args.EM - 8*args.Ma + 3*args.Ju - 0.15666127194942547);
  s += 1.1447503889433356e-10 * Math.sin(4*args.D - args.L - 4*args.EM + 8*args.Ma - 3*args.Ju - 2.9847030071542742);
  s += 1.2802299999881213e-10 * Math.sin(2*args.D + 7*args.EM - 13*args.Ma - 1.5542750243792782);
  s += 1.2810091905273886e-10 * Math.sin(2*args.D - args.L + 8*args.EM - 11*args.Ma + 3.1276221621324143);
  s += 1.0381383410212147e-10 * Math.sin(2*args.D + args.L + 2*args.Ve - 3*args.EM + 0.29106321840483435);
  s += 1.0196007728150151e-10 * Math.sin(2*args.D - 2*args.L - 2*args.Ve + 3*args.EM + 2.8307649570214553);
  s += 9.6962736221929479e-11 * Math.sin(2*args.D + 2*args.L + args.EM + 2.7270575830865305);
  s += 1.081810500793266e-10 * Math.sin(2*args.D - args.L + 2*args.Ju - 1.3714508955752693);
  s += 1.1977824420865093e-10 * Math.sin(2*args.D - 2*args.F - 4*args.EM + 8*args.Ma - 3*args.Ju - 3.0850854986683154);
  s += 1.1974771227895322e-10 * Math.sin(2*args.D - 2*args.F + 4*args.EM - 8*args.Ma + 3*args.Ju - 0.05666975102630703);
  s += 9.9553390084353811e-11 * Math.sin(2*args.D - args.L + 5*args.Ve - 7*args.EM + 0.32770895001006184);
  s += 1.0177997481751456e-10 * Math.sin(2*args.D - args.L - 2*args.EM + 5*args.Sa - 1.8535647413274612);
  s += 1.074666680541394e-10 * Math.sin(6*args.Ve - 10*args.EM + 3*args.Ju + 0.19286420778495714);
  s += 1.212565324359387e-10 * Math.sin(2*args.D + 4*args.EM - 7*args.Ma - 0.032222054058896971);
  s += 1.1698329332499639e-10 * Math.sin(2*args.D - args.L - 5*args.Ve + 7*args.EM + 3.0702054054516861);
  s += 1.0845561040579364e-10 * Math.sin(2*args.Ve + args.EM - 8*args.Ma + 1.7365005456753304);
  s += 9.6962736221922874e-11 * Math.sin(2*args.D + 2*args.L + 4*args.EM + 0.35632275489566684);
  s += 1.0068922052075952e-10 * Math.sin(2*args.D - 4*args.Ve + 6*args.EM - 0.25840654636817129);
  s += 9.6962736221927062e-11 * Math.sin(2*args.D - 3*args.L + 5*args.EM + 1.2454454866734228);
  s += 9.8086201798765852e-11 * Math.sin(2*args.D - 2*args.EM + 5*args.Sa - 1.8545807063376205);
  s += 1.0323479786843946e-10 * Math.sin(2*args.EM - 2*args.Ju - 0.19171220232504027);
  s += 1.1071676236396585e-10 * Math.sin(args.D - args.F + args.L + 2*args.Ma - 1.6647315529266768);
  s += 1.1071676236396585e-10 * Math.sin(args.D - args.F - args.L + 2*args.Ma - 1.6647315529266768);
  s += 9.7004930602770471e-11 * Math.sin(2*args.D - args.L - 2*args.EM + 4*args.Ju - 5*args.Sa - 1.2839384831832106);
  s += 1.1736368216958507e-10 * Math.sin(2*args.D - 2*args.L + 7*args.EM - 10*args.Ma - 0.020078717295927813);
  s += 9.6962736221912909e-11 * Math.sin(4*args.D - args.EM - 2.8950994542648192);
  s += 1.1532590300746418e-10 * Math.sin(args.L - 7*args.EM + 10*args.Ma + 0.018949094221068895);
  s += 9.6962736221918441e-11 * Math.sin(2*args.D + 2*args.L + 5*args.EM + 1.8072065844981746);
  s += 1.0795666649105212e-10 * Math.sin(2*args.D - args.L - 5*args.Ve + 8*args.EM - 1.6464034054134682);
  s += 9.7003357047265327e-11 * Math.sin(3*args.D - args.F - args.L + 3*args.Ve - 2*args.EM - 2.9377565283439235);
  s += 1.0607913657852445e-10 * Math.sin(2*args.D - args.L - 6*args.EM + 9*args.Ma - 0.075228843874510815);
  s += 1.0934801157482855e-10 * Math.sin(args.L + 5*args.EM - 8*args.Ma - 0.024309050962923059);
  s += 9.9168399321781625e-11 * Math.sin(8*args.Ve - 12*args.EM - 3.0821790470218309);
  s += 9.9022898067124431e-11 * Math.sin(args.L - 4*args.Ju + 10*args.Sa - 1.530108019629755);
  s += 9.9036805428802984e-11 * Math.sin(args.L + 4*args.Ju - 10*args.Sa - 1.610494318844373);
  s += 9.6962736221924555e-11 * Math.sin(2*args.D - args.L - 3*args.EM - 3.1006676496902617);
  s += 9.7612579100107914e-11 * Math.sin(args.D - args.F - args.L + 29*args.Ve - 33*args.EM + 2*args.Ju + 1.6004498363191129);
  s += 9.7244717102134363e-11 * Math.sin(args.L - 5*args.Ve + 8*args.EM - 1.6030020129314921);
  return s;
}

// Sum the ELP/MPP02 series: perturbation, longitude T^2 (219 terms)
function Elp_pert_longT2_C(args) {
  var s = 0.0;
  s += 2.3610426270034402e-08 * Math.sin(args.Lp);
  s += 1.1053784454963811e-08 * Math.sin(args.L - 18*args.Ve + 16*args.EM - 0.4111853258908606);
  s += 7.27220521664304e-09 * Math.sin(2*args.D - args.L - args.Lp + 3.1415926535897931);
  s += 5.817764173314431e-09 * Math.sin(2*args.D - args.Lp + 3.1415926535897931);
  s += 5.235987755982989e-09 * Math.sin(args.L - args.Lp + 3.1415926535897931);
  s += 3.8785094488762879e-09 * Math.sin(args.L + args.Lp);
  s += 1.2330185674465549e-09 * Math.sin(args.L - 10*args.Ve + 3*args.EM + 0.30220115332585168);
  s += 1.0181087303300257e-09 * Math.sin(2*args.D - args.L + args.Lp);
  s += 8.7266462599716487e-10 * Math.sin(2*args.D + args.Lp);
  s += 6.1159045545092016e-10 * Math.sin(2*args.L - 18*args.Ve + 16*args.EM - 0.41126429873722065);
  s += 5.7375357356978746e-10 * Math.sin(18*args.Ve - 16*args.EM - 2.7303381110851457);
  s += 6.3025778544239667e-10 * Math.sin(args.D + args.Lp + 3.1415926535897931);
  s += 5.8177641733144318e-10 * Math.sin(2*args.D - 2*args.Lp + 3.1415926535897931);
  s += 5.3329504922048958e-10 * Math.sin(2*args.D + args.L - args.Lp + 3.1415926535897931);
  s += 5.3329504922048958e-10 * Math.sin(2*args.D - args.L - 2*args.Lp + 3.1415926535897931);
  s += 5.3329504922048958e-10 * Math.sin(2*args.Lp);
  s += 4.8050947644481204e-10 * Math.sin(2*args.Ju - 5*args.Sa - 3.1197130839080489);
  s += 3.3898041180329785e-10 * Math.sin(args.L + 4*args.EM - 8*args.Ma + 3*args.Ju + 1.1876830657323014);
  s += 3.3889462223388552e-10 * Math.sin(args.L - 4*args.EM + 8*args.Ma - 3*args.Ju + 1.9538284491890676);
  s += 2.6043072088907813e-10 * Math.sin(4*args.EM - 8*args.Ma + 3*args.Ju - 2.1929979473262464);
  s += 3.3936957677667514e-10 * Math.sin(2*args.L - args.Lp + 3.1415926535897931);
  s += 2.9088820866572159e-10 * Math.sin(2*args.D - 2*args.L - args.Lp + 3.1415926535897931);
  s += 2.9088820866572159e-10 * Math.sin(2*args.L + args.Lp);
  s += 2.0827990282463423e-10 * Math.sin(8*args.EM - 15*args.Ma - 0.56304534856557475);
  s += 1.9761360195038933e-10 * Math.sin(8*args.Ve - 13*args.EM + 0.98633885341055316);
  s += 1.740002058723369e-10 * Math.sin(args.D - 15*args.Ve + 12*args.EM + 0.76887428507067035);
  s += 1.9392547244381442e-10 * Math.sin(2*args.D - args.L + 2*args.Lp);
  s += 1.9392547244381442e-10 * Math.sin(args.L - 2*args.Lp + 3.1415926535897931);
  s += 1.2956572166865515e-10 * Math.sin(2*args.D - 18*args.Ve + 16*args.EM - 0.41110864576368406);
  s += 1.2753915843544667e-10 * Math.sin(2*args.D + args.L - 18*args.Ve + 16*args.EM - 0.41118624510793084);
  s += 1.2647493598456231e-10 * Math.sin(2*args.D - args.L + 18*args.Ve - 16*args.EM - 2.7304129709954061);
  s += 1.2184033191184043e-10 * Math.sin(2*args.D - 2*args.L + 18*args.Ve - 16*args.EM - 2.7304877339716462);
  s += 1.4544410433286079e-10 * Math.sin(4*args.D - args.L - args.Lp + 3.1415926535897931);
  s += 1.4544410433286079e-10 * Math.sin(2*args.D);
  s += 9.7245111398860341e-11 * Math.sin(2*args.D - args.L - 12*args.Ve + 8*args.EM + 2.2670249058585732);
  s += 8.9200455193484199e-11 * Math.sin(args.L - 2*args.Ju + 5*args.Sa + 0.25169557928838815);
  s += 8.9149148756246369e-11 * Math.sin(args.L + 2*args.Ju - 5*args.Sa + 2.8896513281058445);
  s += 7.62959094657071e-11 * Math.sin(2*args.D - args.L + 2*args.EM - 3*args.Ju + 2.3300914052779969);
  s += 8.6346045901274065e-11 * Math.sin(2*args.D - args.L - 19*args.Ve + 21*args.EM - 3*args.Ma + 1.7537949632795786);
  s += 9.8994286491925969e-11 * Math.sin(2*args.D - 2*args.L + 14*args.EM - 23*args.Ma - 1.558004781805933);
  s += 9.696273622190721e-11 * Math.sin(4*args.D - 2*args.L - args.Lp + 3.1415926535897931);
  s += 9.696273622190721e-11 * Math.sin(2*args.D + args.L + args.Lp);
  s += 9.696273622190721e-11 * Math.sin(2*args.D - args.L);
  s += 9.696273622190721e-11 * Math.sin(2*args.D - 2*args.L + args.Lp + 3.1415926535897931);
  s += 9.696273622190721e-11 * Math.sin(2*args.D - 2*args.F - args.Lp + 3.1415926535897931);
  s += 9.696273622190721e-11 * Math.sin(args.L + 2*args.Lp);
  s += 7.2443395219935756e-11 * Math.sin(2*args.Ve - 3*args.EM + 1.9698025117883335);
  s += 6.86685807672429e-11 * Math.sin(10*args.Ve - 3*args.EM + 2.8391625930257267);
  s += 6.8154321047381822e-11 * Math.sin(2*args.L - 10*args.Ve + 3*args.EM + 0.30231753328586375);
  s += 5.3684494302628782e-11 * Math.sin(args.EM - 2*args.Ma + 2.4669358370480654);
  s += 5.6749265619084201e-11 * Math.sin(2*args.EM - 4*args.Ma + 2.0017254918908427);
  s += 4.8542076431674979e-11 * Math.sin(2*args.D - 2*args.L + 2*args.EM - 3*args.Ju + 2.3297569727086116);
  s += 4.9082916552005841e-11 * Math.sin(2*args.D - args.L - 37*args.EM + 48*args.Ma - 2.1696108201690771);
  s += 5.2088971106299848e-11 * Math.sin(args.L - 26*args.Ve + 29*args.EM - 1.9463497237322762);
  s += 5.6930021479027114e-11 * Math.sin(2*args.D - args.L + 6*args.Ve - 8*args.EM + 0.066271370926229645);
  s += 5.630850132217389e-11 * Math.sin(3*args.Ve - 5*args.EM + 3.0720610579231682);
  s += 3.9725508032862554e-11 * Math.sin(args.L - 8*args.Ve + 13*args.EM + 2.2566997405222282);
  s += 3.9674105658701798e-11 * Math.sin(args.L + 8*args.Ve - 13*args.EM + 0.88462740353531333);
  s += 4.0577606445077005e-11 * Math.sin(9*args.EM - 17*args.Ma - 1.0738433947061976);
  s += 4.1548404696343798e-11 * Math.sin(3*args.L - 18*args.Ve + 16*args.EM - 0.41126429614611509);
  s += 3.857194963241557e-11 * Math.sin(args.L - 8*args.EM + 15*args.Ma - 2.5645750454008738);
  s += 3.8312514599986182e-11 * Math.sin(args.L + 8*args.EM - 15*args.Ma - 0.57734206755695494);
  s += 3.8977306566869032e-11 * Math.sin(args.L + 18*args.Ve - 16*args.EM - 2.7303376047248764);
  s += 4.8481368110953605e-11 * Math.sin(4*args.D - args.Lp + 3.1415926535897931);
  s += 4.8481368110953605e-11 * Math.sin(2*args.D + args.L - 2*args.Lp + 3.1415926535897931);
  s += 4.8481368110953605e-11 * Math.sin(2*args.D - 2*args.F + args.Lp);
  s += 4.4310712402255771e-11 * Math.sin(2*args.D - 2*args.L + 6*args.Ve - 8*args.EM + 0.065953149484641524);
  s += 3.3488969296688533e-11 * Math.sin(2*args.D - args.L - 8*args.Ve + 13*args.EM + 2.1171720080573326);
  s += 3.3246876922654459e-11 * Math.sin(2*args.D - args.L + 8*args.Ve - 13*args.EM + 1.0214404388517573);
  s += 3.3856049652714354e-11 * Math.sin(args.D + args.F - args.L - 20*args.Ve + 20*args.EM + 2.7268990879401835);
  s += 3.229567988564921e-11 * Math.sin(2*args.D - args.L - 8*args.EM + 15*args.Ma - 2.6054097008623982);
  s += 3.2452559495546772e-11 * Math.sin(3*args.Ve - 4*args.EM + 1.9879225988774574);
  s += 3.107333880484325e-11 * Math.sin(2*args.D - args.L + 8*args.EM - 15*args.Ma - 0.53800606964299513);
  s += 2.9460808300582147e-11 * Math.sin(args.EM - 2*args.Ju + 2.2329080312389045);
  s += 2.8797080179566239e-11 * Math.sin(2*args.D - args.L - 20*args.Ve + 21*args.EM + 1.07106002629371);
  s += 3.2397592969824328e-11 * Math.sin(args.EM + 2*args.Ju - 5*args.Sa - 1.7071474247054956);
  s += 2.6867164607062301e-11 * Math.sin(2*args.D - args.L + 2*args.EM - 5*args.Sa + 0.40364310878107174);
  s += 3.3301788879810918e-11 * Math.sin(7*args.EM - 13*args.Ma - 0.051959589534319582);
  s += 2.7654862259597405e-11 * Math.sin(2*args.D - args.L - 4*args.EM + 8*args.Ma - 3*args.Ju - 0.27097307361153788);
  s += 2.5456688135155369e-11 * Math.sin(2*args.D - args.L + 2*args.EM - 4*args.Ju + 5*args.Sa + 2.7127638215915675);
  s += 2.7310764160410217e-11 * Math.sin(2*args.D - args.L + 4*args.EM - 8*args.Ma + 3*args.Ju - 2.8763958010232886);
  s += 2.3311866781480211e-11 * Math.sin(2*args.D - args.L - 20*args.Ve + 29*args.EM - 15*args.Ma - 2.1838151295822534);
  s += 2.3956447528754906e-11 * Math.sin(args.D - args.L + 3*args.Ve - 4*args.EM + 1.9786556235389341);
  s += 2.3016611251812481e-11 * Math.sin(2*args.L - 4*args.EM + 8*args.Ma - 3*args.Ju + 1.9541156433954996);
  s += 2.3013258818043992e-11 * Math.sin(2*args.L + 4*args.EM - 8*args.Ma + 3*args.Ju + 1.1874833865956136);
  s += 2.146383765863319e-11 * Math.sin(2*args.D - 8*args.Ve + 13*args.EM + 2.1433273087687237);
  s += 2.9136329982625915e-11 * Math.sin(2*args.D - 4*args.EM + 8*args.Ma - 3*args.Ju + 1.5534608998414048);
  s += 2.9178812858269642e-11 * Math.sin(2*args.D + 4*args.EM - 8*args.Ma + 3*args.Ju + 1.5827694070489737);
  s += 2.1283760839824096e-11 * Math.sin(2*args.D + 8*args.Ve - 13*args.EM + 0.99415342252660677);
  s += 2.1682648452882846e-11 * Math.sin(6*args.EM - 11*args.Ma + 0.46094255107181126);
  s += 2.1802610793843663e-11 * Math.sin(2*args.F + args.L - 18*args.Ve + 16*args.EM + 2.7304059638857483);
  s += 2.1802610793843663e-11 * Math.sin(2*args.F - args.L + 18*args.Ve - 16*args.EM + 0.41118668970404482);
  s += 2.0865127476686677e-11 * Math.sin(2*args.D - 8*args.EM + 15*args.Ma - 2.5984366560703793);
  s += 1.9942457288637005e-11 * Math.sin(2*args.D + 8*args.EM - 15*args.Ma - 0.54646229703724847);
  s += 2.3007664277054994e-11 * Math.sin(2*args.D - args.L + 2*args.Ju - 5*args.Sa + 0.20768498534977692);
  s += 2.2646880362308575e-11 * Math.sin(2*args.D - args.L - 2*args.Ju + 5*args.Sa + 2.9327617962950878);
  s += 1.9161087396651595e-11 * Math.sin(5*args.EM - 9*args.Ma + 0.97603928524601813);
  s += 1.9720396609824066e-11 * Math.sin(2*args.D - args.L - 15*args.Ve + 13*args.EM - 0.42636023819551988);
  s += 1.7782915503434834e-11 * Math.sin(args.Ju + 0.95348088585882862);
  s += 1.8193748829418026e-11 * Math.sin(2*args.D - args.L + 6*args.EM - 8*args.Ma + 2.0386435237916407);
  s += 1.6203478799848391e-11 * Math.sin(args.L - 2*args.EM + 3*args.Ju - 2.3331938590234236);
  s += 1.9895031004573758e-11 * Math.sin(3*args.EM - 6*args.Ma + 1.4759197460685041);
  s += 1.5507051274980627e-11 * Math.sin(2*args.D + 2*args.L - 18*args.Ve + 16*args.EM - 0.41121222263518731);
  s += 1.5095934536586212e-11 * Math.sin(2*args.D + 18*args.Ve - 16*args.EM - 2.7302395885878745);
  s += 1.4841492096553083e-11 * Math.sin(3*args.EM - 5*args.Ma + 2.0185230583900973);
  s += 1.9496300789771273e-11 * Math.sin(2*args.D - args.L + 14*args.EM - 23*args.Ma - 1.5560033420485937);
  s += 1.504928684777891e-11 * Math.sin(args.D + 3*args.Ve - 4*args.EM + 1.9779276336876219);
  s += 1.7944740027206973e-11 * Math.sin(4*args.Ve - 6*args.EM + 3.0564101298932722);
  s += 1.7920390890883104e-11 * Math.sin(4*args.EM - 7*args.Ma + 1.4939954341819544);
  s += 1.4601208017202173e-11 * Math.sin(2*args.D - args.L + 2*args.EM - args.Ju - 5*args.Sa - 2.7357177257773215);
  s += 1.4166963316043062e-11 * Math.sin(2*args.D + args.L - 10*args.Ve + 3*args.EM + 0.30220115332591191);
  s += 1.4166963316043062e-11 * Math.sin(2*args.D - args.L + 10*args.Ve - 3*args.EM + 2.8393915002638814);
  s += 1.3712094841445651e-11 * Math.sin(args.L - 34*args.EM + 39*args.Ma - 0.32014053771889872);
  s += 1.3609935452505975e-11 * Math.sin(2*args.D - 2*args.L + 10*args.Ve - 3*args.EM + 2.8395095559934576);
  s += 1.2288151573314478e-11 * Math.sin(args.D + args.F - 2*args.L - 3*args.EM + 7*args.Ma - 2.5605444120758092);
  s += 1.3505737409715561e-11 * Math.sin(2*args.D - 10*args.Ve + 3*args.EM + 0.30196536394264312);
  s += 1.2628944968525969e-11 * Math.sin(2*args.D - args.L - 2*args.Ve + 3*args.EM + 1.126687157611534);
  s += 1.2363803563405745e-11 * Math.sin(11*args.EM - 21*args.Ma + 2*args.Ju - 1.069759070458961);
  s += 1.2034460042932564e-11 * Math.sin(args.L - 2*args.Ve + 3*args.EM + 1.120821907524844);
  s += 1.5824168205536626e-11 * Math.sin(2*args.D - args.L + 3*args.Ve - 5*args.EM + 3.1404669208920621);
  s += 1.1476865187065994e-11 * Math.sin(args.D - 23*args.EM + 20*args.Ma + 1.1787996148020432);
  s += 1.1124887977106706e-11 * Math.sin(args.L + 2*args.Ve - 3*args.EM + 2.0179787461139522);
  s += 1.10031644128786e-11 * Math.sin(2*args.D - 2*args.L + 6*args.EM - 8*args.Ma + 2.0376789813311742);
  s += 1.0750819254007607e-11 * Math.sin(2*args.D - 2*args.F + 5*args.Ve - 6*args.EM + 2.0304849865203343);
  s += 1.1187233455217122e-11 * Math.sin(args.Ve - 2*args.EM - 1.2244912196840874);
  s += 1.2421747172858166e-11 * Math.sin(2*args.D - 2*args.L - 2*args.Ve + 13*args.EM - 15*args.Ma + 1.4306257480229809);
  s += 9.7408643880997401e-12 * Math.sin(args.D + args.L - 15*args.Ve + 12*args.EM + 0.76939220534537933);
  s += 9.7408643880997401e-12 * Math.sin(args.D - args.L - 15*args.Ve + 12*args.EM + 0.76939220534537933);
  s += 9.4696889908714242e-12 * Math.sin(args.L - args.Ju - 0.78066247797024479);
  s += 9.3516136623285111e-12 * Math.sin(2*args.D - args.L - 3*args.Me + args.EM - 0.77654064900882902);
  s += 1.1767950989438026e-11 * Math.sin(9*args.EM - 15*args.Ma - 3.0197127973646025);
  s += 9.2512358219054807e-12 * Math.sin(args.D - args.F + 2*args.Ma - 0.7676888419910628);
  s += 9.2064374043684602e-12 * Math.sin(2*args.D - args.L - args.Ju - 0.78275184486863747);
  s += 1.2515471083745993e-11 * Math.sin(args.L + 3*args.Ve - 5*args.EM - 3.1065100045451643);
  s += 9.1349909980025388e-12 * Math.sin(args.L + args.Ju - 2.3643755449278734);
  s += 1.0609848661251098e-11 * Math.sin(args.EM - 3*args.Ju + 1.8149949486828005);
  s += 9.9827569764543564e-12 * Math.sin(2*args.D - args.L - 3*args.Ve + 4*args.EM + 1.2204098316952394);
  s += 1.2247002823925191e-11 * Math.sin(2*args.D - args.L - 3*args.Ve + 5*args.EM + 0.043557420370308332);
  s += 9.5417342620339766e-12 * Math.sin(4*args.EM - 6*args.Ma + 2.0182076630236923);
  s += 1.2011500741587894e-11 * Math.sin(args.L - 3*args.Ve + 5*args.EM - 0.027115427344082167);
  s += 8.8051125004496446e-12 * Math.sin(2*args.D - args.L + 18*args.Ve - 17*args.EM - 0.93333435099707285);
  s += 9.2121632921767839e-12 * Math.sin(args.L + 2*args.EM - 4*args.Ma + 2.010013556368782);
  s += 1.0769096726417726e-11 * Math.sin(2*args.D - args.L - args.EM - 2*args.Ju + 5*args.Sa - 1.445580749891678);
  s += 1.1586306944007036e-11 * Math.sin(2*args.D - args.L + 2*args.EM - 2*args.Ju - 1.5946644884494194);
  s += 8.9134319642252126e-12 * Math.sin(args.L - 2*args.EM + 4*args.Ma + 1.1334612347714585);
  s += 1.0808376344130319e-11 * Math.sin(args.L - 6*args.Ve + 8*args.EM - 0.063630572837909571);
  s += 8.4367242313873163e-12 * Math.sin(2*args.D - 2*args.Ve + 3*args.EM + 1.1255057613768351);
  s += 7.9160789186550862e-12 * Math.sin(2*args.D - args.L - args.EM + 2*args.Ju + 0.90074923148335484);
  s += 7.7859566055239672e-12 * Math.sin(2*args.EM - 3*args.Ju - 0.79629543537542324);
  s += 8.2467509887047122e-12 * Math.sin(args.EM + args.Ju - 5*args.Sa - 2.6935920383249297);
  s += 7.7179806848746497e-12 * Math.sin(4*args.EM - 8*args.Ma + 0.95996427553188246);
  s += 8.1257320027782932e-12 * Math.sin(2*args.D - args.L + 2*args.Ve - 3*args.EM + 1.9881680144428837);
  s += 7.8371427819579233e-12 * Math.sin(args.L + 9*args.EM - 17*args.Ma - 1.0901528407418164);
  s += 7.5981580118026989e-12 * Math.sin(2*args.EM - 3*args.Ma + 2.560271616657539);
  s += 7.4360708422434732e-12 * Math.sin(2*args.D - args.L + args.Ju - 2.3839502840501314);
  s += 7.8228594873221062e-12 * Math.sin(2*args.D - args.L + 2*args.EM - 4*args.Ma + 2.0342303127237815);
  s += 7.5313913608900483e-12 * Math.sin(3*args.EM - 4*args.Ma + 2.5305568459262293);
  s += 1.0440132425170522e-11 * Math.sin(2*args.D + 3*args.Ve - 5*args.EM + 3.1388640674036092);
  s += 7.7584141029439033e-12 * Math.sin(args.L - 9*args.EM + 17*args.Ma - 2.0504254823686532);
  s += 8.8532160472769899e-12 * Math.sin(2*args.D + args.L - 18*args.Ve + 15*args.EM + 1.3854096757800383);
  s += 7.7223505624565533e-12 * Math.sin(args.EM - 3*args.Ju + 5*args.Sa - 0.39874456010883552);
  s += 7.8448288639682674e-12 * Math.sin(2*args.D - 3*args.Ve + 4*args.EM + 1.2273047049236561);
  s += 6.9227769722263067e-12 * Math.sin(args.L + args.EM - 2*args.Ma + 2.4628306996827871);
  s += 7.3546625058587901e-12 * Math.sin(3*args.EM - 8*args.Ma + 3*args.Ju - 2.7442317941950449);
  s += 6.8351348518820937e-12 * Math.sin(args.L - args.EM + 2*args.Ma + 0.67855992748651006);
  s += 6.7960771017294042e-12 * Math.sin(2*args.Ju + 2.4121343109217666);
  s += 7.0731163974051292e-12 * Math.sin(2*args.D - args.L + 4*args.Ve - 5*args.EM - 1.1198885945762609);
  s += 7.0268965157704672e-12 * Math.sin(4*args.Ju - 10*args.Sa - 0.45516452955039172);
  s += 6.8405673762325608e-12 * Math.sin(2*args.D + 3*args.EM - 8*args.Ma + 3*args.Ju - 2.6578511115424925);
  s += 7.0788210683107723e-12 * Math.sin(2*args.D - 2*args.L + 2*args.EM - args.Ju - 5*args.Sa - 2.7526999348444603);
  s += 6.9896635388054065e-12 * Math.sin(args.L - 3*args.Ve + 4*args.EM + 1.1861646781782076);
  s += 6.3500602823827084e-12 * Math.sin(2*args.D - args.L + 3*args.EM - 8*args.Ma + 3*args.Ju - 2.3635756164709103);
  s += 8.2714569908905461e-12 * Math.sin(5*args.Ve - 7*args.EM + 0.061934466462258697);
  s += 7.9358887349244109e-12 * Math.sin(2*args.D - args.EM - 2*args.Ju + 5*args.Sa - 1.4660538893007327);
  s += 6.6664445910369761e-12 * Math.sin(2*args.D - args.L + 2*args.EM - 5*args.Ju + 5*args.Sa + 0.39030436898226201);
  s += 6.4551859487868582e-12 * Math.sin(2*args.D - args.L - 2*args.EM + 4*args.Ma + 1.118687305992579);
  s += 6.3854094597685406e-12 * Math.sin(3*args.Ju - 5*args.Sa - 1.0953147796035787);
  s += 6.1042058417899763e-12 * Math.sin(2*args.D - args.EM + 2*args.Ju + 0.90147689009007848);
  s += 6.256984827345317e-12 * Math.sin(2*args.D - args.L + 9*args.EM - 17*args.Ma - 1.0403527377158763);
  s += 6.0172143307998076e-12 * Math.sin(args.L - args.EM + 2*args.Ju + 0.90877349547568853);
  s += 5.8865892814345328e-12 * Math.sin(2*args.D - args.Ju - 0.78452276517125963);
  s += 5.8720044229148523e-12 * Math.sin(2*args.D - args.L + args.EM - 2*args.Ma + 2.4915548684967166);
  s += 7.7768137443269001e-12 * Math.sin(2*args.D - 3*args.Ve + 5*args.EM + 0.04455916444757662);
  s += 5.8997662315823934e-12 * Math.sin(2*args.D - args.L - 9*args.EM + 17*args.Ma - 2.0965323735030101);
  s += 7.6669018115042383e-12 * Math.sin(5*args.Ve - 8*args.EM - 1.5196859357893795);
  s += 7.5397916167594238e-12 * Math.sin(5*args.EM - 8*args.Ma + 1.5010475114470905);
  s += 6.0338627207417924e-12 * Math.sin(args.Ju - 5*args.Sa + 0.39738259228883904);
  s += 5.697935499865143e-12 * Math.sin(2*args.D - args.L + 5*args.EM - 6*args.Ma - 0.56225656575737104);
  s += 5.557037656033733e-12 * Math.sin(args.Sa + 0.73998463767439693);
  s += 5.6572102233250336e-12 * Math.sin(2*args.D - 46*args.Ve + 50*args.EM + 2.5612491893553764);
  s += 7.6937413544397266e-12 * Math.sin(args.D - 23*args.Ve + 25*args.EM + 3.1332857125446423);
  s += 5.4939887548981231e-12 * Math.sin(2*args.D - 2*args.L - 12*args.Ve + 8*args.EM + 2.2683464452494881);
  s += 5.5246382795030012e-12 * Math.sin(2*args.D - args.L - args.EM + 2*args.Ma + 0.64710588817511749);
  s += 5.5318143585902389e-12 * Math.sin(args.D - args.F - args.L + 18*args.Ve - 15*args.EM + 2.2011676921831107);
  s += 6.8338967902741674e-12 * Math.sin(2*args.L + 2*args.Ju - 5*args.Sa + 3.0092995312271116);
  s += 6.8281134211769938e-12 * Math.sin(2*args.L - 2*args.Ju + 5*args.Sa + 0.13215119169612005);
  s += 5.45949619487754e-12 * Math.sin(2*args.D - 2*args.L + 18*args.Ve - 17*args.EM - 0.93381600920805585);
  s += 5.522133274891676e-12 * Math.sin(args.EM - 5*args.Sa + 2.5812482954751363);
  s += 5.9477121678855338e-12 * Math.sin(12*args.EM - 24*args.Ma + 7*args.Ju + 5*args.Sa - 0.31207041643596928);
  s += 5.7590414362557896e-12 * Math.sin(args.L + 3*args.EM - 8*args.Ma + 3*args.Ju - 2.8249897927268433);
  s += 5.4619459046745594e-12 * Math.sin(2*args.D - 2*args.L + 2*args.EM - 5*args.Ju + 5*args.Sa + 0.39669520251594842);
  s += 6.3731845272385005e-12 * Math.sin(args.L - args.EM - 2*args.Ju + 5*args.Sa - 1.4573167779555203);
  s += 5.4052382938167134e-12 * Math.sin(14*args.EM - 27*args.Ma + 3*args.Ju + 3*args.Sa + 2.7531839711861119);
  s += 5.027735977296933e-12 * Math.sin(6*args.EM - 10*args.Ma + 0.98513143029331074);
  s += 5.1734930755553203e-12 * Math.sin(2*args.D + 2*args.EM - 4*args.Ma + 2.0314861903599857);
  s += 5.2615519346371928e-12 * Math.sin(args.L + 3*args.Ve - 4*args.EM + 1.9839146141754596);
  s += 5.5903972228588382e-12 * Math.sin(2*args.Ve - 4*args.EM - 0.27239123525206466);
  s += 5.8038603212089554e-12 * Math.sin(2*args.D - 18*args.Ve + 15*args.EM + 1.3854728232571973);
  s += 5.0256672579934016e-12 * Math.sin(2*args.D - args.L + 5*args.Ve - 6*args.EM + 2.0221954505416253);
  s += 6.3576282783255436e-12 * Math.sin(2*args.D - args.L + 7*args.EM - 10*args.Ma + 1.5151827821947139);
  s += 6.2949028052593708e-12 * Math.sin(args.L - 7*args.EM + 13*args.Ma - 3.0794771289735938);
  s += 4.969574512482695e-12 * Math.sin(2*args.D + 2*args.Ve - 3*args.EM + 1.99519706921539);
  s += 6.1503441686045176e-12 * Math.sin(args.L + 7*args.EM - 13*args.Ma - 0.063314486148058916);
  s += 5.6879378441467032e-12 * Math.sin(args.L + args.EM + 2*args.Ju - 5*args.Sa - 1.7261060042955023);
  s += 5.2040118467191961e-12 * Math.sin(5*args.Ve - 6*args.EM - 4*args.Ma - 1.7816683199920915);
  s += 5.1686438510563766e-12 * Math.sin(2*args.D + args.L + 4*args.EM - 8*args.Ma + 3*args.Ju + 1.3671210472088506);
  s += 5.1548367190498306e-12 * Math.sin(2*args.D + args.L - 4*args.EM + 8*args.Ma - 3*args.Ju + 1.7725982088919381);
  s += 4.9145152414136847e-12 * Math.sin(2*args.D - 19*args.Ve + 21*args.EM - 3*args.Ma + 1.7537952698050192);
  s += 5.5185693061401176e-12 * Math.sin(2*args.D - args.L - 7*args.EM + 13*args.Ma - 3.1137338471432465);
  return s;
}

// Sum the ELP/MPP02 series: perturbation, longitude T^3 (2 terms)
function Elp_pert_longT3_C(args) {
  var s = 0.0;
  s += 5.8019293211577798e-11 * Math.sin(args.L - 18*args.Ve + 16*args.EM - 2.0445636458195819);
  s += 8.2008875079499311e-12 * Math.sin(2*args.Ju - 5*args.Sa - 1.232468886692107);
  return s;
}

// Sum the ELP/MPP02 series: perturbation, latitude T^0 (446 terms)
function Elp_pert_latT0_C(args) {
  var s = 0.0;
  s += 3.9003454570733105e-05 * Math.sin(args.zeta - 3.1415802617521043);
  s += 7.3217009820994858e-06 * Math.sin(args.D + args.EM - 1.454207123369569);
  s += 3.0568493255648407e-06 * Math.sin(args.F - args.L + 18*args.Ve - 16*args.EM + 0.46328247136348605);
  s += 3.0556444325140349e-06 * Math.sin(args.F + args.L - 18*args.Ve + 16*args.EM + 2.6783100900632011);
  s += 2.2100716467057136e-06 * Math.sin(args.L - args.zeta + 3.1415795636204034);
  s += 2.0154189537406692e-06 * Math.sin(args.L + args.zeta - 3.1415806108179547);
  s += 1.5815591905157603e-06 * Math.sin(2*args.F - args.zeta + 3.1415776437582261);
  s += 1.4474112449523867e-06 * Math.sin(2*args.D - args.zeta + 3.1415800872191788);
  s += 4.1217466339423517e-07 * Math.sin(args.D - args.L + args.EM + 1.6868301502552741);
  s += 3.3773121218359137e-07 * Math.sin(args.F + 2*args.L - 18*args.Ve + 16*args.EM + 2.6783107666446471);
  s += 3.2725370974490743e-07 * Math.sin(args.F + 18*args.Ve - 16*args.EM + 0.46328935410393679);
  s += 3.8742879501703504e-07 * Math.sin(args.D + args.L + args.EM - 1.4532739327539321);
  s += 4.0481942372644946e-07 * Math.sin(2*args.D - args.L + args.zeta - 3.1415799126862538);
  s += 3.8993564371638307e-07 * Math.sin(args.F - 2*args.zeta + 3.1415772946923757);
  s += 3.5551387235762366e-07 * Math.sin(2*args.D - args.L - args.zeta + 3.1415802617521043);
  s += 3.2305616204581732e-07 * Math.sin(2*args.D - args.F + 5*args.Ve - 6*args.EM - 1.5306606655468398);
  s += 2.4084765923515924e-07 * Math.sin(args.D + args.EM - 2*args.Ju + 1.754621562875637);
  s += 2.530450668408324e-07 * Math.sin(2*args.D - args.F - args.L + 2*args.EM - 2*args.Ju - 3.1395627272409548);
  s += 2.4580262351361053e-07 * Math.sin(2*args.D + args.F - args.L + 2*args.EM - 2*args.Ju - 3.1395201837460904);
  s += 2.2292049393023983e-07 * Math.sin(args.D - args.EM + 1.4764606287360953);
  s += 1.883630945374391e-07 * Math.sin(args.D + 2*args.Ma + 2.8581369757294648);
  s += 2.2485658529860957e-07 * Math.sin(2*args.D + args.zeta - 3.1415804362850293);
  s += 1.7998568014179862e-07 * Math.sin(args.D + 5*args.Ve - 7*args.EM + 2.9543725080698739);
  s += 1.688566536299586e-07 * Math.sin(args.D + args.EM + args.Ju + 1.3191874902993239);
  s += 2.0431000880587203e-07 * Math.sin(2*args.D - args.F + 3*args.Ve - 3*args.EM + 0.0008138635013544154);
  s += 1.9285888234536619e-07 * Math.sin(2*args.F + args.L - args.zeta + 3.1415736295009467);
  s += 1.3980509596533645e-07 * Math.sin(args.D + 4*args.Ve - 5*args.EM + 1.3354052797367801);
  s += 1.3258159548945021e-07 * Math.sin(args.D + args.Ve + 1.803594934576249);
  s += 1.2110146034048095e-07 * Math.sin(args.F + args.L - 10*args.Ve + 3*args.EM - 2.7397897045430106);
  s += 1.210952880861112e-07 * Math.sin(args.F - args.L + 10*args.Ve - 3*args.EM - 0.40180218444118415);
  s += 1.4762828545124723e-07 * Math.sin(2*args.D - args.F - args.EM + args.Ju + 3.1100933560873454);
  s += 1.5003731668373322e-07 * Math.sin(2*args.D - args.F - args.L + 3*args.Ve - 3*args.EM + 3.1414349568042597);
  s += 1.0574687646954313e-07 * Math.sin(2*args.D - args.F + args.L - 18*args.Ve + 16*args.EM + 2.6783098208838112);
  s += 1.055834726500037e-07 * Math.sin(2*args.D - args.F - args.L + 18*args.Ve - 16*args.EM + 0.46328250803731952);
  s += 1.1332660896766288e-07 * Math.sin(2*args.D - args.F + 4*args.EM - 8*args.Ma + 3*args.Ju - 1.2848922340515649);
  s += 1.1326217080039466e-07 * Math.sin(2*args.D - args.F - 4*args.EM + 8*args.Ma - 3*args.Ju - 1.8566440402595719);
  s += 1.3886648435875843e-07 * Math.sin(2*args.D + args.F - args.L + 3*args.Ve - 3*args.EM + 3.1413507109332581);
  s += 1.1654920893875644e-07 * Math.sin(2*args.L + args.zeta - 3.1415811344167297);
  s += 1.1439545404362042e-07 * Math.sin(2*args.D - args.F + 4*args.Ve - 4*args.EM - 3.1408792090746602);
  s += 9.7567286964637471e-08 * Math.sin(2*args.D + args.F - args.L + 2*args.EM - 3*args.Ju + 0.17557337017813932);
  s += 1.0892261860013342e-07 * Math.sin(2*args.D - args.F - 2*args.Ve + 2*args.EM + 3.1353178072736059);
  s += 9.2799631072977548e-08 * Math.sin(2*args.D - args.F - args.L + 2*args.EM - 3*args.Ju + 0.17543039653112327);
  s += 1.0643320530173722e-07 * Math.sin(2*args.D - args.F + 2*args.EM - 2*args.Ju + 0.0006655042170643252);
  s += 7.9720841728511262e-08 * Math.sin(args.D + args.EM - 2*args.Sa + 1.9891942444732618);
  s += 9.722805950591718e-08 * Math.sin(2*args.D - args.F - args.Ve + args.EM + 0.00028588507266653131);
  s += 9.6923159056050018e-08 * Math.sin(2*args.D - args.F + 2*args.Ve - 2*args.EM - 0.00014946700143090468);
  s += 6.7507599209672325e-08 * Math.sin(args.D + args.EM + 2*args.Ju - 5*args.Sa - 2.1111456900356398);
  s += 6.8244930791323005e-08 * Math.sin(2*args.D + args.F - 18*args.Ve + 16*args.EM + 2.6783155652527335);
  s += 6.6164946229349377e-08 * Math.sin(2*args.D + args.F - 2*args.L + 18*args.Ve - 16*args.EM + 0.46328349457128976);
  s += 7.9951241511256474e-08 * Math.sin(3*args.D - args.L + args.EM - 1.4547087451931939);
  s += 8.4551505985514701e-08 * Math.sin(2*args.L - args.zeta + 3.1415809598838047);
  s += 6.227722324460146e-08 * Math.sin(args.D + args.EM + args.Sa + 2.695233590240588);
  s += 6.7338811223161624e-08 * Math.sin(args.D + 2*args.Ve - 3*args.EM - 1.8049044385928965);
  s += 7.9848813278745651e-08 * Math.sin(2*args.D + args.L - args.zeta + 3.1415795636204034);
  s += 5.8948870171702604e-08 * Math.sin(2*args.D + args.F + args.L - 18*args.Ve + 16*args.EM + 2.6783108866964533);
  s += 6.541935924723963e-08 * Math.sin(args.D + 2*args.Ve - args.EM + 1.8030579749799707);
  s += 5.8434650455210118e-08 * Math.sin(2*args.D + args.F - args.L + 18*args.Ve - 16*args.EM + 0.4632836821472302);
  s += 6.738922817628925e-08 * Math.sin(args.D - args.L - args.EM + 1.4481845047243165);
  s += 5.3481243372135821e-08 * Math.sin(args.D + 8*args.Ve - 12*args.EM + 2.6790673407445551);
  s += 6.8235881463131842e-08 * Math.sin(2*args.D - args.F + args.EM - args.Ju + 0.0072125004029754006);
  s += 6.8116322195886629e-08 * Math.sin(2*args.D - args.Lp - args.zeta + 3.1415800872191788);
  s += 5.9660435293962661e-08 * Math.sin(2*args.D - args.F - 2*args.EM + 2*args.Ju - 0.016084579094169056);
  s += 4.9507630069602507e-08 * Math.sin(args.D + 3*args.Ve - 4*args.EM - 1.8090398016274971);
  s += 4.4893877484259968e-08 * Math.sin(args.D + 5*args.Ve - 6*args.EM + 1.3334583648697202);
  s += 4.5358139045351742e-08 * Math.sin(3*args.D + args.EM - 1.4536434616262957);
  s += 4.0976587723613088e-08 * Math.sin(args.F + args.L + 4*args.EM - 8*args.Ma + 3*args.Ju - 1.3149168393097272);
  s += 4.0971191089821837e-08 * Math.sin(args.F + args.L - 4*args.EM + 8*args.Ma - 3*args.Ju - 1.8266662138170711);
  s += 4.7798093277982676e-08 * Math.sin(2*args.D - args.F - 2*args.Ve + 3*args.EM - 1.5959384577267854);
  s += 4.8723774951520689e-08 * Math.sin(2*args.D - 2*args.F + args.zeta + 1.7802358370338813e-05);
  s += 4.0360265353239156e-08 * Math.sin(args.D + 3*args.Ve - 2*args.EM + 1.8030940053077611);
  s += 4.3703060150259155e-08 * Math.sin(args.D + 2*args.Ve - 2*args.EM - 3.0373580613511688);
  s += 4.4124700815721749e-08 * Math.sin(args.D - 2*args.F + args.EM + 1.6559203798361484);
  s += 3.7720840364031573e-08 * Math.sin(2*args.D - args.F + args.Ju - 0.24440966695746077);
  s += 4.4202034647565581e-08 * Math.sin(2*args.D + args.F - args.L - args.EM + args.Ju + 3.1111527978926086);
  s += 3.6943641580771427e-08 * Math.sin(args.F - args.L - 4*args.EM + 8*args.Ma - 3*args.Ju - 1.8223820622169951);
  s += 3.6941756765805104e-08 * Math.sin(args.F - args.L + 4*args.EM - 8*args.Ma + 3*args.Ju - 1.3192172807731026);
  s += 3.191883746902811e-08 * Math.sin(2*args.D - args.F - args.EM + 2*args.Ju - 2.2011505071743063);
  s += 3.6562128964245321e-08 * Math.sin(args.D + args.Ve - 2*args.EM - 1.8032282146160801);
  s += 4.0630295788462907e-08 * Math.sin(2*args.D - args.F - args.Ju - 3.0555785636746111);
  s += 3.6229397793499695e-08 * Math.sin(args.D - args.Ve - 1.803513298823574);
  s += 3.0693932470618416e-08 * Math.sin(2*args.D - args.F + args.EM - 2*args.Ma - 0.69518071646232982);
  s += 3.860976984297134e-08 * Math.sin(args.D + args.EM - args.Ju + 1.6885105909812432);
  s += 2.9833070026798173e-08 * Math.sin(2*args.D - args.F - args.EM + 2*args.Ma - 2.4101497404181353);
  s += 4.1009330494404369e-08 * Math.sin(2*args.D - args.F - 2*args.EM + 2*args.Ma - 3.1171514237704203);
  s += 3.0301316469647843e-08 * Math.sin(2*args.D - args.F - 8*args.Ve + 13*args.EM - 0.99901831275203878);
  s += 3.1150648575188436e-08 * Math.sin(args.F + 3*args.L - 18*args.Ve + 16*args.EM + 2.678310992759835);
  s += 3.338815965221015e-08 * Math.sin(args.F - 4*args.EM + 8*args.Ma - 3*args.Ju - 1.870342738057585);
  s += 3.3382409923857647e-08 * Math.sin(args.F + 4*args.EM - 8*args.Ma + 3*args.Ju - 1.2712458703573317);
  s += 3.0111635141259226e-08 * Math.sin(2*args.D - args.F + 8*args.Ve - 13*args.EM - 2.1432591483937644);
  s += 4.0433461004536927e-08 * Math.sin(2*args.F + args.zeta + 1.2391837689153577e-05);
  s += 4.0239819488202772e-08 * Math.sin(args.F + args.Ve - args.EM - 3.1414633544710919);
  s += 2.9862626041339146e-08 * Math.sin(args.F + args.L + 18*args.Ve - 16*args.EM + 0.46329182455143225);
  s += 3.8674425187039128e-08 * Math.sin(2*args.D + args.F - args.EM + args.Ju + 3.1100507584027111);
  s += 3.9210662498085923e-08 * Math.sin(2*args.D - args.F + args.Ve - args.EM - 3.1410543006200879);
  s += 3.8698273143115174e-08 * Math.sin(2*args.D - args.F + 5*args.Ve - 5*args.EM - 3.1403323949793971);
  s += 3.2997694056822455e-08 * Math.sin(2*args.D - args.F - 2*args.L + 2*args.EM - 3*args.Ju + 0.17519724763284114);
  s += 3.7040862006132356e-08 * Math.sin(2*args.D - args.F - args.L - args.EM + args.Ju + 3.1111607883242156);
  s += 3.7970467721912643e-08 * Math.sin(args.F + args.L - 2*args.EM + 2*args.Ju - 3.1412881193010023);
  s += 3.1474843488454594e-08 * Math.sin(args.D - args.Ve + 2*args.EM - 1.3367670739055404);
  s += 2.9246604848249459e-08 * Math.sin(2*args.D + args.F - args.L + 4*args.EM - 8*args.Ma + 3*args.Ju - 1.2760878721561844);
  s += 2.9220626316211197e-08 * Math.sin(2*args.D + args.F - args.L - 4*args.EM + 8*args.Ma - 3*args.Ju - 1.8654759106017567);
  s += 3.4826213651426261e-08 * Math.sin(args.F + args.L - args.Ve + args.EM - 0.00019802248231801242);
  s += 2.9838865999393389e-08 * Math.sin(args.D + 2*args.EM - 2*args.Ma + 1.7363658413417475);
  s += 3.4329027794924726e-08 * Math.sin(args.F - args.Ve + args.EM - 0.00010940404245013938);
  s += 3.3415822695923304e-08 * Math.sin(2*args.D + args.F - args.L - 2*args.Ve + 2*args.EM + 3.1361031795251884);
  s += 3.3168609456405051e-08 * Math.sin(2*args.D - args.F - 3*args.Ve + 4*args.EM - 1.5806665496757759);
  s += 2.7362776677895257e-08 * Math.sin(args.D + 4*args.Ve - 3*args.EM + 1.8034892852925879);
  s += 3.257947937056006e-08 * Math.sin(2*args.D - 2*args.L - args.zeta + 3.1415811344167301);
  s += 3.1793271173090404e-08 * Math.sin(args.F + args.L - args.EM + args.Ju + 3.1198708441837826);
  s += 3.1743327295224589e-08 * Math.sin(args.F - args.L + 2*args.EM - 2*args.Ju - 0.00033064065215353814);
  s += 3.1119196789010798e-08 * Math.sin(2*args.D + args.F - 2*args.Ve + 2*args.EM + 3.1351387062648843);
  s += 3.0699757127705267e-08 * Math.sin(2*args.D - args.F + 2*args.Ve - 3*args.EM - 1.5704276208012866);
  s += 3.0211324020022273e-08 * Math.sin(2*args.D + args.F - 2*args.L + 2*args.EM - 2*args.Ju + 0.0014236838381267393);
  s += 3.0037309353987955e-08 * Math.sin(args.F + args.L + args.Ve - args.EM - 3.1413298842482758);
  s += 2.3821175511327934e-08 * Math.sin(2*args.D - args.F - args.L + 4*args.EM - 8*args.Ma + 3*args.Ju - 1.2762203353324748);
  s += 2.3798303717075422e-08 * Math.sin(2*args.D - args.F - args.L - 4*args.EM + 8*args.Ma - 3*args.Ju - 1.8653487230051395);
  s += 2.2988354773692164e-08 * Math.sin(args.D + args.EM - 3*args.Ju + 1.9359668177979252);
  s += 2.8675160282372123e-08 * Math.sin(args.F + args.EM - args.Ju + 0.022534021699285475);
  s += 2.9305091633766697e-08 * Math.sin(2*args.D + args.F - args.L + 2*args.Ve - 2*args.EM + 4.1595777994673915e-06);
  s += 2.4174265318919767e-08 * Math.sin(args.D - 2*args.Ve + args.EM - 1.8005628965121612);
  s += 2.8925644428207236e-08 * Math.sin(args.F - args.L + args.Ve - args.EM - 3.1413593012448433);
  s += 2.4728143556303722e-08 * Math.sin(2*args.D + args.F - 2*args.L + 2*args.EM - 3*args.Ju + 0.17500189634166166);
  s += 2.8555525817352769e-08 * Math.sin(2*args.D + args.Lp - args.zeta - 1.2391837689124815e-05);
  s += 2.8316313055477886e-08 * Math.sin(2*args.D - args.F - args.L - 2*args.Ve + 2*args.EM + 3.1362126116299511);
  s += 2.0376575212894159e-08 * Math.sin(args.D + 3*args.EM - 4*args.Ma + 0.95759480317355439);
  s += 2.8294016154230919e-08 * Math.sin(2*args.D + args.F + 2*args.EM - 2*args.Ju - 3.139453793993189);
  s += 2.7813832800327163e-08 * Math.sin(2*args.D + args.F - args.L - args.Ve + args.EM + 0.00027915372944250724);
  s += 2.012138426955217e-08 * Math.sin(args.D - 3*args.Ve + 6*args.EM - 1.0277979239775503);
  s += 2.2531777419104942e-08 * Math.sin(args.F - args.L + 26*args.Ve - 29*args.EM + 1.310493868226327);
  s += 2.281139996807461e-08 * Math.sin(args.D + 6*args.Ve - 7*args.EM + 1.3314529867903098);
  s += 2.25126770982992e-08 * Math.sin(args.F + args.L - 26*args.Ve + 29*args.EM + 1.8311008303194745);
  s += 2.6925295920976756e-08 * Math.sin(args.F - args.L + args.EM - args.Ju + 0.021484501117206355);
  s += 2.7295010246466541e-08 * Math.sin(2*args.D + args.L + args.zeta - 3.1415809598838047);
  s += 2.7246528878357533e-08 * Math.sin(2*args.D + 2*args.F - args.zeta + 3.1415764220277498);
  s += 2.7202175790745693e-08 * Math.sin(args.F - args.L - args.Ve + args.EM - 0.00029764368631534505);
  s += 2.7198047510244996e-08 * Math.sin(2*args.D + 2*args.F - args.L - args.zeta + 3.1415813089496551);
  s += 2.173580412354453e-08 * Math.sin(2*args.D + args.F + 4*args.EM - 8*args.Ma + 3*args.Ju - 1.284621864555032);
  s += 2.1713654749993707e-08 * Math.sin(2*args.D + args.F - 4*args.EM + 8*args.Ma - 3*args.Ju - 1.8569148328349505);
  s += 2.5729103829707469e-08 * Math.sin(args.F + args.L + args.EM - args.Ju + 0.019504361915556542);
  s += 2.2422215134435176e-08 * Math.sin(args.D + args.EM - args.Sa + 2.9705067985962641);
  s += 2.578531027761376e-08 * Math.sin(args.F + args.L - 3*args.Ve + 3*args.EM + 3.1393293078895428);
  s += 2.2892087758581484e-08 * Math.sin(args.D + 2*args.L + args.EM - 1.452402766470696);
  s += 2.5097958332521799e-08 * Math.sin(2*args.D - args.F + 3*args.EM - 3*args.Ju - 3.1410731904624338);
  s += 2.460550191114971e-08 * Math.sin(args.F - args.L - args.EM + args.Ju + 3.122350375983721);
  s += 2.1169344239792622e-08 * Math.sin(2*args.D - args.F + 2*args.EM - 3*args.Ju + 0.18519319668809225);
  s += 2.4263753012352889e-08 * Math.sin(2*args.D - args.F - args.L + 2*args.Ve - 2*args.EM + 1.9405906779945488e-05);
  s += 2.3209132673970125e-08 * Math.sin(2*args.D + args.F - args.L - 20*args.Ve + 21*args.EM - 1.6024557481517658);
  s += 2.3171802991161682e-08 * Math.sin(2*args.D - args.F - args.L - 20*args.Ve + 21*args.EM - 1.6024601456434595);
  s += 2.3636172458562349e-08 * Math.sin(2*args.D + args.F - args.Ve + args.EM + 0.00027764751652089626);
  s += 1.9231466747275827e-08 * Math.sin(args.D + 5*args.Ve - 4*args.EM + 1.803444056465948);
  s += 1.9797173511695086e-08 * Math.sin(args.F + args.L - 2*args.EM + 3*args.Ju - 0.17742857364214165);
  s += 2.2880779391243751e-08 * Math.sin(2*args.D - args.F - args.L - args.Ve + args.EM + 0.00028717286897227958);
  s += 1.6306213725215755e-08 * Math.sin(2*args.D - args.F + args.EM - 2*args.Ju - 0.94138640153118491);
  s += 2.1809993408338135e-08 * Math.sin(args.F - args.EM + args.Ju + 3.1188869569075051);
  s += 2.2002550262478875e-08 * Math.sin(args.F - args.L + 3*args.Ve - 3*args.EM + 0.0022232768806201187);
  s += 2.1428764705043822e-08 * Math.sin(args.F + args.L - 2*args.zeta - 1.5882496193227099e-05);
  s += 2.1186357864485102e-08 * Math.sin(2*args.F - args.L + args.zeta + 1.0646508437165328e-05);
  s += 1.7274929463381138e-08 * Math.sin(args.D - 3*args.Ve + 4*args.EM + 1.805150778897149);
  s += 1.7097278378998225e-08 * Math.sin(2*args.D - args.F + 3*args.Ve - 5*args.EM - 0.23496980976904541);
  s += 2.0556100079043345e-08 * Math.sin(args.F - args.L - 2*args.zeta + 3.1415774692253007);
  s += 1.4505985426987402e-08 * Math.sin(args.F + args.L + args.EM - 2*args.Ma - 0.80294880431863358);
  s += 2.0331657820401649e-08 * Math.sin(2*args.D - args.F + 6*args.Ve - 6*args.EM - 3.1408913614795604);
  s += 1.4373876422293956e-08 * Math.sin(args.F + args.L - args.EM + 2*args.Ma - 2.3354509591351138);
  s += 1.6874145663679864e-08 * Math.sin(2*args.D + args.F - args.L + 6*args.Ve - 8*args.EM + 2.9182531563722343);
  s += 1.670659419654154e-08 * Math.sin(args.D - 4*args.Ve + 5*args.EM - 1.3362132367824362);
  s += 1.93017478398295e-08 * Math.sin(2*args.D - args.F + args.L + 5*args.Ve - 6*args.EM - 1.5304555117409593);
  s += 1.9630239572204324e-08 * Math.sin(2*args.D - args.F + 2*args.EM - 2*args.Ma + 0.01488500745627346);
  s += 1.7039977726556402e-08 * Math.sin(args.F - args.L + 2*args.EM - 3*args.Ju - 2.9642998191893009);
  s += 1.6944845858403085e-08 * Math.sin(args.D - args.EM + 2*args.Ju + 1.387490337021527);
  s += 1.890848060925367e-08 * Math.sin(2*args.D + args.F - 2*args.EM + 2*args.Ju - 0.017077959335107577);
  s += 1.5870148727161662e-08 * Math.sin(args.D - 3*args.Ve + 2*args.EM - 1.8002508370779104);
  s += 1.591583763408755e-08 * Math.sin(2*args.D - args.F - args.L + 6*args.Ve - 8*args.EM + 2.9180102242661921);
  s += 1.8472805118531451e-08 * Math.sin(2*args.D + args.F - args.L - 2*args.EM + 2*args.Ju - 0.015022854501749479);
  s += 1.5043625165059049e-08 * Math.sin(args.F - args.L + 2*args.Ju - 5*args.Sa - 0.26533261976956291);
  s += 1.5038489568575636e-08 * Math.sin(args.F - args.L - 2*args.Ju + 5*args.Sa - 2.8762154085622469);
  s += 1.2975155481672753e-08 * Math.sin(args.F - args.L - args.EM + 2*args.Ma - 2.3190098407572219);
  s += 1.2965006500507329e-08 * Math.sin(args.F - args.L + args.EM - 2*args.Ma - 0.82519504745465133);
  s += 1.8277475777827806e-08 * Math.sin(2*args.F + 2*args.L - args.zeta + 3.1415724077704703);
  s += 1.486523671088419e-08 * Math.sin(args.D - args.Ve + 3*args.EM + 0.25346119599585998);
  s += 1.8035068937274425e-08 * Math.sin(2*args.D - args.L - args.Lp + args.zeta - 3.1415799126862538);
  s += 1.7983544234551911e-08 * Math.sin(2*args.D + args.F - args.L + 4*args.Ve - 4*args.EM - 3.1414132024284953);
  s += 1.436043511269154e-08 * Math.sin(args.F + args.L - 2*args.Ju + 5*args.Sa - 2.8519840703308876);
  s += 1.4355756843554995e-08 * Math.sin(args.F + args.L + 2*args.Ju - 5*args.Sa - 0.28966652835699586);
  s += 1.4284925547397598e-08 * Math.sin(2*args.D - args.F - 3*args.Ve + 5*args.EM - 2.8636793342819828);
  s += 1.3443643550566146e-08 * Math.sin(args.F + 10*args.Ve - 3*args.EM - 0.4018551586827096);
  s += 1.3389655796879723e-08 * Math.sin(args.F + 2*args.L - 10*args.Ve + 3*args.EM - 2.7397976884775268);
  s += 1.2573698821688319e-08 * Math.sin(args.F - args.EM + 2*args.Ma - 2.5231860339722312);
  s += 1.6841447192110453e-08 * Math.sin(args.F + 2*args.Ve - 3*args.EM - 1.5487132267652712);
  s += 1.2330262655577463e-08 * Math.sin(args.F + args.EM - 2*args.Ma - 0.61544012162196693);
  s += 1.2634195892191361e-08 * Math.sin(args.D + args.F - 34*args.EM + 41*args.Ma - 2*args.Ju + 2.6392138982104427);
  s += 1.2634195892191361e-08 * Math.sin(args.D - args.F - 34*args.EM + 41*args.Ma - 2*args.Ju + 2.6392138982104427);
  s += 1.5514102905697472e-08 * Math.sin(args.D - 2*args.F - args.L + args.EM + 1.6607725516836174);
  s += 1.3737862442291718e-08 * Math.sin(args.D + 6*args.Ve - 5*args.EM + 1.8033898328221794);
  s += 1.5886065605039302e-08 * Math.sin(args.F - 2*args.Ve + 3*args.EM - 1.5944471500846595);
  s += 1.3380701686058447e-08 * Math.sin(args.D + 7*args.Ve - 8*args.EM + 1.3289868607641782);
  s += 1.5805274904486421e-08 * Math.sin(2*args.D - args.F - args.L - 2*args.EM + 2*args.Ju - 0.01494169886722623);
  s += 1.5950370108501806e-08 * Math.sin(2*args.D - args.L - args.Lp - args.zeta + 3.1415802617521043);
  s += 1.3636410321619233e-08 * Math.sin(args.D + 4*args.Ve - 6*args.EM - 0.1857801752031436);
  s += 1.3605650975839886e-08 * Math.sin(args.D + args.L + args.EM - 2*args.Ju + 1.7546136072024676);
  s += 1.2662013844061106e-08 * Math.sin(args.D + args.L + 2*args.Ma + 2.8581631064065798);
  s += 1.5611000531728162e-08 * Math.sin(4*args.D - args.L - args.zeta + 3.1415802617521043);
  s += 1.4253522224622548e-08 * Math.sin(args.D - 2*args.L + args.EM + 1.6603681948035434);
  s += 1.1783812908395087e-08 * Math.sin(args.D + args.EM + args.Ju - args.Sa + 1.1754874798370623);
  s += 1.5271630954950812e-08 * Math.sin(2*args.D - args.Lp + args.zeta - 3.1415804362850293);
  s += 1.13378315488165e-08 * Math.sin(2*args.D - args.F + 2*args.L - 18*args.Ve + 16*args.EM + 2.6783832753803907);
  s += 1.2974714853336143e-08 * Math.sin(args.D - args.L + args.EM - 2*args.Ju - 1.3869617327533648);
  s += 1.4585189305226233e-08 * Math.sin(args.D - args.F + args.EM - args.Ju - 3.1292123757465946);
  s += 1.0977206914933126e-08 * Math.sin(2*args.D - args.F + 18*args.Ve - 16*args.EM + 0.46320092115874323);
  s += 1.4563682273995801e-08 * Math.sin(args.D + args.F + 3*args.Ve - 4*args.EM - 1.5654662570383053);
  s += 1.2091379548191174e-08 * Math.sin(args.D - 2*args.Ve + 3*args.EM - 1.3405670576010429);
  s += 1.4334002035463187e-08 * Math.sin(args.D + args.F + args.EM - args.Ju - 3.1291845810732646);
  s += 1.0476458847610501e-08 * Math.sin(args.F + 8*args.Ve - 13*args.EM - 2.1271838708650166);
  s += 1.0466556297501246e-08 * Math.sin(args.F - 8*args.Ve + 13*args.EM - 1.0144621144143904);
  s += 1.0410756551492789e-08 * Math.sin(2*args.D - args.F + 2*args.EM - 4*args.Ma - 1.0001846344477323);
  s += 1.2282737590915359e-08 * Math.sin(2*args.D - args.F - 2*args.EM + 3*args.Ju - 0.17776475719861681);
  s += 1.4205040856509681e-08 * Math.sin(2*args.D + args.F - 2*args.zeta - 1.5009831566955806e-05);
  s += 1.3926392129315399e-08 * Math.sin(args.F + args.L - 2*args.Ve + 3*args.EM - 1.5514037829622545);
  s += 1.2180022810597583e-08 * Math.sin(2*args.D + args.F + 2*args.EM - 3*args.Ju + 0.17565181579877481);
  s += 1.1955171769712215e-08 * Math.sin(args.D + 6*args.Ve - 8*args.EM + 2.9517842387127153);
  s += 1.3954039580539555e-08 * Math.sin(2*args.D + args.F + 3*args.Ve - 3*args.EM + 3.1411048949793585);
  s += 9.945346093391474e-09 * Math.sin(2*args.D - args.F - 3*args.EM + 4*args.Ma - 2.5877132345208573);
  s += 1.0189342571888883e-08 * Math.sin(2*args.D + args.F + 2*args.L - 18*args.Ve + 16*args.EM + 2.6783835777227369);
  s += 1.3192387023338647e-08 * Math.sin(2*args.D + args.F - args.L - 2*args.Ve + 3*args.EM - 1.5991048180314096);
  s += 1.0991115827435506e-08 * Math.sin(2*args.D - args.F + 8*args.EM - 16*args.Ma + 4*args.Ju + 5*args.Sa - 1.8423508698394653);
  s += 1.0990740119212655e-08 * Math.sin(2*args.D - args.F - 8*args.EM + 16*args.Ma - 4*args.Ju - 5*args.Sa - 1.2992448792754181);
  s += 1.3447377310824683e-08 * Math.sin(args.D - args.F + 3*args.Ve - 4*args.EM - 1.5653831853925344);
  s += 9.9776682436006588e-09 * Math.sin(2*args.D + args.F + 18*args.Ve - 16*args.EM + 0.46320691776610606);
  s += 1.3380857598625036e-08 * Math.sin(args.L - args.Lp + args.zeta - 3.1415807853508797);
  s += 9.5754538763177881e-09 * Math.sin(2*args.D + args.F - args.L - args.EM + 2*args.Ju - 2.2013760551548396);
  s += 1.2974434543312522e-08 * Math.sin(args.F + args.L + 2*args.Ve - 3*args.EM - 1.5924448619280547);
  s += 1.323541349428805e-08 * Math.sin(2*args.D - 2*args.F - args.zeta + 3.1415792145545529);
  s += 1.0752250279637773e-08 * Math.sin(args.D - args.L - 20*args.Ve + 20*args.EM - 0.24504816147258909);
  s += 1.1926707360828689e-08 * Math.sin(args.D + args.L - args.EM + 1.4793964628500045);
  s += 1.0742045828982767e-08 * Math.sin(args.D - 4*args.Ve + 3*args.EM - 1.8035750601676885);
  s += 1.2799075800336633e-08 * Math.sin(2*args.D + args.F - args.L + 0.0011556017299032592);
  s += 9.419496667731912e-09 * Math.sin(2*args.D - args.F - args.L + 5*args.EM - 6*args.Ma + 2.6482551161498487);
  s += 9.227666134753882e-09 * Math.sin(2*args.D - args.F - 2*args.EM + 4*args.Ma - 2.1076454840192937);
  s += 1.2383896628075506e-08 * Math.sin(2*args.D + args.F - args.L - 2*args.EM + 2*args.Ma - 3.1217086896470292);
  s += 9.0077179003821985e-09 * Math.sin(args.F + args.L - 8*args.Ve + 13*args.EM - 0.94035755498192097);
  s += 8.9949597524064934e-09 * Math.sin(args.F + args.L + 8*args.Ve - 13*args.EM - 2.2013577736775947);
  s += 1.2508188464373499e-08 * Math.sin(2*args.D - args.F - args.L + 0.00094694599653070391);
  s += 1.2459711604516766e-08 * Math.sin(args.L - args.Lp - args.zeta + 3.1415797381533284);
  s += 9.1408719930286156e-09 * Math.sin(2*args.D + args.F - args.L + 5*args.EM - 6*args.Ma + 2.6484447561853659);
  s += 1.0151596551301461e-08 * Math.sin(args.D + args.L + args.EM + args.Ju + 1.31935778447554);
  s += 1.2271904380234863e-08 * Math.sin(args.F + args.L - 2*args.Ve + 2*args.EM + 3.1345481639140456);
  s += 1.2246766135128877e-08 * Math.sin(args.F + 2*args.Ve - 2*args.EM + 0.0034010592298158149);
  s += 1.2217304763960871e-08 * Math.sin(args.Lp - args.zeta - 1.0122909661803373e-05);
  s += 1.0429291568029649e-08 * Math.sin(args.D + args.L + 5*args.Ve - 7*args.EM + 2.9547331590506909);
  s += 1.1728835283321161e-08 * Math.sin(2*args.D - args.F + 4*args.Ve - 5*args.EM + 1.608394872769719);
  s += 1.2134290733844837e-08 * Math.sin(2*args.D - args.F + 7*args.Ve - 7*args.EM - 3.1410326276780456);
  s += 1.2118036528675399e-08 * Math.sin(2*args.D + args.F - args.L - args.Ju + 3.1409181946065678);
  s += 1.1741519567102638e-08 * Math.sin(args.F - args.L + 2*args.Ve - 3*args.EM - 1.5968508496914664);
  s += 1.0990690895696286e-08 * Math.sin(2*args.D - args.F - 2*args.EM + args.Ju - 1.474948466335541);
  s += 1.1005270561184848e-08 * Math.sin(args.D - args.Lp - args.EM + 1.4812211426606199);
  s += 9.8892342672379521e-09 * Math.sin(args.D + 7*args.Ve - 6*args.EM + 1.8032879146755645);
  s += 1.1826870798221467e-08 * Math.sin(args.F + args.L + 2*args.Ve - 2*args.EM + 0.0025147252051130413);
  s += 1.112162581014545e-08 * Math.sin(2*args.D + args.F - args.L + args.Ju - 0.066074184328326624);
  s += 1.1796798306828882e-08 * Math.sin(2*args.D - args.F - args.L + 4*args.Ve - 4*args.EM + 3.1415008568005915);
  s += 1.1357864032912479e-08 * Math.sin(args.F - args.L - 2*args.Ve + 3*args.EM - 1.5425324734268833);
  s += 8.8521627200570398e-09 * Math.sin(args.F - args.L - args.Ju - 1.9832086927915153);
  s += 8.7541571449028202e-09 * Math.sin(args.F - args.L + args.Ju - 1.1395916971734281);
  s += 1.1587046978517789e-08 * Math.sin(2*args.F - args.L - args.zeta + 3.1415114957795756);
  s += 1.1547927161597912e-08 * Math.sin(args.F - args.L - 2*args.Ve + 2*args.EM + 3.138788211237622);
  s += 8.3790906251535641e-09 * Math.sin(args.F + args.L - args.EM + 2*args.Ju - 2.1112493221779562);
  s += 8.1910793809043759e-09 * Math.sin(2*args.D + args.F - args.EM + 2*args.Ju - 2.20401731544281);
  s += 8.6008653555298476e-09 * Math.sin(args.F + args.L - args.Ju - 2.0110293899484564);
  s += 8.2807220078702783e-09 * Math.sin(2*args.D + args.F - args.L - 8*args.Ve + 13*args.EM - 1.0118574333324937);
  s += 1.0936824364037015e-08 * Math.sin(2*args.D - args.F - args.L + 5*args.Ve - 6*args.EM + 1.6149975581641627);
  s += 8.6528502198162299e-09 * Math.sin(args.F + args.L + args.Ju - 1.1556174651398403);
  s += 8.4685119318799969e-09 * Math.sin(args.D + args.EM - 3*args.Sa - 2.6771886501009052);
  s += 8.2204760735575187e-09 * Math.sin(2*args.D + args.F - args.L + 8*args.Ve - 13*args.EM - 2.1299601933777002);
  s += 9.1536733704506689e-09 * Math.sin(args.D - 2*args.F + 2*args.Ma + 2.8646440925135646);
  s += 1.0501914099424986e-08 * Math.sin(args.D + 3*args.Ve - 3*args.EM - 3.0628474339588374);
  s += 1.1174600172055983e-08 * Math.sin(2*args.D + args.F - args.L + args.EM - args.Ju + 0.0098392863545463723);
  s += 9.2989204751096661e-09 * Math.sin(args.D + 2*args.F - args.L - 20*args.Ve + 20*args.EM - 0.24507198131526781);
  s += 1.1235108157343297e-08 * Math.sin(args.F - 2*args.EM + 2*args.Ju - 0.0025377045812366582);
  s += 8.0130307254455383e-09 * Math.sin(2*args.D - args.F - args.L - args.EM + 2*args.Ju - 2.2004915680558552);
  s += 1.086074532865921e-08 * Math.sin(2*args.D + args.F - 2*args.EM + 2*args.Ma - 3.1174225698888809);
  s += 1.1069346259667179e-08 * Math.sin(2*args.D + args.F - 2*args.L + 3*args.Ve - 3*args.EM + 0.00066158591464990986);
  s += 8.341098347339687e-09 * Math.sin(args.D + 4*args.EM - 6*args.Ma + 0.41997959868225448);
  s += 1.0731354884900605e-08 * Math.sin(2*args.D - args.F - args.L - 2*args.Ve + 3*args.EM - 1.5976879320406576);
  s += 1.100527056118879e-08 * Math.sin(args.L + args.Lp - args.zeta - 1.3089969390141983e-05);
  s += 7.7821981835143071e-09 * Math.sin(args.F - args.L + 8*args.Ve - 13*args.EM - 2.2120518895191603);
  s += 7.7761850649027439e-09 * Math.sin(args.F - args.L - 8*args.Ve + 13*args.EM - 0.9294477124532986);
  s += 9.2583620417513993e-09 * Math.sin(args.D - 5*args.Ve + 7*args.EM - 2.952297989905043);
  s += 1.0795065974102798e-08 * Math.sin(2*args.D - args.F + args.L + 3*args.Ve - 3*args.EM + 0.0007482019260281631);
  s += 7.9015429571936863e-09 * Math.sin(2*args.D - args.F - 2*args.EM + 3*args.Ma - 2.6353396414204129);
  s += 7.6009426658251749e-09 * Math.sin(2*args.D + args.F - args.L - 12*args.Ve + 8*args.EM - 0.84587375845407553);
  s += 7.5900277278992463e-09 * Math.sin(2*args.D - args.F - args.L - 12*args.Ve + 8*args.EM - 0.84587496578908894);
  s += 7.6027483516314007e-09 * Math.sin(2*args.D + args.F - args.L + args.EM - 2*args.Ma - 0.66235885025376817);
  s += 7.7758879768020856e-09 * Math.sin(2*args.D - args.F + 3*args.EM - 8*args.Ma + 3*args.Ju + 0.51232995079842458);
  s += 1.0372065288464872e-08 * Math.sin(2*args.D - args.F - args.L - 2*args.EM + 2*args.Ma - 3.1222118437049571);
  s += 1.0568938248189716e-08 * Math.sin(args.D + args.zeta + 1.2391837689159033e-05);
  s += 9.0169927370965606e-09 * Math.sin(args.D - args.L + 5*args.Ve - 7*args.EM - 0.18763646989573116);
  s += 1.0462630614291567e-08 * Math.sin(args.F - args.L + 2*args.Ve - 2*args.EM + 0.0068653970095895875);
  s += 7.8485789064326704e-09 * Math.sin(2*args.D - args.F + 9*args.EM - 13*args.Ma - 2.0112053696043963);
  s += 1.0145820258835993e-08 * Math.sin(2*args.D + args.F - 2*args.Ve + 3*args.EM - 1.5956092034757103);
  s += 9.9450173957621813e-09 * Math.sin(args.F - 5*args.Ve + 6*args.EM + 1.5307473744523876);
  s += 1.027805003952322e-08 * Math.sin(args.L + args.Lp + args.zeta + 1.2217304763958334e-05);
  s += 1.0135964988457635e-08 * Math.sin(2*args.D - args.F - args.L - args.Ju - 3.1318377123192351);
  s += 1.0229568671412464e-08 * Math.sin(args.D - args.zeta - 1.2740903539632243e-05);
  s += 8.3917945683568631e-09 * Math.sin(args.D + 8*args.Ve - 9*args.EM + 1.3259977299099432);
  s += 8.3184334309935737e-09 * Math.sin(args.D - args.EM - args.Ju - 1.324247464006149);
  s += 9.3113955715556197e-09 * Math.sin(args.D - 2*args.F + args.L + args.EM + 1.6560264846667843);
  s += 7.2558935169136372e-09 * Math.sin(2*args.D + args.F - args.L + 6*args.EM - 8*args.Ma - 1.0061929720554694);
  s += 9.9871618308572389e-09 * Math.sin(args.Lp + args.zeta + 1.6580627893942854e-05);
  s += 8.1796570010589493e-09 * Math.sin(args.D - args.L + args.EM + args.Ju - 1.8227846723246133);
  s += 9.9256188825102701e-09 * Math.sin(args.F - 3*args.Ve + 3*args.EM + 0.00049758247418796916);
  s += 8.2900776745083185e-09 * Math.sin(2*args.D - args.F - 2*args.Ve + args.EM - 1.3459504827568129);
  s += 9.8365969345516613e-09 * Math.sin(args.D - args.F - args.L + 3*args.Ve - 4*args.EM - 1.5646126808247822);
  s += 9.7818152049771194e-09 * Math.sin(2*args.D + args.F - args.L - 3*args.Ve + 4*args.EM - 1.5816058813649654);
  s += 9.2992306599519913e-09 * Math.sin(2*args.D - args.F - args.L + args.Ju - 0.064853660178549405);
  s += 9.3893659150568094e-09 * Math.sin(2*args.D - args.F - 3*args.Ve + 3*args.EM + 3.0882842627458271);
  s += 9.4350776786937578e-09 * Math.sin(2*args.D - args.F + 6*args.Ve - 7*args.EM - 1.530132594346328);
  s += 9.7271050316291586e-09 * Math.sin(args.F - args.L - 2*args.EM + 2*args.Ju - 0.0060674404698644558);
  s += 8.0616382593575793e-09 * Math.sin(args.D - 5*args.Ve + 6*args.EM - 1.3255842051917914);
  s += 7.1262749720874838e-09 * Math.sin(args.F + args.EM - 2*args.Ju - 1.0332572889270017);
  s += 7.8716728040011132e-09 * Math.sin(args.D - args.L + 2*args.Ma - 0.28356114566419349);
  s += 7.0735345419932315e-09 * Math.sin(args.F - args.L + args.EM - 2*args.Ju - 1.0254180789300689);
  s += 6.9009309357792891e-09 * Math.sin(2*args.D + args.F - args.L - args.EM + 2*args.Ma - 2.4608614194441207);
  s += 7.2020819653488651e-09 * Math.sin(args.F - 18*args.Ve + 16*args.EM - 0.46290137035979673);
  s += 9.5914199784823815e-09 * Math.sin(2*args.D + args.F + 2*args.Ve - 2*args.EM - 0.00024334867182018943);
  s += 6.886282756016851e-09 * Math.sin(2*args.D - args.F - args.L + 6*args.EM - 8*args.Ma - 1.0062489940634189);
  s += 7.8474539306799583e-09 * Math.sin(args.D + args.L + 4*args.Ve - 5*args.EM + 1.3351774763577524);
  s += 9.2280208069890723e-09 * Math.sin(2*args.D - args.F + 3*args.Ve - 4*args.EM - 1.5466406830635726);
  s += 7.7935029612924858e-09 * Math.sin(2*args.D - args.F + args.Me - 2*args.EM + 1.3289239526304484);
  s += 9.3517834727798075e-09 * Math.sin(args.F + args.L - 2*args.EM + 2*args.Ma - 3.1328904960274793);
  s += 8.3405537373935004e-09 * Math.sin(args.F + 2*args.Ju - 5*args.Sa - 3.0166780077102491);
  s += 8.337545953868373e-09 * Math.sin(args.F - 2*args.Ju + 5*args.Sa - 0.12508183120886904);
  s += 6.7284725080276323e-09 * Math.sin(2*args.D - args.F - args.L - 8*args.Ve + 13*args.EM - 1.0116804173102585);
  s += 6.7226499550403144e-09 * Math.sin(args.F + args.L + args.EM - 2*args.Ju - 1.0212645280189012);
  s += 6.6773003654661365e-09 * Math.sin(2*args.D - args.F - args.L + 8*args.Ve - 13*args.EM - 2.130041481531209);
  s += 7.3535501764157537e-09 * Math.sin(2*args.D - args.F + args.L + 4*args.EM - 8*args.Ma + 3*args.Ju - 1.2905273881118333);
  s += 7.3498782753747659e-09 * Math.sin(2*args.D - args.F + args.L - 4*args.EM + 8*args.Ma - 3*args.Ju - 1.8510045165677731);
  s += 9.0883347295824975e-09 * Math.sin(2*args.D - args.F + 2*args.EM - 2*args.Sa + 5.0687012591107184e-05);
  s += 9.0660158367472522e-09 * Math.sin(4*args.D - args.zeta + 3.1415799126862538);
  s += 8.7613453962689182e-09 * Math.sin(2*args.D - args.F + args.L - args.EM + args.Ju + 3.1088206834384406);
  s += 8.9610285347346316e-09 * Math.sin(args.F + 2*args.EM - 2*args.Ma - 0.0045468104511095023);
  s += 8.7974607222453225e-09 * Math.sin(args.F + args.L - 3*args.Ve + 4*args.EM - 1.590842603346718);
  s += 7.440443893664723e-09 * Math.sin(args.D + args.L + args.Ve + 1.8036191092227736);
  s += 7.4120715176932387e-09 * Math.sin(args.D - 5*args.Ve + 4*args.EM - 1.8029133973448292);
  s += 6.4014296452432551e-09 * Math.sin(args.F - args.L - args.EM + 2*args.Ju - 2.1218264702465124);
  s += 8.6427019123077321e-09 * Math.sin(2*args.D + args.F - 3*args.Ve + 4*args.EM - 1.5806474821150251);
  s += 8.6661879550148445e-09 * Math.sin(args.D + args.F - args.L + 3*args.Ve - 4*args.EM - 1.5647998514149954);
  s += 6.1569787082872628e-09 * Math.sin(2*args.D - args.F - args.L + args.EM - 2*args.Ma - 0.66552766173943834);
  s += 6.0886474912723529e-09 * Math.sin(2*args.D + args.F + args.EM - 2*args.Ma - 0.69334780897545856);
  s += 7.119885052684096e-09 * Math.sin(args.D + 8*args.Ve - 7*args.EM + 1.8031395990719961);
  s += 8.5235802052224289e-09 * Math.sin(2*args.D - args.F - 2*args.L + 2*args.EM - 2*args.Ju - 0.00012455564189995915);
  s += 7.8906071360035488e-09 * Math.sin(2*args.D + args.F - args.Ju - 3.0585977591010702);
  s += 8.397661846642195e-09 * Math.sin(2*args.D - args.F - args.EM + args.Sa + 3.1288724135352259);
  s += 8.3329989568002251e-09 * Math.sin(args.F + 3*args.Ve - 4*args.EM - 1.5531631203802665);
  s += 7.5813352371362036e-09 * Math.sin(args.D + 2*args.F + args.EM + 1.689097216714684);
  s += 7.1444981475282852e-09 * Math.sin(2*args.D - args.F + 3*args.EM - 4*args.Ju - 2.9554164656131627);
  s += 8.3110801827585532e-09 * Math.sin(2*args.D + args.F - args.L + 5*args.Ve - 5*args.EM - 3.1405130345382717);
  s += 7.707585255116871e-09 * Math.sin(2*args.D - args.F - 5*args.EM + 8*args.Ma - 3*args.Ju - 0.078985983418437045);
  s += 6.8364096955006601e-09 * Math.sin(2*args.D + args.F + args.Ju - 0.23818848814269647);
  s += 8.1585267051699038e-09 * Math.sin(2*args.D - args.F - args.L - 3*args.Ve + 4*args.EM - 1.5816710086170214);
  s += 7.9313679793191809e-09 * Math.sin(2*args.D - 3*args.F + 5*args.Ve - 6*args.EM - 1.531079566149169);
  s += 8.0924343000000729e-09 * Math.sin(2*args.D - args.F - args.L + args.EM - args.Ju + 0.010050790254259598);
  s += 6.8880207621477654e-09 * Math.sin(args.D + args.Ju + 1.375431210640389);
  s += 5.8392260094943802e-09 * Math.sin(2*args.D + args.F - 8*args.Ve + 13*args.EM - 0.99937737010509009);
  s += 5.7831894113781634e-09 * Math.sin(2*args.D + args.F + 8*args.Ve - 13*args.EM - 2.1428474967786659);
  s += 6.6621789158783484e-09 * Math.sin(2*args.D - args.F - args.Ve + 1.7966831684123237);
  s += 6.663185409105008e-09 * Math.sin(2*args.D - args.F - 2*args.L + 6*args.Ve - 8*args.EM + 2.9168443509401718);
  s += 7.8716505574912698e-09 * Math.sin(args.F - args.L + 2*args.EM - 2*args.Ma - 0.0078835408773179801);
  s += 5.6111638180132176e-09 * Math.sin(2*args.D + args.F - args.EM + 2*args.Ma - 2.4136868744525977);
  s += 7.8319916632009655e-09 * Math.sin(2*args.D + args.F + args.EM - args.Ju + 0.0078570707136150445);
  s += 6.3439417749208773e-09 * Math.sin(args.D - 2*args.Ma - 2.860182133099503);
  s += 6.4576019620675505e-09 * Math.sin(args.D - args.L + 4*args.Ve - 5*args.EM - 1.8058936565251094);
  s += 5.6304944336338753e-09 * Math.sin(2*args.D - args.F + 7*args.EM - 9*args.Ma + 2.1414773467384256);
  s += 7.3174131425849243e-09 * Math.sin(2*args.D - args.F + 8*args.EM - 11*args.Ma + 1.6357970480503781);
  s += 5.7001485770195941e-09 * Math.sin(2*args.D - args.F + 2*args.EM - 3*args.Ma - 0.51591169327125819);
  s += 5.7339768760392184e-09 * Math.sin(2*args.D - args.F + 6*args.EM - 7*args.Ma + 2.6478436979952882);
  s += 7.7214153951501807e-09 * Math.sin(2*args.D - args.F + 8*args.Ve - 8*args.EM - 3.1412083632381695);
  s += 5.4891478051519004e-09 * Math.sin(2*args.D - args.F - args.L - args.EM + 2*args.Ma - 2.4593086625159546);
  s += 7.6601071434481413e-09 * Math.sin(2*args.D - args.F + 0.0051192014745858111);
  s += 7.6692218704144828e-09 * Math.sin(args.F + args.L + 2*args.EM - 2*args.Ma + 0.0016555891295902115);
  s += 7.4249871391773843e-09 * Math.sin(2*args.D + args.F - args.L + 2*args.Ve - 3*args.EM - 1.5531711863919675);
  s += 7.5146120571991954e-09 * Math.sin(3*args.F - 2*args.zeta - 1.8675022996307861e-05);
  s += 7.3402167727356856e-09 * Math.sin(args.F - args.L + 3*args.Ve - 4*args.EM - 1.5517915786453489);
  s += 5.4331985266768636e-09 * Math.sin(args.F - args.EM + 2*args.Ju - 2.1128108183256895);
  s += 5.471040766146982e-09 * Math.sin(2*args.D - args.F + 3*args.EM - 4*args.Ma - 0.490875273632979);
  s += 7.3388172379465756e-09 * Math.sin(args.F + args.L + 2*args.EM - 2*args.Ju - 3.1346228273359942);
  s += 5.4881151043744574e-09 * Math.sin(args.F - 3*args.L + 18*args.Ve - 16*args.EM + 0.46320777934939139);
  s += 5.4811675186429603e-09 * Math.sin(2*args.D - args.F - args.L - 15*args.Ve + 13*args.EM + 2.6818537885176426);
  s += 7.2965636686123511e-09 * Math.sin(args.F - args.L - 2*args.EM + 2*args.Ma + 3.1403976569814431);
  s += 5.4512152748709878e-09 * Math.sin(2*args.D + args.F - args.L - 15*args.Ve + 13*args.EM + 2.6818425697542101);
  s += 6.8318757261348422e-09 * Math.sin(args.F + args.L - 15*args.Ve + 9*args.EM + 4*args.Ma + 3.0916470699360548);
  s += 6.8318757261348422e-09 * Math.sin(args.F - args.L + 15*args.Ve - 9*args.EM - 4*args.Ma + 0.049945583653738558);
  s += 5.0225182928076183e-09 * Math.sin(2*args.D - args.F - args.L + 18*args.Ve - 17*args.EM + 2.2605282583058441);
  s += 6.3940191957245073e-09 * Math.sin(2*args.D - args.F - args.L - 3*args.Me + args.EM + 1.4654426539880065);
  s += 7.0297983760877571e-09 * Math.sin(3*args.L + args.zeta - 3.141581832548431);
  s += 7.0007877855802868e-09 * Math.sin(args.F - 2*args.Ve + 2*args.EM + 3.1378908275647164);
  s += 6.3848499861615561e-09 * Math.sin(2*args.D + args.F - args.L - 3*args.Me + args.EM + 1.4654834650710098);
  s += 6.8402840117585411e-09 * Math.sin(args.F + args.L + 3*args.Ve - 4*args.EM - 1.5519284186451008);
  s += 6.942876742462182e-09 * Math.sin(args.F + args.L - 21*args.Ve + 21*args.EM + 0.001338628341279418);
  s += 6.8539810734290457e-09 * Math.sin(args.F - args.L + 21*args.Ve - 21*args.EM + 3.1402531800093114);
  s += 6.8003870415547885e-09 * Math.sin(args.F - 2*args.EM + 2*args.Ma - 3.1360951973415414);
  s += 6.8125069518508757e-09 * Math.sin(4*args.D - args.F - args.L + 2*args.EM - 2*args.Ju - 3.1395800212232023);
  s += 6.7873937411632027e-09 * Math.sin(args.F - 2*args.L + 6.5800362257328451e-05);
  s += 6.0389122416035556e-09 * Math.sin(args.D - 2*args.L - args.EM + 1.4481468265656758);
  s += 5.7777205300734564e-09 * Math.sin(args.D - args.Ju + 1.7466167905045156);
  s += 5.560744513483373e-09 * Math.sin(args.D - args.L + args.Ve - 1.3380017158792437);
  s += 6.6904287993099354e-09 * Math.sin(2*args.D - 2*args.F + args.L + args.zeta + 1.9547687622343957e-05);
  s += 5.5518919243569652e-09 * Math.sin(args.D + 3*args.Ve - 5*args.EM - 0.22383482507151228);
  s += 5.4338788619489129e-09 * Math.sin(args.D + 9*args.Ve - 10*args.EM + 1.3225884258544571);
  s += 6.4630392727615635e-09 * Math.sin(args.F - args.L - 3*args.Ve + 4*args.EM - 1.5893442396011019);
  s += 6.4748844013128039e-09 * Math.sin(args.F - 3*args.Ve + 4*args.EM - 1.5846476247755912);
  s += 6.3936689711915082e-09 * Math.sin(2*args.D + args.F - args.L + 4*args.Ve - 5*args.EM + 1.5944327992064997);
  s += 4.8545705433675747e-09 * Math.sin(args.F - args.L - 18*args.Ve + 16*args.EM + 2.6783357327977484);
  s += 5.6084270040805706e-09 * Math.sin(args.D + 4*args.Ve - 4*args.EM - 2.9651926890735871);
  s += 6.3995405906435146e-09 * Math.sin(2*args.F + args.L + args.zeta + 1.2217304763967526e-05);
  s += 6.3591956830758545e-09 * Math.sin(2*args.D - args.F + args.L + 4*args.Ve - 4*args.EM - 3.1409527890302793);
  s += 4.9012527436631735e-09 * Math.sin(args.D + 7*args.Ve - 10*args.EM - 1.9474161795053597);
  s += 5.3999543863589528e-09 * Math.sin(args.D + 7*args.Ve - 9*args.EM + 2.9499137931040353);
  s += 5.2518491987941166e-09 * Math.sin(2*args.D + args.F - 2*args.L + 6*args.Ve - 8*args.EM + 2.916453665197976);
  s += 6.223290422742563e-09 * Math.sin(2*args.D - args.F + args.L - args.Ve + args.EM + 0.00023851330987033196);
  s += 5.6031267131760024e-09 * Math.sin(3*args.D + args.L + args.EM - 1.4536650043617323);
  s += 5.1663238517024349e-09 * Math.sin(args.D - 6*args.Ve + 5*args.EM - 1.8026236879567539);
  s += 5.1651018430162883e-09 * Math.sin(args.D + 9*args.Ve - 8*args.EM + 1.8029294356105043);
  s += 6.1907849369893993e-09 * Math.sin(2*args.D - args.F - args.L + 5*args.Ve - 5*args.EM - 3.1377611608988163);
  s += 6.0452985441029208e-09 * Math.sin(2*args.D - args.F + args.L - 2*args.Ve + 2*args.EM + 3.133908336749442);
  s += 5.0368418347138924e-09 * Math.sin(2*args.D - args.F + args.L - 18*args.Ve + 15*args.EM - 1.8082071259343844);
  s += 4.9113946856481204e-09 * Math.sin(args.F + 2*args.L + 4*args.EM - 8*args.Ma + 3*args.Ju - 1.3159107218379142);
  s += 4.9108725402445222e-09 * Math.sin(args.F + 2*args.L - 4*args.EM + 8*args.Ma - 3*args.Ju - 1.8256649607544058);
  s += 5.8593495874933521e-09 * Math.sin(2*args.D - args.F - args.L + 2*args.Ve - 3*args.EM - 1.5522166744771044);
  s += 5.096672937282094e-09 * Math.sin(args.F + 2*args.EM - 3*args.Ju - 2.9657858518397049);
  s += 4.8951834329821617e-09 * Math.sin(2*args.D + args.F - args.L + 3*args.Ve - 5*args.EM - 0.22558764953370528);
  s += 5.6855699866767969e-09 * Math.sin(2*args.D - args.F - args.L + 4*args.Ve - 5*args.EM + 1.5925006396340822);
  s += 5.1151343670933015e-09 * Math.sin(args.D + args.EM - 2*args.Ju + 5*args.Sa - 1.6998591846406343);
  s += 5.6726838974056844e-09 * Math.sin(2*args.D - args.F + args.L + 2*args.Ve - 2*args.EM - 0.0007226717097131585);
  s += 5.4911945384025441e-09 * Math.sin(2*args.D + args.F + args.L - args.EM + args.Ju + 3.1088225743600062);
  s += 5.5268759646464212e-09 * Math.sin(4*args.D - args.L + args.zeta - 3.1415802617521043);
  s += 5.4918119099308658e-09 * Math.sin(2*args.D + args.F + args.Ve - args.EM - 3.1410843371846546);
  s += 5.0983209549817839e-09 * Math.sin(2*args.D - args.F + args.Sa - 1.625257637113982);
  s += 5.3329504922065165e-09 * Math.sin(2*args.D + 2*args.L - args.zeta + 3.1415792145545529);
  s += 5.3227767660563267e-09 * Math.sin(2*args.D + args.F + 2*args.Ve - 3*args.EM - 1.5700386022257271);
  s += 5.2263692591264981e-09 * Math.sin(args.F + 2*args.L - 2*args.EM + 2*args.Ju - 3.1411987499910441);
  s += 5.1297969331345103e-09 * Math.sin(2*args.D - args.F + args.L + 2*args.EM - 2*args.Ju + 0.0009230690048967346);
  s += 5.0786227194319491e-09 * Math.sin(2*args.D - args.F + 4*args.EM - 4*args.Ma + 0.0078891089957002589);
  s += 4.8733448824353639e-09 * Math.sin(2*args.D - args.F - args.Sa - 1.5293501842525188);
  s += 5.0476260425006042e-09 * Math.sin(4*args.D + args.F - 2*args.L + 2*args.EM - 2*args.Ju - 3.139507522973211);
  s += 5.0511120372211276e-09 * Math.sin(2*args.D - args.F + 9*args.Ve - 9*args.EM - 3.1414384833017852);
  s += 5.0420622835407566e-09 * Math.sin(2*args.D + 2*args.F + args.L - args.zeta + 3.1415745021655725);
  s += 4.8738123602810163e-09 * Math.sin(2*args.D + args.F - args.L + 5*args.Ve - 6*args.EM - 1.5370870536328778);
  s += 4.8893772655343777e-09 * Math.sin(2*args.D - args.F - args.EM + args.Ma + 3.1302868039570599);
  return s;
}

// Sum the ELP/MPP02 series: perturbation, latitude T^1 (314 terms)
function Elp_pert_latT1_C(args) {
  var s = 0.0;
  s += 3.6021656506438526e-07 * Math.sin(2*args.D - args.F - args.Lp + 3.1415926535897931);
  s += 1.475288031616318e-07 * Math.sin(2*args.D - args.F + args.Lp);
  s += 1.0806496951931557e-07 * Math.sin(2*args.D + args.F - args.L - args.Lp + 3.1415926535897931);
  s += 9.6914254853796252e-08 * Math.sin(2*args.D + args.F - args.Lp + 3.1415926535897931);
  s += 9.0611676999372266e-08 * Math.sin(2*args.D - args.F - args.L - args.Lp + 3.1415926535897931);
  s += 8.2224400316177299e-08 * Math.sin(args.F + args.L - args.Lp + 3.1415926535897931);
  s += 7.8685260444077692e-08 * Math.sin(args.F + args.Lp);
  s += 6.3207867526829135e-08 * Math.sin(args.D + args.EM + 0.25204576026531644);
  s += 5.2762667837048398e-08 * Math.sin(args.F - args.L + 18*args.Ve - 16*args.EM + 2.0020668213494646);
  s += 5.2741760693889112e-08 * Math.sin(args.F + args.L - 18*args.Ve + 16*args.EM + 1.1395258209979651);
  s += 6.8795061349443149e-08 * Math.sin(args.F - args.L + args.Lp);
  s += 6.4868070532455907e-08 * Math.sin(args.F + args.L + args.Lp);
  s += 6.2007669813909643e-08 * Math.sin(args.F - args.L - args.Lp + 3.1415926535897931);
  s += 5.890486225480862e-08 * Math.sin(args.F - args.Lp + 3.1415926535897931);
  s += 2.6470826988580663e-08 * Math.sin(2*args.D - args.F - 2*args.Lp + 3.1415926535897931);
  s += 2.1477246073152442e-08 * Math.sin(2*args.D - args.F + args.L - args.Lp + 3.1415926535897931);
  s += 1.658062789394613e-08 * Math.sin(args.zeta);
  s += 1.5998851476614688e-08 * Math.sin(2*args.D + args.F - args.L + args.Lp);
  s += 1.5417075059283246e-08 * Math.sin(2*args.D + args.F + args.Lp);
  s += 1.4334055983337908e-08 * Math.sin(2*args.D - args.F - 0.016781735806098388);
  s += 1.3817189911621777e-08 * Math.sin(2*args.D + args.F + args.L - args.Lp + 3.1415926535897931);
  s += 1.0035643198967394e-08 * Math.sin(2*args.D - args.F + args.L + args.Lp);
  s += 9.7932363584126275e-09 * Math.sin(args.D + args.F + args.Lp + 3.1415926535897931);
  s += 9.7932363584126275e-09 * Math.sin(args.D - args.F + args.Lp + 3.1415926535897931);
  s += 9.6962736221907205e-09 * Math.sin(args.F + 2*args.L - args.Lp + 3.1415926535897931);
  s += 9.5993108859688118e-09 * Math.sin(2*args.D - args.F - args.L + args.Lp);
  s += 9.3569040454140452e-09 * Math.sin(2*args.D + args.F - 2*args.Lp + 3.1415926535897931);
  s += 7.9509443701963897e-09 * Math.sin(2*args.D - args.F - 2*args.L - args.Lp + 3.1415926535897931);
  s += 7.8055002658635301e-09 * Math.sin(args.F + 2*args.L + args.Lp);
  s += 5.8472849399720522e-09 * Math.sin(args.F + 2*args.L - 18*args.Ve + 16*args.EM + 1.1393731529888096);
  s += 7.6600561615306687e-09 * Math.sin(2*args.D + args.F - args.L - 2*args.Lp + 3.1415926535897931);
  s += 5.6655729998959271e-09 * Math.sin(args.F + 18*args.Ve - 16*args.EM + 2.0022254148027567);
  s += 7.2237238485320865e-09 * Math.sin(4*args.D - args.F - args.L - args.Lp + 3.1415926535897931);
  s += 6.5449846949787359e-09 * Math.sin(2*args.D - args.F - args.L - 2*args.Lp + 3.1415926535897931);
  s += 5.0420622835391734e-09 * Math.sin(4*args.D - args.F - args.Lp + 3.1415926535897931);
  s += 3.620608302521224e-09 * Math.sin(args.F + args.L - 10*args.Ve + 3*args.EM + 1.8631663814314117);
  s += 3.6204264124539144e-09 * Math.sin(args.F - args.L + 10*args.Ve - 3*args.EM + 1.2784262294226041);
  s += 3.5378584974515078e-09 * Math.sin(args.D - args.L + args.EM - 2.8918120226688546);
  s += 4.1209162894310553e-09 * Math.sin(4*args.D + args.F - args.L - args.Lp + 3.1415926535897931);
  s += 3.3439411491821118e-09 * Math.sin(args.D + args.L + args.EM + 0.24927373266244054);
  s += 3.8300280807653344e-09 * Math.sin(args.F - 2*args.L - args.Lp + 3.1415926535897931);
  s += 3.6845839764324739e-09 * Math.sin(args.F - 2*args.L + args.Lp);
  s += 2.8964817274245806e-09 * Math.sin(2*args.D - args.F + 5*args.Ve - 6*args.EM + 0.31834060084814203);
  s += 3.2967330315448451e-09 * Math.sin(2*args.D - args.F + 2*args.Lp);
  s += 2.9088820866572155e-09 * Math.sin(2*args.D + args.F + args.L + args.Lp);
  s += 2.763437982324355e-09 * Math.sin(2*args.D + args.F - args.L + 2*args.Lp);
  s += 2.763437982324355e-09 * Math.sin(args.F + args.L - 2*args.Lp + 3.1415926535897931);
  s += 2.6179938779914945e-09 * Math.sin(4*args.D + args.F - 2*args.L - args.Lp + 3.1415926535897931);
  s += 2.5695125098805406e-09 * Math.sin(2*args.D + args.F);
  s += 2.5695125098805406e-09 * Math.sin(2*args.D - args.F - args.L + 2*args.Lp);
  s += 1.9284270805203491e-09 * Math.sin(args.D - args.EM - 0.37865906361969431);
  s += 1.8307966609636349e-09 * Math.sin(2*args.D - args.F + args.L - 18*args.Ve + 16*args.EM + 1.139375400303078);
  s += 1.827872744437526e-09 * Math.sin(2*args.D - args.F - args.L + 18*args.Ve - 16*args.EM + 2.0022175392737402);
  s += 1.8502173256099659e-09 * Math.sin(args.D + args.EM - 2*args.Ju - 0.3930281624844944);
  s += 2.3271056693257727e-09 * Math.sin(args.F - args.L + 2*args.Lp);
  s += 2.0846988287710048e-09 * Math.sin(4*args.D - args.F - args.L + args.Lp);
  s += 1.9392547244381439e-09 * Math.sin(4*args.D + args.F - args.Lp + 3.1415926535897931);
  s += 1.793810620105283e-09 * Math.sin(2*args.D + args.F - args.L);
  s += 1.6968478838833758e-09 * Math.sin(2*args.D - args.F + args.L - 2*args.Lp + 3.1415926535897931);
  s += 1.181529184388097e-09 * Math.sin(2*args.D + args.F - 18*args.Ve + 16*args.EM + 1.1393838856067284);
  s += 1.5514037795505154e-09 * Math.sin(2*args.D - args.F + 2*args.L - args.Lp + 3.1415926535897931);
  s += 1.1454831267219783e-09 * Math.sin(2*args.D + args.F - 2*args.L + 18*args.Ve - 16*args.EM + 2.0022134722319116);
  s += 1.5029224114395617e-09 * Math.sin(2*args.D + args.F + 2*args.L - args.Lp + 3.1415926535897931);
  s += 1.5029224114395617e-09 * Math.sin(args.F - args.L - 2*args.Lp + 3.1415926535897931);
  s += 1.2577098255602638e-09 * Math.sin(args.D + 4*args.Ve - 5*args.EM - 0.18229742023338311);
  s += 1.255106315145662e-09 * Math.sin(args.F - args.L - 4*args.EM + 8*args.Ma - 3*args.Ju + 3.0093611995562588);
  s += 1.2550335054724744e-09 * Math.sin(args.F - args.L + 4*args.EM - 8*args.Ma + 3*args.Ju + 0.13223354316706373);
  s += 1.3235543840893908e-09 * Math.sin(2*args.D - args.F + 4*args.EM - 8*args.Ma + 3*args.Ju - 0.06640951501754222);
  s += 1.3231354424669868e-09 * Math.sin(2*args.D - args.F - 4*args.EM + 8*args.Ma - 3*args.Ju - 3.0752456661959031);
  s += 1.4059596752176545e-09 * Math.sin(2*args.D + args.F + args.L - 2*args.Lp + 3.1415926535897931);
  s += 1.4059596752176545e-09 * Math.sin(args.F + 2*args.Lp);
  s += 1.1533102874869735e-09 * Math.sin(args.D + args.Ve - 2.9386072706204551);
  s += 1.3574783071067005e-09 * Math.sin(4*args.D - args.F + args.Lp);
  s += 1.3574783071067005e-09 * Math.sin(2*args.D - args.F - 3*args.Lp + 3.1415926535897931);
  s += 1.3574783071067005e-09 * Math.sin(args.F + args.L + 2*args.Lp);
  s += 1.0206119956997193e-09 * Math.sin(2*args.D + args.F + args.L - 18*args.Ve + 16*args.EM + 1.1393768748826882);
  s += 1.0116475264960221e-09 * Math.sin(2*args.D + args.F - args.L + 18*args.Ve - 16*args.EM + 2.0022173501114739);
  s += 1.1813587884268281e-09 * Math.sin(args.F + args.L + 4*args.EM - 8*args.Ma + 3*args.Ju + 0.11011383118765601);
  s += 1.1812739735850549e-09 * Math.sin(args.F + args.L - 4*args.EM + 8*args.Ma - 3*args.Ju + 3.0314828449859106);
  s += 1.008165086378062e-09 * Math.sin(args.D + 2*args.Ve - 2*args.EM - 1.2506373141972755);
  s += 1.2605155708847933e-09 * Math.sin(2*args.D - args.F - args.L);
  s += 1.2605155708847933e-09 * Math.sin(args.D + args.F + args.L + args.Lp + 3.1415926535897931);
  s += 8.325027034708847e-10 * Math.sin(args.F - 4*args.EM + 8*args.Ma - 3*args.Ju - 0.42294840680217372);
  s += 8.3244501896260395e-10 * Math.sin(args.F + 4*args.EM - 8*args.Ma + 3*args.Ju - 2.7186395746875673);
  s += 1.0665900984409792e-09 * Math.sin(2*args.D - args.F + args.L);
  s += 1.0665900984409792e-09 * Math.sin(2*args.D - 3*args.F - args.Lp + 3.1415926535897931);
  s += 9.6962736221907197e-10 * Math.sin(2*args.D - args.F - 2*args.L + args.Lp + 3.1415926535897931);
  s += 9.2114599410811847e-10 * Math.sin(args.F + 3*args.L - args.Lp + 3.1415926535897931);
  s += 9.2114599410811847e-10 * Math.sin(args.L - args.zeta);
  s += 7.5307322084913258e-10 * Math.sin(args.D + args.EM - 2*args.Sa + 0.25819923319181293);
  s += 8.7266462599716487e-10 * Math.sin(args.L + args.zeta);
  s += 8.2418325788621127e-10 * Math.sin(4*args.D - args.F - args.L - 2*args.Lp + 3.1415926535897931);
  s += 6.8159274495903486e-10 * Math.sin(args.D + args.EM - args.Ju + 2.9693982727585189);
  s += 7.7570188977525768e-10 * Math.sin(2*args.D + args.F - 2*args.L - args.Lp);
  s += 7.7570188977525768e-10 * Math.sin(2*args.D - args.F + 2*args.L + args.Lp);
  s += 7.7570188977525768e-10 * Math.sin(args.F + 3*args.L + args.Lp);
  s += 6.302577854425982e-10 * Math.sin(3*args.D - args.L + args.EM + 0.25853754196004552);
  s += 5.2206988480947626e-10 * Math.sin(args.F + args.L - 15*args.Ve + 9*args.EM + 4*args.Ma - 0.66880319753446849);
  s += 5.2206988480947626e-10 * Math.sin(args.F - args.L + 15*args.Ve - 9*args.EM - 4*args.Ma - 2.4727894560553247);
  s += 7.2722052166430387e-10 * Math.sin(4*args.D - args.F - 2*args.Lp + 3.1415926535897931);
  s += 5.3936383292669652e-10 * Math.sin(args.F + 3*args.L - 18*args.Ve + 16*args.EM + 1.1393720678202992);
  s += 5.2469977140022897e-10 * Math.sin(2*args.D + args.F - args.L + 2*args.EM - 3*args.Ju + 1.0624595400753913);
  s += 5.9820745501849305e-10 * Math.sin(args.D + 2*args.Ve - 3*args.EM + 2.9515372324182771);
  s += 5.4312784861596378e-10 * Math.sin(args.D + args.EM + args.Sa - 0.31939203033756264);
  s += 5.1695373154806338e-10 * Math.sin(args.F + args.L + 18*args.Ve - 16*args.EM + 2.002228481794778);
  s += 4.9902608483627709e-10 * Math.sin(2*args.D - args.F - args.L + 2*args.EM - 3*args.Ju + 1.0624456216149949);
  s += 6.7873915355335027e-10 * Math.sin(4*args.D - args.F + args.L - args.Lp + 3.1415926535897931);
  s += 6.7873915355335027e-10 * Math.sin(2*args.D + args.F - 2*args.L + args.Lp + 3.1415926535897931);
  s += 6.7873915355335027e-10 * Math.sin(2*args.D - args.F - 3*args.L - args.Lp + 3.1415926535897931);
  s += 6.7873915355335027e-10 * Math.sin(2*args.D - 3*args.F + args.Lp);
  s += 6.7873915355335027e-10 * Math.sin(args.D + args.F - args.L + args.Lp);
  s += 6.7873915355335027e-10 * Math.sin(2*args.F - args.zeta);
  s += 4.7005437585728254e-10 * Math.sin(2*args.D - args.F - args.L - 3*args.Me + args.EM + 1.0106668385119295);
  s += 4.6936564061203861e-10 * Math.sin(2*args.D + args.F - args.L - 3*args.Me + args.EM + 1.0106680022262584);
  s += 5.0967289785271146e-10 * Math.sin(args.D + 8*args.Ve - 12*args.EM + 0.29394833482415883);
  s += 6.3025778544239667e-10 * Math.sin(4*args.D + args.F - args.L + args.Lp);
  s += 6.3025778544239667e-10 * Math.sin(4*args.D - args.F - 2*args.L - args.Lp + 3.1415926535897931);
  s += 6.3025778544239667e-10 * Math.sin(2*args.D - args.zeta);
  s += 5.2622305570371815e-10 * Math.sin(args.D + 2*args.Ve - args.EM - 2.9385083943097716);
  s += 4.848136811095516e-10 * Math.sin(args.D + 1.2816961497701826);
  s += 5.8177641733144318e-10 * Math.sin(4*args.D + args.F - args.L - 2*args.Lp + 3.1415926535897931);
  s += 5.8177641733144318e-10 * Math.sin(2*args.D + args.F - 3*args.Lp + 3.1415926535897931);
  s += 5.3329504922048958e-10 * Math.sin(2*args.D - args.F - 2*args.L - 2*args.Lp + 3.1415926535897931);
  s += 4.5209119970579932e-10 * Math.sin(args.D + 3*args.Ve - 4*args.EM + 2.955360398101627);
  s += 4.1213568999682706e-10 * Math.sin(2*args.D - args.F - 2*args.Ve + 3*args.EM + 2.8329963675753769);
  s += 4.0184573422854033e-10 * Math.sin(args.F + 10*args.Ve - 3*args.EM + 1.2784149263559095);
  s += 4.0025477945786906e-10 * Math.sin(args.F + 2*args.L - 10*args.Ve + 3*args.EM + 1.8631811564815057);
  s += 4.8481368110953598e-10 * Math.sin(2*args.D + args.F + args.L);
  s += 3.8785094488764461e-10 * Math.sin(args.D - 2*args.F + args.EM - 2.8830551116296741);
  s += 3.9068517234479597e-10 * Math.sin(args.D + 5*args.Ve - 6*args.EM - 0.17631513268066487);
  s += 3.1766941770708843e-10 * Math.sin(args.D - 3*args.Ve + 6*args.EM + 0.84884885590514747);
  s += 3.7079654179915851e-10 * Math.sin(args.F - args.L + 2*args.Ju - 5*args.Sa + 1.3640671495568839);
  s += 3.7071603981742467e-10 * Math.sin(args.F - args.L - 2*args.Ju + 5*args.Sa + 1.7775891218395492);
  s += 4.3633231299858244e-10 * Math.sin(3*args.D - args.F + args.Lp + 3.1415926535897931);
  s += 4.3633231299858244e-10 * Math.sin(args.D - args.F + args.L + args.Lp + 3.1415926535897931);
  s += 4.3633231299858244e-10 * Math.sin(args.F + args.L);
  s += 4.3633231299858244e-10 * Math.sin(args.F - 2*args.Lp + 3.1415926535897931);
  s += 4.3633231299858244e-10 * Math.sin(args.F - args.L + 3.1415926535897931);
  s += 3.6457081385632191e-10 * Math.sin(args.D + 2*args.EM - 2*args.Ma - 2.9523629559233893);
  s += 3.359357133583842e-10 * Math.sin(args.F + args.L - 2*args.Ju + 5*args.Sa + 1.8747063751181152);
  s += 3.3582556446992841e-10 * Math.sin(args.F + args.L + 2*args.Ju - 5*args.Sa + 1.2667513028060182);
  s += 3.9949730352394221e-10 * Math.sin(2*args.D - args.F - 8*args.Ve + 13*args.EM + 1.5218677226963895);
  s += 3.1333699708878173e-10 * Math.sin(args.F + 2*args.Ju - 5*args.Sa - 1.1208597019954993);
  s += 3.1326852786828216e-10 * Math.sin(args.F - 2*args.Ju + 5*args.Sa - 2.0208537003698899);
  s += 3.9714833115967731e-10 * Math.sin(2*args.D - args.F + 8*args.Ve - 13*args.EM + 1.6203493768428689);
  s += 3.3936957677670073e-10 * Math.sin(3*args.D + args.EM + 0.2585375419601102);
  s += 3.8477404218412834e-10 * Math.sin(args.D + 5*args.Ve - 7*args.EM + 0.041413250647509468);
  s += 3.38266094814344e-10 * Math.sin(args.D + 3*args.Ve - 2*args.EM - 2.9384573258174393);
  s += 2.9088820866573927e-10 * Math.sin(args.D + 2*args.EM - 1.0289059770369482);
  s += 2.9088820866571156e-10 * Math.sin(args.F + args.EM + 2.1083442973739217);
  s += 2.9088820866571156e-10 * Math.sin(args.F - args.EM + 1.0332483562158716);
  s += 3.8785094488762884e-10 * Math.sin(4*args.D + args.F + args.L - args.Lp + 3.1415926535897931);
  s += 3.8785094488762884e-10 * Math.sin(4*args.D - args.F - args.L);
  s += 3.8785094488762884e-10 * Math.sin(2*args.D + args.F + 2*args.L + args.Lp);
  s += 3.8785094488762884e-10 * Math.sin(2*args.D + args.F - args.L - 3*args.Lp + 3.1415926535897931);
  s += 3.8785094488762884e-10 * Math.sin(args.F + 2*args.L - 2*args.Lp + 3.1415926535897931);
  s += 3.8785094488762884e-10 * Math.sin(args.F - 2*args.zeta);
  s += 3.0502605736384234e-10 * Math.sin(2*args.D - args.F + 2*args.Ve - 3*args.EM + 0.28921021457353352);
  s += 3.2158277945635546e-10 * Math.sin(args.D + args.Ve - 2*args.EM + 2.944774838023875);
  s += 3.4610611983581095e-10 * Math.sin(args.D + 2*args.Ma - 1.6670569158721926);
  s += 2.8476110997238596e-10 * Math.sin(2*args.D - args.F - 3*args.Ve + 4*args.EM + 2.7862299353970235);
  s += 2.908882086657005e-10 * Math.sin(2*args.D - args.F + 2*args.EM - 0.29794044421898536);
  s += 2.5715893267295397e-10 * Math.sin(2*args.D + args.F - args.L - 12*args.Ve + 8*args.EM - 2.4513871991402261);
  s += 2.5679328102931846e-10 * Math.sin(2*args.D - args.F - args.L - 12*args.Ve + 8*args.EM - 2.451387850146884);
  s += 2.4448877527055989e-10 * Math.sin(2*args.D - args.F - args.EM + 2*args.Ju + 2.374011808153758);
  s += 2.9088820866573048e-10 * Math.sin(2*args.D - args.F + args.EM - 1.3733238411048601);
  s += 2.9088820866573798e-10 * Math.sin(2*args.D - args.F + 5*args.EM + 1.7682386182888614);
  s += 2.9295062761071829e-10 * Math.sin(args.D - args.L - args.EM - 0.18367236160325962);
  s += 3.097856145126916e-10 * Math.sin(args.D + args.EM + args.Ju - 3.0333035598334788);
  s += 2.5022075319260348e-10 * Math.sin(2*args.D - args.F + 9*args.EM - 13*args.Ma - 0.51129228711949271);
  s += 3.3936957677667514e-10 * Math.sin(4*args.D + args.F - 2*args.L + args.Lp);
  s += 3.3936957677667514e-10 * Math.sin(4*args.D - args.F);
  s += 3.3936957677667514e-10 * Math.sin(2*args.D + args.F + 2*args.Lp);
  s += 3.3936957677667514e-10 * Math.sin(2*args.D - args.F - args.L - 3*args.Lp + 3.1415926535897931);
  s += 2.4633245632985464e-10 * Math.sin(2*args.D - args.F - args.Ju - 2.1116769717077983);
  s += 2.673521100196259e-10 * Math.sin(2*args.D + args.F - args.L - 20*args.Ve + 21*args.EM + 2.8236436477768825);
  s += 2.669077984681865e-10 * Math.sin(2*args.D - args.F - args.L - 20*args.Ve + 21*args.EM + 2.8236435231258761);
  s += 2.8450879375569944e-10 * Math.sin(args.D - args.Ve + 2.9405321473767181);
  s += 2.3890057168007789e-10 * Math.sin(2*args.D - args.F + args.EM - 2*args.Ma + 0.92412092697114945);
  s += 2.7799765409298066e-10 * Math.sin(args.D - args.Ve + 2*args.EM + 0.20140605146321849);
  s += 2.4240684055476877e-10 * Math.sin(args.D + 3*args.EM + 2.6845179750958277);
  s += 2.3019654795825761e-10 * Math.sin(2*args.D - args.F - args.EM + 2*args.Ma + 2.228206944185978);
  s += 2.6295789086650535e-10 * Math.sin(args.D + args.EM + 2*args.Ju - 5*args.Sa - 2.9748345775663716);
  s += 2.9088820866572159e-10 * Math.sin(4*args.D + args.F + args.Lp);
  s += 2.9088820866572159e-10 * Math.sin(4*args.D + args.F - 2*args.Lp + 3.1415926535897931);
  s += 2.9088820866572159e-10 * Math.sin(4*args.D + args.F - 2*args.L - 2*args.Lp + 3.1415926535897931);
  s += 2.9088820866572159e-10 * Math.sin(3*args.D - args.F - args.Lp);
  s += 2.9088820866572159e-10 * Math.sin(2*args.D - args.F - 2*args.L + 2*args.Lp);
  s += 2.9088820866572159e-10 * Math.sin(args.F - 3*args.L + args.Lp);
  s += 2.9088820866572159e-10 * Math.sin(args.F - 3*args.L - args.Lp + 3.1415926535897931);
  s += 2.0593307073869809e-10 * Math.sin(2*args.D - args.F + args.Ju - 1.0839950426902796);
  s += 2.3331618197218084e-10 * Math.sin(args.D + 4*args.Ve - 3*args.EM - 2.9384675263407196);
  s += 2.150779955802198e-10 * Math.sin(args.D - 2*args.L + args.EM + 2.8036346813978028);
  s += 1.9392547244381121e-10 * Math.sin(2*args.D - args.F + 4*args.EM + 0.60635914713512085);
  s += 2.3962983409230356e-10 * Math.sin(2*args.D + args.F + 4*args.EM - 8*args.Ma + 3*args.Ju - 0.087184619294513419);
  s += 2.39471714793228e-10 * Math.sin(2*args.D + args.F - 4*args.EM + 8*args.Ma - 3*args.Ju - 3.0544870050380304);
  s += 1.9545842149969971e-10 * Math.sin(2*args.D - args.F + 2*args.L - 18*args.Ve + 16*args.EM + 1.1393726837043414);
  s += 1.9155085749143265e-10 * Math.sin(2*args.D - args.F - 8*args.EM + 15*args.Ma - 1.0877303141054642);
  s += 1.8313505810951417e-10 * Math.sin(args.D + args.EM - 2*args.Ju + 5*args.Sa + 2.5741380245860488);
  s += 1.8707752979948609e-10 * Math.sin(2*args.D - args.F + 8*args.EM - 15*args.Ma - 2.0566649495118217);
  s += 1.892574671069212e-10 * Math.sin(2*args.D - args.F + 18*args.Ve - 16*args.EM + 2.0022533542496186);
  s += 2.4240684055476799e-10 * Math.sin(3*args.D + args.F - args.L + args.Lp + 3.1415926535897931);
  s += 2.4240684055476799e-10 * Math.sin(3*args.D - args.F - args.L - args.Lp);
  s += 2.4240684055476799e-10 * Math.sin(2*args.D - args.F - 3*args.L + args.Lp + 3.1415926535897931);
  s += 2.4240684055476799e-10 * Math.sin(args.D + args.F - args.Lp);
  s += 2.4240684055476799e-10 * Math.sin(args.D - args.F + args.L - args.Lp);
  s += 2.4240684055476799e-10 * Math.sin(args.F - 2*args.L + 3.1415926535897931);
  s += 1.7747740978148104e-10 * Math.sin(2*args.D - args.F - 2*args.L + 2*args.EM - 3*args.Ju + 1.0621765318635266);
  s += 2.0591805379211509e-10 * Math.sin(args.D + 6*args.Ve - 7*args.EM - 0.16859570680592967);
  s += 1.939254724438223e-10 * Math.sin(args.D + 2*args.L + args.EM + 0.2585375419601193);
  s += 1.7665598781904297e-10 * Math.sin(args.F + args.L - 26*args.Ve + 29*args.EM - 1.1124299050665019);
  s += 1.7665598781904297e-10 * Math.sin(args.F - args.L + 26*args.Ve - 29*args.EM - 2.0291627485232917);
  s += 1.9392547244380891e-10 * Math.sin(2*args.D - args.F + 3*args.EM + 0.25346683688417571);
  s += 2.0606292615212126e-10 * Math.sin(args.D + args.Ve - args.EM + 1.7270870806932488);
  s += 1.7565213062821791e-10 * Math.sin(2*args.D + args.F + 2*args.L - 18*args.Ve + 16*args.EM + 1.1393749544381908);
  s += 1.8478694342969811e-10 * Math.sin(args.D + 3*args.Ve - 3*args.EM - 1.2608598037335184);
  s += 1.7834173361227352e-10 * Math.sin(2*args.D + args.F - args.L + 4*args.EM - 8*args.Ma + 3*args.Ju - 0.37134299409809834);
  s += 1.7778460580986635e-10 * Math.sin(2*args.D + args.F - args.L - 4*args.EM + 8*args.Ma - 3*args.Ju - 2.7683976513042259);
  s += 1.7199373782454185e-10 * Math.sin(2*args.D + args.F + 18*args.Ve - 16*args.EM + 2.0021965338624699);
  s += 1.9150918104270548e-10 * Math.sin(args.D - 2*args.Ve + args.EM + 2.9408418862919024);
  s += 1.6325204577205318e-10 * Math.sin(2*args.D - args.F + 2*args.EM - 4*args.Ma + 0.49518247703410007);
  s += 1.6663435525784319e-10 * Math.sin(args.D - args.L - 20*args.Ve + 20*args.EM - 1.9968241549681858);
  s += 1.7278009027127097e-10 * Math.sin(2*args.D - args.F + args.L + 5*args.Ve - 6*args.EM + 0.31832305334494337);
  s += 2.0476978297959104e-10 * Math.sin(args.D + args.EM - args.Sa - 1.5083374553323003);
  s += 1.8085091353659013e-10 * Math.sin(args.D - 3*args.Ve + 4*args.EM - 2.9538976224065068);
  s += 1.9392547244383375e-10 * Math.sin(2*args.D - args.F - args.EM - 0.054549044040589134);
  s += 1.5986350839576181e-10 * Math.sin(2*args.D - args.F - args.L + 4*args.EM - 8*args.Ma + 3*args.Ju - 0.30405544965180664);
  s += 1.593263515148922e-10 * Math.sin(2*args.D - args.F - args.L - 4*args.EM + 8*args.Ma - 3*args.Ju - 2.8357953756226371);
  s += 1.453656431293116e-10 * Math.sin(2*args.D - args.F - 2*args.EM + 4*args.Ma + 2.6676131905974558);
  s += 1.6546255956119598e-10 * Math.sin(args.D + 5*args.Ve - 4*args.EM - 2.9385999375990153);
  s += 1.4544410433284958e-10 * Math.sin(2*args.D - 3*args.F + 2*args.EM + 2.6905210350581208);
  s += 1.9392547244381442e-10 * Math.sin(6*args.D - args.F - args.L - args.Lp + 3.1415926535897931);
  s += 1.9392547244381442e-10 * Math.sin(4*args.D - args.F + args.L + args.Lp);
  s += 1.9392547244381442e-10 * Math.sin(2*args.D - args.L + args.zeta);
  s += 1.9392547244381442e-10 * Math.sin(2*args.D - 3*args.F + args.L - args.Lp);
  s += 1.9392547244381442e-10 * Math.sin(args.D + args.F - 2*args.L + args.Lp + 3.1415926535897931);
  s += 1.9392547244381442e-10 * Math.sin(args.D - args.F - 2*args.L + args.Lp + 3.1415926535897931);
  s += 1.9392547244381442e-10 * Math.sin(args.F + 3.1415926535897931);
  s += 1.4413303519184448e-10 * Math.sin(args.D + 2*args.F - args.L - 20*args.Ve + 20*args.EM - 1.9968236865398168);
  s += 1.4544410433286219e-10 * Math.sin(args.D - 2*args.F + 3*args.EM + 2.7563648028199061);
  s += 1.4035047840083078e-10 * Math.sin(args.D - args.EM + 2*args.Ju - 2.7483548410837644);
  s += 1.4544410433287718e-10 * Math.sin(args.D - 2*args.F - args.L + args.EM - 2.8830551116297274);
  s += 1.4021789403834646e-10 * Math.sin(args.D + args.F + 3*args.Ve - 4*args.EM + 0.32364591458708458);
  s += 1.7337873200318575e-10 * Math.sin(2*args.D - args.F + 8*args.EM - 11*args.Ma + 3.1388926743378893);
  s += 1.2033165872218461e-10 * Math.sin(2*args.D - args.F + args.EM - 2*args.Ju + 0.76271393094636208);
  s += 1.3335174480113591e-10 * Math.sin(2*args.D - args.F + 3*args.Ve - 5*args.EM - 2.8319649342848159);
  s += 1.2703786642186444e-10 * Math.sin(2*args.D - args.F + 3*args.EM - 8*args.Ma + 3*args.Ju + 1.9737316089591648);
  s += 1.2422013326386961e-10 * Math.sin(args.F - 18*args.Ve + 16*args.EM - 2.0017964351365434);
  s += 1.2952808414790581e-10 * Math.sin(args.D - args.F + 3*args.Ve - 4*args.EM + 0.32351023157008024);
  s += 1.4752814722346967e-10 * Math.sin(args.F + 2*args.L + 4*args.EM - 8*args.Ma + 3*args.Ju + 0.11590689042605873);
  s += 1.4750181555466581e-10 * Math.sin(args.F + 2*args.L - 4*args.EM + 8*args.Ma - 3*args.Ju + 3.0257035967108945);
  s += 1.2969179838230169e-10 * Math.sin(2*args.D - args.F + 3*args.Ve - 4*args.EM + 0.29179736698198472);
  s += 1.1541503356956146e-10 * Math.sin(2*args.D - args.F + 2*args.EM - 3*args.Ju + 1.0611385680890539);
  s += 1.3531813335597726e-10 * Math.sin(args.F + args.L - 8*args.Ve + 13*args.EM + 1.3999356993041612);
  s += 1.3519517031483148e-10 * Math.sin(args.F + args.L + 8*args.Ve - 13*args.EM + 1.7414209299207097);
  s += 1.2524496409814074e-10 * Math.sin(2*args.D - args.F + args.L - 10*args.Ve + 3*args.EM + 1.8631662051386673);
  s += 1.2524496409814074e-10 * Math.sin(2*args.D - args.F - args.L + 10*args.Ve - 3*args.EM + 1.2784264484511261);
  s += 1.3053904538715067e-10 * Math.sin(args.D - 3*args.Ve + 2*args.EM + 2.9379969774092736);
  s += 1.3990069192115629e-10 * Math.sin(args.D + 9*args.EM - 15*args.Ma + 3.0517768676850947);
  s += 1.1219272697470071e-10 * Math.sin(2*args.D - args.F - 3*args.Ve + 5*args.EM - 0.4564089712046151);
  s += 1.0424697643897581e-10 * Math.sin(args.F - args.EM + 2*args.Ma + 2.283358612722366);
  s += 1.168104686089808e-10 * Math.sin(args.F + args.L - 2*args.Ve + 3*args.EM + 2.8386972465790095);
  s += 1.4544410433286079e-10 * Math.sin(6*args.D - args.F - 2*args.L - args.Lp + 3.1415926535897931);
  s += 1.4544410433286079e-10 * Math.sin(4*args.D + args.F - args.L);
  s += 1.4544410433286079e-10 * Math.sin(3*args.D + args.F + args.Lp + 3.1415926535897931);
  s += 1.4544410433286079e-10 * Math.sin(3*args.D + args.F - args.L - args.Lp);
  s += 1.4544410433286079e-10 * Math.sin(3*args.D - args.F - args.L + args.Lp + 3.1415926535897931);
  s += 1.4544410433286079e-10 * Math.sin(2*args.D + 3*args.F - args.L - args.Lp);
  s += 1.4544410433286079e-10 * Math.sin(2*args.D + args.F + 3*args.L - args.Lp + 3.1415926535897931);
  s += 1.4544410433286079e-10 * Math.sin(2*args.D + args.F + 2*args.L - 2*args.Lp + 3.1415926535897931);
  s += 1.4544410433286079e-10 * Math.sin(2*args.D + args.F - 2*args.L + 2*args.Lp);
  s += 1.4544410433286079e-10 * Math.sin(2*args.D - args.L - args.zeta);
  s += 1.4544410433286079e-10 * Math.sin(2*args.D - args.F + 2*args.L - 2*args.Lp + 3.1415926535897931);
  s += 1.4544410433286079e-10 * Math.sin(2*args.D - args.F + args.L + 2*args.Lp);
  s += 1.4544410433286079e-10 * Math.sin(2*args.D - 3*args.F - args.L - args.Lp + 3.1415926535897931);
  s += 1.4544410433286079e-10 * Math.sin(args.D + args.F + 2*args.L + args.Lp + 3.1415926535897931);
  s += 1.4544410433286079e-10 * Math.sin(args.D - args.F - args.Lp);
  s += 1.4544410433286079e-10 * Math.sin(args.D - args.F - args.L - args.Lp + 3.1415926535897931);
  s += 1.4544410433286079e-10 * Math.sin(3*args.F + args.Lp + 3.1415926535897931);
  s += 1.4544410433286079e-10 * Math.sin(args.F + 2*args.L + 2*args.Lp);
  s += 1.4544410433286079e-10 * Math.sin(args.F + 2*args.L);
  s += 1.4544410433286079e-10 * Math.sin(args.F - 2*args.L + 2*args.Lp);
  s += 1.0248620582779139e-10 * Math.sin(args.F + args.EM - 2*args.Ma + 0.85835584229560125);
  s += 1.1508719789712541e-10 * Math.sin(2*args.D + args.F - args.L - 2*args.Ve + 3*args.EM + 2.833765255006603);
  s += 1.2237280739517723e-10 * Math.sin(args.F - args.L + 8*args.Ve - 13*args.EM + 1.7709535639110345);
  s += 1.2230485056959704e-10 * Math.sin(args.F - args.L - 8*args.Ve + 13*args.EM + 1.3708346063764205);
  s += 1.0587362370152208e-10 * Math.sin(2*args.D + args.F - args.L + 6*args.EM - 8*args.Ma + 0.49438912245804101);
  s += 1.2385208439066156e-10 * Math.sin(args.D + 7*args.Ve - 8*args.EM - 0.15960281512695454);
  s += 1.1873340489644855e-10 * Math.sin(args.D + 6*args.Ve - 5*args.EM - 2.9388855784253178);
  s += 1.0802546519714012e-10 * Math.sin(args.D + args.F - 34*args.EM + 41*args.Ma - 2*args.Ju - 1.9421156479001589);
  s += 1.0802546519714012e-10 * Math.sin(args.D - args.F - 34*args.EM + 41*args.Ma - 2*args.Ju - 1.9421156479001589);
  s += 1.0929145567690221e-10 * Math.sin(args.F + args.L + 2*args.Ve - 3*args.EM + 0.29958295769669235);
  s += 1.0026447882392173e-10 * Math.sin(2*args.D - args.F - args.L + 6*args.EM - 8*args.Ma + 0.4942907750401877);
  s += 1.0523821446869201e-10 * Math.sin(args.D + 4*args.Ve - 4*args.EM - 1.2169455067868105);
  s += 1.1511395751728994e-10 * Math.sin(args.D - 4*args.Ve + 5*args.EM + 0.18819424971286175);
  s += 9.6962736221915856e-11 * Math.sin(2*args.D - 3*args.F + args.EM + 0.57546350324956275);
  s += 9.9046949079039963e-11 * Math.sin(2*args.D - args.F - args.L - 15*args.Ve + 13*args.EM + 1.1388919610049815);
  s += 9.8487430609832848e-11 * Math.sin(2*args.D + args.F - args.L - 15*args.Ve + 13*args.EM + 1.1388907038690053);
  s += 1.035491097702367e-10 * Math.sin(args.F - args.L + 2*args.Ve - 3*args.EM + 0.31056873546371844);
  s += 1.2464421592918251e-10 * Math.sin(2*args.D + args.F - args.L + 6*args.Ve - 8*args.EM + 0.044257399814506451);
  s += 9.6962736221917756e-11 * Math.sin(args.F + 2*args.EM - 1.9910105241512817);
  s += 9.6962736221917756e-11 * Math.sin(args.F - 2*args.EM - 1.1505821294385117);
  s += 1.0060486498253489e-10 * Math.sin(args.F - args.L - 2*args.Ve + 3*args.EM + 2.8338697176830139);
  s += 1.0584975973912745e-10 * Math.sin(args.D - 2*args.Ve + 3*args.EM + 0.208918430816666);
  s += 9.8850887116509696e-11 * Math.sin(2*args.D - args.F + 4*args.Ve - 5*args.EM - 2.821679185894836);
  s += 1.106557014749117e-10 * Math.sin(args.F + 8*args.Ve - 13*args.EM + 1.4387524702823875);
  s += 1.1058920713214945e-10 * Math.sin(args.F - 8*args.Ve + 13*args.EM + 1.7029476086646287);
  s += 1.0070298492131386e-10 * Math.sin(2*args.D - args.F - args.EM - 2*args.Ju + 5*args.Sa + 0.26315515900599878);
  s += 1.1773222650639718e-10 * Math.sin(2*args.D - args.F - args.L + 6*args.Ve - 8*args.EM + 0.045524073007493115);
  s += 9.696273622192237e-11 * Math.sin(args.D + 2*args.F - args.EM + 1.3643029323329738);
  s += 1.1093447404725034e-10 * Math.sin(2*args.D - args.F + args.L - 4*args.EM + 8*args.Ma - 3*args.Ju + 3.1396756763416795);
  s += 1.1093722859756863e-10 * Math.sin(2*args.D - args.F + args.L + 4*args.EM - 8*args.Ma + 3*args.Ju + 0.0018153453642818949);
  s += 1.0504623839139937e-10 * Math.sin(2*args.D + args.F - args.L - 8*args.Ve + 13*args.EM + 1.5584635571472543);
  s += 1.0420910155517438e-10 * Math.sin(2*args.D + args.F - args.L + 8*args.Ve - 13*args.EM + 1.5825762676971553);
  return s;
}

// Sum the ELP/MPP02 series: perturbation, latitude T^2 (51 terms)
function Elp_pert_latT2_C(args) {
  var s = 0.0;
  s += 1.0665900984409792e-09 * Math.sin(2*args.D - args.F - args.Lp + 3.1415926535897931);
  s += 4.8904681097280962e-10 * Math.sin(args.F - args.L + 18*args.Ve - 16*args.EM - 2.7304059209187383);
  s += 4.8885385067545347e-10 * Math.sin(args.F + args.L - 18*args.Ve + 16*args.EM - 0.41118664672025107);
  s += 4.3633231299858244e-10 * Math.sin(2*args.D - args.F + args.Lp);
  s += 2.9088820866572159e-10 * Math.sin(2*args.D + args.F - args.Lp + 3.1415926535897931);
  s += 2.9088820866572159e-10 * Math.sin(2*args.D + args.F - args.L - args.Lp + 3.1415926535897931);
  s += 2.4240684055476799e-10 * Math.sin(2*args.D - args.F - args.L - args.Lp + 3.1415926535897931);
  s += 2.4240684055476799e-10 * Math.sin(args.F + args.L - args.Lp + 3.1415926535897931);
  s += 2.4240684055476799e-10 * Math.sin(args.F + args.Lp);
  s += 1.9392547244381442e-10 * Math.sin(args.F + args.L + args.Lp);
  s += 1.9392547244381442e-10 * Math.sin(args.F - args.Lp + 3.1415926535897931);
  s += 1.9392547244381442e-10 * Math.sin(args.F - args.L + args.Lp);
  s += 1.9392547244381442e-10 * Math.sin(args.F - args.L - args.Lp + 3.1415926535897931);
  s += 9.696273622190721e-11 * Math.sin(2*args.D - args.F - 2*args.Lp + 3.1415926535897931);
  s += 5.4037347775791153e-11 * Math.sin(args.F + 2*args.L - 18*args.Ve + 16*args.EM - 0.41122585751076529);
  s += 5.2360121356693786e-11 * Math.sin(args.F + 18*args.Ve - 16*args.EM - 2.730372517901861);
  s += 5.4525315190340425e-11 * Math.sin(args.F + args.L - 10*args.Ve + 3*args.EM + 0.30220217446902908);
  s += 5.4525315190340425e-11 * Math.sin(args.F - args.L + 10*args.Ve - 3*args.EM + 2.8393904791207643);
  s += 4.8481368110953605e-11 * Math.sin(2*args.D - args.F + args.L - args.Lp + 3.1415926535897931);
  s += 1.6921165486368279e-11 * Math.sin(2*args.D - args.F + args.L - 18*args.Ve + 16*args.EM - 0.41118421170413311);
  s += 1.6887641219150218e-11 * Math.sin(2*args.D - args.F - args.L + 18*args.Ve - 16*args.EM - 2.7304088791570802);
  s += 1.5690000010268436e-11 * Math.sin(args.F - args.L - 4*args.EM + 8*args.Ma - 3*args.Ju + 1.9466819350164537);
  s += 1.5687391082331434e-11 * Math.sin(args.F - args.L + 4*args.EM - 8*args.Ma + 3*args.Ju + 1.1949432547674268);
  s += 1.4394127329343046e-11 * Math.sin(args.F + args.L + 4*args.EM - 8*args.Ma + 3*args.Ju + 1.1798125324836339);
  s += 1.4390582209616396e-11 * Math.sin(args.F + args.L - 4*args.EM + 8*args.Ma - 3*args.Ju + 1.9617194314457165);
  s += 1.3609746119340139e-11 * Math.sin(2*args.D - args.F + 5*args.Ve - 6*args.EM + 2.0300917491470618);
  s += 1.34713453557071e-11 * Math.sin(args.F - 4*args.EM + 8*args.Ma - 3*args.Ju - 1.3418187462816327);
  s += 1.3470094759694146e-11 * Math.sin(args.F + 4*args.EM - 8*args.Ma + 3*args.Ju - 1.799747081005197);
  s += 1.0918210256868514e-11 * Math.sin(2*args.D + args.F - 18*args.Ve + 16*args.EM - 0.41115369762464116);
  s += 1.0585232329464558e-11 * Math.sin(2*args.D + args.F - 2*args.L + 18*args.Ve - 16*args.EM - 2.7304468448795274);
  s += 9.4298935150663952e-12 * Math.sin(2*args.D + args.F + args.L - 18*args.Ve + 16*args.EM - 0.41118670789935496);
  s += 9.3496165502069813e-12 * Math.sin(2*args.D + args.F - args.L + 18*args.Ve - 16*args.EM - 2.7304078155343494);
  s += 8.935163650623284e-12 * Math.sin(args.D + args.EM + 2*args.Ju - 5*args.Sa - 1.0288252364841795);
  s += 7.75135386221734e-12 * Math.sin(args.D + args.F - 15*args.Ve + 12*args.EM + 0.76879276937983421);
  s += 7.75135386221734e-12 * Math.sin(args.D - args.F - 15*args.Ve + 12*args.EM + 0.76879276937983421);
  s += 7.3756291668622077e-12 * Math.sin(args.D + args.EM - 2*args.Ju - 2.4403816077744089);
  s += 7.0715288490719341e-12 * Math.sin(args.F + 2*args.Ju - 5*args.Sa + 0.593136897815286);
  s += 7.0715288490719341e-12 * Math.sin(args.F - 2*args.Ju + 5*args.Sa + 2.5484557557745071);
  s += 6.4550210780761727e-12 * Math.sin(args.D + 8*args.Ve - 12*args.EM - 0.44291779581503188);
  s += 8.1177136645163237e-12 * Math.sin(2*args.D - args.F - 4*args.EM + 8*args.Ma - 3*args.Ju + 1.5671080892623457);
  s += 8.1324536310223085e-12 * Math.sin(2*args.D - args.F + 4*args.EM - 8*args.Ma + 3*args.Ju + 1.5694869244402403);
  s += 5.7364777055415415e-12 * Math.sin(args.D + 2*args.Ma - 0.7575132857389465);
  s += 5.5891567152834919e-12 * Math.sin(2*args.D - args.F - 8*args.Ve + 13*args.EM + 2.1459309684095236);
  s += 5.5579994436356603e-12 * Math.sin(2*args.D - args.F + 8*args.Ve - 13*args.EM + 0.99272820894578906);
  s += 6.047498091714801e-12 * Math.sin(args.F + 10*args.Ve - 3*args.EM + 2.8392750521364123);
  s += 6.024577670807095e-12 * Math.sin(args.F + 2*args.L - 10*args.Ve + 3*args.EM + 0.30226043675193714);
  s += 5.3804891393293715e-12 * Math.sin(2*args.D - args.F - 8*args.EM + 15*args.Ma - 2.5977602397172737);
  s += 5.247822181000042e-12 * Math.sin(2*args.D - args.F + 8*args.EM - 15*args.Ma - 0.54616971041037543);
  s += 4.9846330517781266e-12 * Math.sin(args.F + 3*args.L - 18*args.Ve + 16*args.EM - 0.41123876441928486);
  s += 5.3573522973966919e-12 * Math.sin(args.D + args.EM + args.Ju - 1.3297414028753127);
  s += 5.0617397292258945e-12 * Math.sin(args.D + args.EM - args.Sa + 0.13443496491489398);
  return s;
}

// Sum the ELP/MPP02 series: perturbation, distance T^0 (31 terms)
function Elp_pert_distT0_C(args) {
  var s = 0.0;
  s += 1.05861899454692 * Math.sin(2*args.D - args.L + 2*args.EM - 2*args.Ju + 1.5728647584223501);
  s += 0.72805201953374787 * Math.sin(2*args.L - 18*args.Ve + 16*args.EM + 1.1075151549609825);
  s += 0.68280880054648996 * Math.sin(18*args.Ve - 16*args.EM - 1.1074996841672626);
  s += 0.59826466595576788 * Math.sin(2*args.D - args.L + 3*args.Ve - 3*args.EM + 1.5705635207644568);
  s += 0.41020630963524468 * Math.sin(2*args.D - args.L + 2*args.EM - 3*args.Ju - 1.3952025962698975);
  s += 0.45646999999997689 * Math.sin(args.F - args.L - args.zeta - 1.5708183179434718);
  s += 0.45276999999998541 * Math.sin(args.F + args.L - args.zeta + 1.5707739865804713);
  s += 0.20476399084864377 * Math.sin(2*args.D + args.L - 18*args.Ve + 16*args.EM + 1.1075141371900419);
  s += 0.20371387499613716 * Math.sin(2*args.D - args.L + 18*args.Ve - 16*args.EM - 1.1075128369872382);
  s += 0.20498740218224085 * Math.sin(2*args.D - args.EM + args.Ju + 1.539285680150932);
  s += 0.16720763217250953 * Math.sin(args.L + 4*args.EM - 8*args.Ma + 3*args.Ju - 2.8878006779750454);
  s += 0.16718951595312512 * Math.sin(args.L - 4*args.EM + 8*args.Ma - 3*args.Ju + 2.8878097870876402);
  s += 0.13475149516881021 * Math.sin(2*args.D - 18*args.Ve + 16*args.EM + 1.1075243738886726);
  s += 0.1267148483648885 * Math.sin(2*args.D - 2*args.L + 18*args.Ve - 16*args.EM - 1.1075118776575863);
  s += 0.16659269878102087 * Math.sin(2*args.D - 2*args.Ve + 2*args.EM + 1.5644295199502878);
  s += 0.15747892040940964 * Math.sin(2*args.D - args.L - args.EM + args.Ju + 1.5403418727091669);
  s += 0.14451289627322528 * Math.sin(args.L - 2*args.EM + 2*args.Ju + 1.5711596862453192);
  s += 0.11192876215558543 * Math.sin(2*args.D + 4*args.EM - 8*args.Ma + 3*args.Ju - 2.8555572972585894);
  s += 0.11181140455066313 * Math.sin(2*args.D - 4*args.EM + 8*args.Ma - 3*args.Ju + 2.8556190355867574);
  s += 0.13828052365278862 * Math.sin(args.L - args.Ve + args.EM - 1.5710083216337583);
  s += 0.11047692012599106 * Math.sin(2*args.D - args.L + 4*args.EM - 8*args.Ma + 3*args.Ju - 2.8469488925985131);
  s += 0.11038616847914615 * Math.sin(2*args.D - args.L - 4*args.EM + 8*args.Ma - 3*args.Ju + 2.8469755485544357);
  s += 0.12681900458160425 * Math.sin(args.L - args.EM + args.Ju + 1.5491285841645448);
  s += 0.1235353734378906 * Math.sin(2*args.D - args.Ve + args.EM - 1.5705142212623924);
  s += 0.12058657100742542 * Math.sin(2*args.D - args.L + 2*args.Ve - 2*args.EM - 1.5707746903572997);
  s += 0.12028056662794633 * Math.sin(args.L + args.Ve - args.EM + 1.5710672741395657);
  s += 0.11613190138640254 * Math.sin(2*args.D - args.L - 2*args.Ve + 2*args.EM + 1.5653496651161565);
  s += 0.10524828944696524 * Math.sin(args.L + args.EM - args.Ju - 1.5514708573239497);
  s += 0.10688999999997963 * Math.sin(2*args.D - args.F + args.zeta - 1.5707802697657782);
  s += 0.10510671048105651 * Math.sin(2*args.D - 2*args.EM + 2*args.Ju - 1.5872052776383052);
  s += 0.10069486820979097 * Math.sin(2*args.D - args.L - args.Ve + args.EM - 1.5705017443420144);
  return s;
}

// Sum the ELP/MPP02 series: perturbation, distance T^1 (40 terms)
function Elp_pert_distT1_C(args) {
  var s = 0.0;
  s += 0.51395000000000002 * Math.sin(2*args.D - args.Lp + 1.5707963267948966);
  s += 0.38245000000000001 * Math.sin(2*args.D - args.L - args.Lp + 1.5707963267948966);
  s += 0.32654 * Math.sin(args.L - args.Lp + 1.5707963267948966);
  s += 0.26395999999999997 * Math.sin(args.L + args.Lp - 1.5707963267948966);
  s += 0.12302 * Math.sin(args.Lp - 1.5707963267948966);
  s += 0.077539999999999998 * Math.sin(2*args.D + args.Lp - 1.5707963267948966);
  s += 0.060679999999999998 * Math.sin(2*args.D - args.L + args.Lp - 1.5707963267948966);
  s += 0.049700000000000001 * Math.sin(2*args.D - 2*args.Lp + 1.5707963267948966);
  s += 0.041939999999999998 * Math.sin(args.D + args.Lp + 1.5707963267948966);
  s += 0.032219999999999999 * Math.sin(2*args.D + args.L - args.Lp + 1.5707963267948966);
  s += 0.02529 * Math.sin(2*args.D - 2*args.L - args.Lp - 1.5707963267948966);
  s += 0.024899999999999999 * Math.sin(2*args.D - args.L - 2*args.Lp + 1.5707963267948966);
  s += 0.017639999999999999 * Math.sin(2*args.L - args.Lp + 1.5707963267948966);
  s += 0.012568406893972081 * Math.sin(2*args.L - 18*args.Ve + 16*args.EM - 0.43125432463458041);
  s += 0.011784003379098401 * Math.sin(18*args.Ve - 16*args.EM + 0.43125452092062266);
  s += 0.014489999999999999 * Math.sin(2*args.L + args.Lp - 1.5707963267948966);
  s += 0.013690897470438234 * Math.sin(2*args.D - 1.5393863453696932);
  s += 0.011860000000000001 * Math.sin(2*args.D - args.L + 2*args.Lp - 1.5707963267948966);
  s += 0.010659999999999999 * Math.sin(args.L - 2*args.Lp + 1.5707963267948966);
  s += 0.0099299999999999996 * Math.sin(4*args.D - args.L - args.Lp + 1.5707963267948966);
  s += 0.0065799999999999999 * Math.sin(2*args.D + args.L + args.Lp - 1.5707963267948966);
  s += 0.0064753622005591753 * Math.sin(2*args.D - args.L - 1.5677150651018386);
  s += 0.0058700000000000002 * Math.sin(args.L + 2*args.Lp - 1.5707963267948966);
  s += 0.005227942332227984 * Math.sin(args.L + 4*args.EM - 8*args.Ma + 3*args.Ju - 1.4492325250608402);
  s += 0.0052275372671141095 * Math.sin(args.L - 4*args.EM + 8*args.Ma - 3*args.Ju + 1.4492333367993613);
  s += 0.0053600000000000002 * Math.sin(2*args.Lp - 1.5707963267948966);
  s += 0.0047600000000000003 * Math.sin(4*args.D - 2*args.L - args.Lp + 1.5707963267948966);
  s += 0.0035343517042719782 * Math.sin(2*args.D + args.L - 18*args.Ve + 16*args.EM - 0.43127104139345274);
  s += 0.0035161394648211041 * Math.sin(2*args.D - args.L + 18*args.Ve - 16*args.EM + 0.43127313306199883);
  s += 0.0039399999999999999 * Math.sin(4*args.D - args.Lp + 1.5707963267948966);
  s += 0.00331 * Math.sin(2*args.D + args.L - 2*args.Lp + 1.5707963267948966);
  s += 0.0030999999999999999 * Math.sin(2*args.D - 3*args.Lp + 1.5707963267948966);
  s += 0.0023260935648086235 * Math.sin(2*args.D - 18*args.Ve + 16*args.EM - 0.43128682431118609);
  s += 0.0022062438129107935 * Math.sin(2*args.D - args.L + 2*args.EM - 3*args.Ju - 0.50830252207845206);
  s += 0.0021868024776725554 * Math.sin(2*args.D - 2*args.L + 18*args.Ve - 16*args.EM + 0.43128804928687492);
  s += 0.0023500000000000001 * Math.sin(args.D + args.L + args.Lp + 1.5707963267948966);
  s += 0.0023500000000000001 * Math.sin(args.L - 1.5707963267948966);
  s += 0.00233 * Math.sin( + 1.5707963267948966);
  s += 0.00214 * Math.sin(args.D - args.L + args.Lp - 1.5707963267948966);
  s += 0.0021299999999999999 * Math.sin(2*args.D + 2*args.L - args.Lp + 1.5707963267948966);
  return s;
}

// Sum the ELP/MPP02 series: perturbation, distance T^2 (17 terms)
function Elp_pert_distT2_C(args) {
  var s = 0.0;
  s += 0.00149 * Math.sin(2*args.D - args.Lp + 1.5707963267948966);
  s += 0.0011100000000000001 * Math.sin(2*args.D - args.L - args.Lp + 1.5707963267948966);
  s += 0.00095 * Math.sin(args.L - args.Lp + 1.5707963267948966);
  s += 0.00076999999999999996 * Math.sin(args.L + args.Lp - 1.5707963267948966);
  s += 0.00036000000000000002 * Math.sin(args.Lp - 1.5707963267948966);
  s += 0.00023000000000000001 * Math.sin(2*args.D + args.Lp - 1.5707963267948966);
  s += 0.00018000000000000001 * Math.sin(2*args.D - args.L + args.Lp - 1.5707963267948966);
  s += 0.0001165011244295334 * Math.sin(2*args.L - 18*args.Ve + 16*args.EM - 1.9820606433545078);
  s += 0.00010925892459976593 * Math.sin(18*args.Ve - 16*args.EM + 1.9820513524573191);
  s += 0.00013999999999999999 * Math.sin(2*args.D - 2*args.Lp + 1.5707963267948966);
  s += 0.00012 * Math.sin(args.D + args.Lp + 1.5707963267948966);
  s += 9.0000000000000006e-05 * Math.sin(2*args.D + args.L - args.Lp + 1.5707963267948966);
  s += 6.4565029040009129e-05 * Math.sin(args.L + 4*args.EM - 8*args.Ma + 3*args.Ju - 0.3830735088389367);
  s += 6.4553285355187372e-05 * Math.sin(args.L - 4*args.EM + 8*args.Ma - 3*args.Ju + 0.38300618630496996);
  s += 6.9999999999999994e-05 * Math.sin(2*args.D - args.L - 2*args.Lp + 1.5707963267948966);
  s += 6.9999999999999994e-05 * Math.sin(2*args.D - 2*args.L - args.Lp - 1.5707963267948966);
  s += 5.0000000000000002e-05 * Math.sin(2*args.L - args.Lp + 1.5707963267948966);
  return s;
}

// Sum the ELP/MPP02 series: perturbation, distance T^3 (0 term)
function Elp_pert_distT3_C(args) {
  var s = 0.0;
  return s;
}

